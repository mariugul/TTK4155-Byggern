
Byggern.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         000000a6  00800100  0000100a  0000109e  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000100a  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000000a  008001a6  008001a6  00001144  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00001144  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  000011a0  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000240  00000000  00000000  000011dc  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000020c8  00000000  00000000  0000141c  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000e1b  00000000  00000000  000034e4  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000ece  00000000  00000000  000042ff  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000460  00000000  00000000  000051d0  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000080b  00000000  00000000  00005630  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000ed5  00000000  00000000  00005e3b  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000001f8  00000000  00000000  00006d10  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 b4 01 	jmp	0x368	; 0x368 <__ctors_end>
       4:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
       8:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
       c:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      10:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      14:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      18:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      1c:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      20:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      24:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      28:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      2c:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      30:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      34:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      38:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      3c:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      40:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      44:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      48:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      4c:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      50:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      54:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      58:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      5c:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      60:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      64:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      68:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      6c:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>

00000070 <__trampolines_end>:
	...
      78:	00 06       	cpc	r0, r16
      7a:	5f 5f       	subi	r21, 0xFF	; 255
      7c:	06 00       	.word	0x0006	; ????
      7e:	00 00       	nop
      80:	00 07       	cpc	r16, r16
      82:	07 00       	.word	0x0007	; ????
      84:	07 07       	cpc	r16, r23
      86:	00 00       	nop
      88:	14 7f       	andi	r17, 0xF4	; 244
      8a:	7f 14       	cp	r7, r15
      8c:	7f 7f       	andi	r23, 0xFF	; 255
      8e:	14 00       	.word	0x0014	; ????
      90:	24 2e       	mov	r2, r20
      92:	6b 6b       	ori	r22, 0xBB	; 187
      94:	3a 12       	cpse	r3, r26
      96:	00 00       	nop
      98:	46 66       	ori	r20, 0x66	; 102
      9a:	30 18       	sub	r3, r0
      9c:	0c 66       	ori	r16, 0x6C	; 108
      9e:	62 00       	.word	0x0062	; ????
      a0:	30 7a       	andi	r19, 0xA0	; 160
      a2:	4f 5d       	subi	r20, 0xDF	; 223
      a4:	37 7a       	andi	r19, 0xA7	; 167
      a6:	48 00       	.word	0x0048	; ????
      a8:	04 07       	cpc	r16, r20
      aa:	03 00       	.word	0x0003	; ????
      ac:	00 00       	nop
      ae:	00 00       	nop
      b0:	00 1c       	adc	r0, r0
      b2:	3e 63       	ori	r19, 0x3E	; 62
      b4:	41 00       	.word	0x0041	; ????
      b6:	00 00       	nop
      b8:	00 41       	sbci	r16, 0x10	; 16
      ba:	63 3e       	cpi	r22, 0xE3	; 227
      bc:	1c 00       	.word	0x001c	; ????
      be:	00 00       	nop
      c0:	08 2a       	or	r0, r24
      c2:	3e 1c       	adc	r3, r14
      c4:	1c 3e       	cpi	r17, 0xEC	; 236
      c6:	2a 08       	sbc	r2, r10
      c8:	08 08       	sbc	r0, r8
      ca:	3e 3e       	cpi	r19, 0xEE	; 238
      cc:	08 08       	sbc	r0, r8
      ce:	00 00       	nop
      d0:	00 a0       	ldd	r0, Z+32	; 0x20
      d2:	e0 60       	ori	r30, 0x00	; 0
      d4:	00 00       	nop
      d6:	00 00       	nop
      d8:	08 08       	sbc	r0, r8
      da:	08 08       	sbc	r0, r8
      dc:	08 08       	sbc	r0, r8
      de:	00 00       	nop
      e0:	00 00       	nop
      e2:	60 60       	ori	r22, 0x00	; 0
      e4:	00 00       	nop
      e6:	00 00       	nop
      e8:	60 30       	cpi	r22, 0x00	; 0
      ea:	18 0c       	add	r1, r8
      ec:	06 03       	mulsu	r16, r22
      ee:	01 00       	.word	0x0001	; ????
      f0:	3e 7f       	andi	r19, 0xFE	; 254
      f2:	59 4d       	sbci	r21, 0xD9	; 217
      f4:	7f 3e       	cpi	r23, 0xEF	; 239
      f6:	00 00       	nop
      f8:	42 42       	sbci	r20, 0x22	; 34
      fa:	7f 7f       	andi	r23, 0xFF	; 255
      fc:	40 40       	sbci	r20, 0x00	; 0
      fe:	00 00       	nop
     100:	62 73       	andi	r22, 0x32	; 50
     102:	59 49       	sbci	r21, 0x99	; 153
     104:	6f 66       	ori	r22, 0x6F	; 111
     106:	00 00       	nop
     108:	22 63       	ori	r18, 0x32	; 50
     10a:	49 49       	sbci	r20, 0x99	; 153
     10c:	7f 36       	cpi	r23, 0x6F	; 111
     10e:	00 00       	nop
     110:	18 1c       	adc	r1, r8
     112:	16 13       	cpse	r17, r22
     114:	7f 7f       	andi	r23, 0xFF	; 255
     116:	10 00       	.word	0x0010	; ????
     118:	27 67       	ori	r18, 0x77	; 119
     11a:	45 45       	sbci	r20, 0x55	; 85
     11c:	7d 39       	cpi	r23, 0x9D	; 157
     11e:	00 00       	nop
     120:	3c 7e       	andi	r19, 0xEC	; 236
     122:	4b 49       	sbci	r20, 0x9B	; 155
     124:	79 30       	cpi	r23, 0x09	; 9
     126:	00 00       	nop
     128:	03 63       	ori	r16, 0x33	; 51
     12a:	71 19       	sub	r23, r1
     12c:	0f 07       	cpc	r16, r31
     12e:	00 00       	nop
     130:	36 7f       	andi	r19, 0xF6	; 246
     132:	49 49       	sbci	r20, 0x99	; 153
     134:	7f 36       	cpi	r23, 0x6F	; 111
     136:	00 00       	nop
     138:	06 4f       	sbci	r16, 0xF6	; 246
     13a:	49 69       	ori	r20, 0x99	; 153
     13c:	3f 1e       	adc	r3, r31
     13e:	00 00       	nop
     140:	00 00       	nop
     142:	6c 6c       	ori	r22, 0xCC	; 204
     144:	00 00       	nop
     146:	00 00       	nop
     148:	00 a0       	ldd	r0, Z+32	; 0x20
     14a:	ec 6c       	ori	r30, 0xCC	; 204
     14c:	00 00       	nop
     14e:	00 00       	nop
     150:	08 1c       	adc	r0, r8
     152:	36 63       	ori	r19, 0x36	; 54
     154:	41 00       	.word	0x0041	; ????
     156:	00 00       	nop
     158:	14 14       	cp	r1, r4
     15a:	14 14       	cp	r1, r4
     15c:	14 14       	cp	r1, r4
     15e:	00 00       	nop
     160:	00 41       	sbci	r16, 0x10	; 16
     162:	63 36       	cpi	r22, 0x63	; 99
     164:	1c 08       	sbc	r1, r12
     166:	00 00       	nop
     168:	02 03       	mulsu	r16, r18
     16a:	51 59       	subi	r21, 0x91	; 145
     16c:	0f 06       	cpc	r0, r31
     16e:	00 00       	nop
     170:	3e 7f       	andi	r19, 0xFE	; 254
     172:	41 5d       	subi	r20, 0xD1	; 209
     174:	5d 1f       	adc	r21, r29
     176:	1e 00       	.word	0x001e	; ????
     178:	7c 7e       	andi	r23, 0xEC	; 236
     17a:	13 13       	cpse	r17, r19
     17c:	7e 7c       	andi	r23, 0xCE	; 206
     17e:	00 00       	nop
     180:	41 7f       	andi	r20, 0xF1	; 241
     182:	7f 49       	sbci	r23, 0x9F	; 159
     184:	49 7f       	andi	r20, 0xF9	; 249
     186:	36 00       	.word	0x0036	; ????
     188:	1c 3e       	cpi	r17, 0xEC	; 236
     18a:	63 41       	sbci	r22, 0x13	; 19
     18c:	41 63       	ori	r20, 0x31	; 49
     18e:	22 00       	.word	0x0022	; ????
     190:	41 7f       	andi	r20, 0xF1	; 241
     192:	7f 41       	sbci	r23, 0x1F	; 31
     194:	63 7f       	andi	r22, 0xF3	; 243
     196:	1c 00       	.word	0x001c	; ????
     198:	41 7f       	andi	r20, 0xF1	; 241
     19a:	7f 49       	sbci	r23, 0x9F	; 159
     19c:	5d 41       	sbci	r21, 0x1D	; 29
     19e:	63 00       	.word	0x0063	; ????
     1a0:	41 7f       	andi	r20, 0xF1	; 241
     1a2:	7f 49       	sbci	r23, 0x9F	; 159
     1a4:	1d 01       	movw	r2, r26
     1a6:	03 00       	.word	0x0003	; ????
     1a8:	1c 3e       	cpi	r17, 0xEC	; 236
     1aa:	63 41       	sbci	r22, 0x13	; 19
     1ac:	51 73       	andi	r21, 0x31	; 49
     1ae:	72 00       	.word	0x0072	; ????
     1b0:	7f 7f       	andi	r23, 0xFF	; 255
     1b2:	08 08       	sbc	r0, r8
     1b4:	7f 7f       	andi	r23, 0xFF	; 255
     1b6:	00 00       	nop
     1b8:	00 41       	sbci	r16, 0x10	; 16
     1ba:	7f 7f       	andi	r23, 0xFF	; 255
     1bc:	41 00       	.word	0x0041	; ????
     1be:	00 00       	nop
     1c0:	30 70       	andi	r19, 0x00	; 0
     1c2:	40 41       	sbci	r20, 0x10	; 16
     1c4:	7f 3f       	cpi	r23, 0xFF	; 255
     1c6:	01 00       	.word	0x0001	; ????
     1c8:	41 7f       	andi	r20, 0xF1	; 241
     1ca:	7f 08       	sbc	r7, r15
     1cc:	1c 77       	andi	r17, 0x7C	; 124
     1ce:	63 00       	.word	0x0063	; ????
     1d0:	41 7f       	andi	r20, 0xF1	; 241
     1d2:	7f 41       	sbci	r23, 0x1F	; 31
     1d4:	40 60       	ori	r20, 0x00	; 0
     1d6:	70 00       	.word	0x0070	; ????
     1d8:	7f 7f       	andi	r23, 0xFF	; 255
     1da:	06 0c       	add	r0, r6
     1dc:	06 7f       	andi	r16, 0xF6	; 246
     1de:	7f 00       	.word	0x007f	; ????
     1e0:	7f 7f       	andi	r23, 0xFF	; 255
     1e2:	06 0c       	add	r0, r6
     1e4:	18 7f       	andi	r17, 0xF8	; 248
     1e6:	7f 00       	.word	0x007f	; ????
     1e8:	1c 3e       	cpi	r17, 0xEC	; 236
     1ea:	63 41       	sbci	r22, 0x13	; 19
     1ec:	63 3e       	cpi	r22, 0xE3	; 227
     1ee:	1c 00       	.word	0x001c	; ????
     1f0:	41 7f       	andi	r20, 0xF1	; 241
     1f2:	7f 49       	sbci	r23, 0x9F	; 159
     1f4:	09 0f       	add	r16, r25
     1f6:	06 00       	.word	0x0006	; ????
     1f8:	1e 3f       	cpi	r17, 0xFE	; 254
     1fa:	21 71       	andi	r18, 0x11	; 17
     1fc:	7f 5e       	subi	r23, 0xEF	; 239
     1fe:	00 00       	nop
     200:	41 7f       	andi	r20, 0xF1	; 241
     202:	7f 19       	sub	r23, r15
     204:	39 6f       	ori	r19, 0xF9	; 249
     206:	46 00       	.word	0x0046	; ????
     208:	26 67       	ori	r18, 0x76	; 118
     20a:	4d 59       	subi	r20, 0x9D	; 157
     20c:	7b 32       	cpi	r23, 0x2B	; 43
     20e:	00 00       	nop
     210:	03 41       	sbci	r16, 0x13	; 19
     212:	7f 7f       	andi	r23, 0xFF	; 255
     214:	41 03       	mulsu	r20, r17
     216:	00 00       	nop
     218:	7f 7f       	andi	r23, 0xFF	; 255
     21a:	40 40       	sbci	r20, 0x00	; 0
     21c:	7f 7f       	andi	r23, 0xFF	; 255
     21e:	00 00       	nop
     220:	1f 3f       	cpi	r17, 0xFF	; 255
     222:	60 60       	ori	r22, 0x00	; 0
     224:	3f 1f       	adc	r19, r31
     226:	00 00       	nop
     228:	7f 7f       	andi	r23, 0xFF	; 255
     22a:	30 18       	sub	r3, r0
     22c:	30 7f       	andi	r19, 0xF0	; 240
     22e:	7f 00       	.word	0x007f	; ????
     230:	63 77       	andi	r22, 0x73	; 115
     232:	1c 08       	sbc	r1, r12
     234:	1c 77       	andi	r17, 0x7C	; 124
     236:	63 00       	.word	0x0063	; ????
     238:	07 4f       	sbci	r16, 0xF7	; 247
     23a:	78 78       	andi	r23, 0x88	; 136
     23c:	4f 07       	cpc	r20, r31
     23e:	00 00       	nop
     240:	67 73       	andi	r22, 0x37	; 55
     242:	59 4d       	sbci	r21, 0xD9	; 217
     244:	47 63       	ori	r20, 0x37	; 55
     246:	71 00       	.word	0x0071	; ????
     248:	00 7f       	andi	r16, 0xF0	; 240
     24a:	7f 41       	sbci	r23, 0x1F	; 31
     24c:	41 00       	.word	0x0041	; ????
     24e:	00 00       	nop
     250:	01 03       	mulsu	r16, r17
     252:	06 0c       	add	r0, r6
     254:	18 30       	cpi	r17, 0x08	; 8
     256:	60 00       	.word	0x0060	; ????
     258:	00 41       	sbci	r16, 0x10	; 16
     25a:	41 7f       	andi	r20, 0xF1	; 241
     25c:	7f 00       	.word	0x007f	; ????
     25e:	00 00       	nop
     260:	08 0c       	add	r0, r8
     262:	06 03       	mulsu	r16, r22
     264:	06 0c       	add	r0, r6
     266:	08 00       	.word	0x0008	; ????
     268:	80 80       	ld	r8, Z
     26a:	80 80       	ld	r8, Z
     26c:	80 80       	ld	r8, Z
     26e:	80 80       	ld	r8, Z
     270:	00 00       	nop
     272:	03 07       	cpc	r16, r19
     274:	04 00       	.word	0x0004	; ????
     276:	00 00       	nop
     278:	20 74       	andi	r18, 0x40	; 64
     27a:	54 54       	subi	r21, 0x44	; 68
     27c:	3c 78       	andi	r19, 0x8C	; 140
     27e:	40 00       	.word	0x0040	; ????
     280:	41 3f       	cpi	r20, 0xF1	; 241
     282:	7f 44       	sbci	r23, 0x4F	; 79
     284:	44 7c       	andi	r20, 0xC4	; 196
     286:	38 00       	.word	0x0038	; ????
     288:	38 7c       	andi	r19, 0xC8	; 200
     28a:	44 44       	sbci	r20, 0x44	; 68
     28c:	6c 28       	or	r6, r12
     28e:	00 00       	nop
     290:	30 78       	andi	r19, 0x80	; 128
     292:	48 49       	sbci	r20, 0x98	; 152
     294:	3f 7f       	andi	r19, 0xFF	; 255
     296:	40 00       	.word	0x0040	; ????
     298:	38 7c       	andi	r19, 0xC8	; 200
     29a:	54 54       	subi	r21, 0x44	; 68
     29c:	5c 18       	sub	r5, r12
     29e:	00 00       	nop
     2a0:	48 7e       	andi	r20, 0xE8	; 232
     2a2:	7f 49       	sbci	r23, 0x9F	; 159
     2a4:	03 02       	muls	r16, r19
     2a6:	00 00       	nop
     2a8:	98 bc       	out	0x28, r9	; 40
     2aa:	a4 a4       	ldd	r10, Z+44	; 0x2c
     2ac:	f8 7c       	andi	r31, 0xC8	; 200
     2ae:	04 00       	.word	0x0004	; ????
     2b0:	41 7f       	andi	r20, 0xF1	; 241
     2b2:	7f 08       	sbc	r7, r15
     2b4:	04 7c       	andi	r16, 0xC4	; 196
     2b6:	78 00       	.word	0x0078	; ????
     2b8:	00 44       	sbci	r16, 0x40	; 64
     2ba:	7d 7d       	andi	r23, 0xDD	; 221
     2bc:	40 00       	.word	0x0040	; ????
     2be:	00 00       	nop
     2c0:	40 c4       	rjmp	.+2176   	; 0xb42 <vfprintf+0x354>
     2c2:	84 fd       	sbrc	r24, 4
     2c4:	7d 00       	.word	0x007d	; ????
     2c6:	00 00       	nop
     2c8:	41 7f       	andi	r20, 0xF1	; 241
     2ca:	7f 10       	cpse	r7, r15
     2cc:	38 6c       	ori	r19, 0xC8	; 200
     2ce:	44 00       	.word	0x0044	; ????
     2d0:	00 41       	sbci	r16, 0x10	; 16
     2d2:	7f 7f       	andi	r23, 0xFF	; 255
     2d4:	40 00       	.word	0x0040	; ????
     2d6:	00 00       	nop
     2d8:	7c 7c       	andi	r23, 0xCC	; 204
     2da:	0c 18       	sub	r0, r12
     2dc:	0c 7c       	andi	r16, 0xCC	; 204
     2de:	78 00       	.word	0x0078	; ????
     2e0:	7c 7c       	andi	r23, 0xCC	; 204
     2e2:	04 04       	cpc	r0, r4
     2e4:	7c 78       	andi	r23, 0x8C	; 140
     2e6:	00 00       	nop
     2e8:	38 7c       	andi	r19, 0xC8	; 200
     2ea:	44 44       	sbci	r20, 0x44	; 68
     2ec:	7c 38       	cpi	r23, 0x8C	; 140
     2ee:	00 00       	nop
     2f0:	84 fc       	sbrc	r8, 4
     2f2:	f8 a4       	ldd	r15, Y+40	; 0x28
     2f4:	24 3c       	cpi	r18, 0xC4	; 196
     2f6:	18 00       	.word	0x0018	; ????
     2f8:	18 3c       	cpi	r17, 0xC8	; 200
     2fa:	24 a4       	ldd	r2, Z+44	; 0x2c
     2fc:	f8 fc       	.word	0xfcf8	; ????
     2fe:	84 00       	.word	0x0084	; ????
     300:	44 7c       	andi	r20, 0xC4	; 196
     302:	78 44       	sbci	r23, 0x48	; 72
     304:	1c 18       	sub	r1, r12
     306:	00 00       	nop
     308:	48 5c       	subi	r20, 0xC8	; 200
     30a:	54 54       	subi	r21, 0x44	; 68
     30c:	74 24       	eor	r7, r4
     30e:	00 00       	nop
     310:	00 04       	cpc	r0, r0
     312:	3e 7f       	andi	r19, 0xFE	; 254
     314:	44 24       	eor	r4, r4
     316:	00 00       	nop
     318:	3c 7c       	andi	r19, 0xCC	; 204
     31a:	40 40       	sbci	r20, 0x00	; 0
     31c:	3c 7c       	andi	r19, 0xCC	; 204
     31e:	40 00       	.word	0x0040	; ????
     320:	1c 3c       	cpi	r17, 0xCC	; 204
     322:	60 60       	ori	r22, 0x00	; 0
     324:	3c 1c       	adc	r3, r12
     326:	00 00       	nop
     328:	3c 7c       	andi	r19, 0xCC	; 204
     32a:	60 30       	cpi	r22, 0x00	; 0
     32c:	60 7c       	andi	r22, 0xC0	; 192
     32e:	3c 00       	.word	0x003c	; ????
     330:	44 6c       	ori	r20, 0xC4	; 196
     332:	38 10       	cpse	r3, r8
     334:	38 6c       	ori	r19, 0xC8	; 200
     336:	44 00       	.word	0x0044	; ????
     338:	9c bc       	out	0x2c, r9	; 44
     33a:	a0 a0       	ldd	r10, Z+32	; 0x20
     33c:	fc 7c       	andi	r31, 0xCC	; 204
     33e:	00 00       	nop
     340:	4c 64       	ori	r20, 0x4C	; 76
     342:	74 5c       	subi	r23, 0xC4	; 196
     344:	4c 64       	ori	r20, 0x4C	; 76
     346:	00 00       	nop
     348:	08 08       	sbc	r0, r8
     34a:	3e 77       	andi	r19, 0x7E	; 126
     34c:	41 41       	sbci	r20, 0x11	; 17
     34e:	00 00       	nop
     350:	00 00       	nop
     352:	00 77       	andi	r16, 0x70	; 112
     354:	77 00       	.word	0x0077	; ????
     356:	00 00       	nop
     358:	41 41       	sbci	r20, 0x11	; 17
     35a:	77 3e       	cpi	r23, 0xE7	; 231
     35c:	08 08       	sbc	r0, r8
     35e:	00 00       	nop
     360:	02 03       	mulsu	r16, r18
     362:	01 03       	mulsu	r16, r17
     364:	02 03       	mulsu	r16, r18
     366:	01 00       	.word	0x0001	; ????

00000368 <__ctors_end>:
     368:	11 24       	eor	r1, r1
     36a:	1f be       	out	0x3f, r1	; 63
     36c:	cf ef       	ldi	r28, 0xFF	; 255
     36e:	d4 e0       	ldi	r29, 0x04	; 4
     370:	de bf       	out	0x3e, r29	; 62
     372:	cd bf       	out	0x3d, r28	; 61

00000374 <__do_copy_data>:
     374:	11 e0       	ldi	r17, 0x01	; 1
     376:	a0 e0       	ldi	r26, 0x00	; 0
     378:	b1 e0       	ldi	r27, 0x01	; 1
     37a:	ea e0       	ldi	r30, 0x0A	; 10
     37c:	f0 e1       	ldi	r31, 0x10	; 16
     37e:	02 c0       	rjmp	.+4      	; 0x384 <__do_copy_data+0x10>
     380:	05 90       	lpm	r0, Z+
     382:	0d 92       	st	X+, r0
     384:	a6 3a       	cpi	r26, 0xA6	; 166
     386:	b1 07       	cpc	r27, r17
     388:	d9 f7       	brne	.-10     	; 0x380 <__do_copy_data+0xc>

0000038a <__do_clear_bss>:
     38a:	21 e0       	ldi	r18, 0x01	; 1
     38c:	a6 ea       	ldi	r26, 0xA6	; 166
     38e:	b1 e0       	ldi	r27, 0x01	; 1
     390:	01 c0       	rjmp	.+2      	; 0x394 <.do_clear_bss_start>

00000392 <.do_clear_bss_loop>:
     392:	1d 92       	st	X+, r1

00000394 <.do_clear_bss_start>:
     394:	a0 3b       	cpi	r26, 0xB0	; 176
     396:	b2 07       	cpc	r27, r18
     398:	e1 f7       	brne	.-8      	; 0x392 <.do_clear_bss_loop>
     39a:	0e 94 d3 01 	call	0x3a6	; 0x3a6 <main>
     39e:	0c 94 03 08 	jmp	0x1006	; 0x1006 <_exit>

000003a2 <__bad_interrupt>:
     3a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000003a6 <main>:
#include "inc/can.h"

int main()
{
	// Initialize
    gpio_init();
     3a6:	0e 94 0a 02 	call	0x414	; 0x414 <gpio_init>
	xmem_init();
     3aa:	0e 94 91 03 	call	0x722	; 0x722 <xmem_init>
	uart_init();
     3ae:	0e 94 83 03 	call	0x706	; 0x706 <uart_init>
	oled_init();
     3b2:	0e 94 b5 02 	call	0x56a	; 0x56a <oled_init>
	menu_init();
     3b6:	0e 94 58 02 	call	0x4b0	; 0x4b0 <menu_init>
	spi_init();
     3ba:	0e 94 68 03 	call	0x6d0	; 0x6d0 <spi_init>
	mcp_init();     // Relies on spi_init() to be initialized first
     3be:	0e 94 32 02 	call	0x464	; 0x464 <mcp_init>
	can_init();     // Relies on mcp_init() to be initialized first
     3c2:	0e 94 09 02 	call	0x412	; 0x412 <can_init>
    

    // Main program loop
    while (1) 
	{	
		printf("hei");
     3c6:	06 e0       	ldi	r16, 0x06	; 6
     3c8:	11 e0       	ldi	r17, 0x01	; 1
		printf("B1: %d,   B2: %d   B3: %d\n", gpio_read_button(1), gpio_read_button(2), gpio_read_button(3));
     3ca:	ca e0       	ldi	r28, 0x0A	; 10
     3cc:	d1 e0       	ldi	r29, 0x01	; 1
    

    // Main program loop
    while (1) 
	{	
		printf("hei");
     3ce:	1f 93       	push	r17
     3d0:	0f 93       	push	r16
     3d2:	0e 94 e1 03 	call	0x7c2	; 0x7c2 <printf>
		printf("B1: %d,   B2: %d   B3: %d\n", gpio_read_button(1), gpio_read_button(2), gpio_read_button(3));
     3d6:	83 e0       	ldi	r24, 0x03	; 3
     3d8:	0e 94 0f 02 	call	0x41e	; 0x41e <gpio_read_button>
     3dc:	e8 2e       	mov	r14, r24
     3de:	82 e0       	ldi	r24, 0x02	; 2
     3e0:	0e 94 0f 02 	call	0x41e	; 0x41e <gpio_read_button>
     3e4:	f8 2e       	mov	r15, r24
     3e6:	81 e0       	ldi	r24, 0x01	; 1
     3e8:	0e 94 0f 02 	call	0x41e	; 0x41e <gpio_read_button>
     3ec:	1f 92       	push	r1
     3ee:	ef 92       	push	r14
     3f0:	1f 92       	push	r1
     3f2:	ff 92       	push	r15
     3f4:	1f 92       	push	r1
     3f6:	8f 93       	push	r24
     3f8:	df 93       	push	r29
     3fa:	cf 93       	push	r28
     3fc:	0e 94 e1 03 	call	0x7c2	; 0x7c2 <printf>
     400:	8d b7       	in	r24, 0x3d	; 61
     402:	9e b7       	in	r25, 0x3e	; 62
     404:	0a 96       	adiw	r24, 0x0a	; 10
     406:	0f b6       	in	r0, 0x3f	; 63
     408:	f8 94       	cli
     40a:	9e bf       	out	0x3e, r25	; 62
     40c:	0f be       	out	0x3f, r0	; 63
     40e:	8d bf       	out	0x3d, r24	; 61
     410:	de cf       	rjmp	.-68     	; 0x3ce <main+0x28>

00000412 <can_init>:
#include "../inc/can.h"

void can_init()
{
     412:	08 95       	ret

00000414 <gpio_init>:
#include "../inc/gpio.h"


void gpio_init()                                        /** Initialize gpio pins */
{
    DDRB  |= (1 << PB0);                                // Port B0 is an output
     414:	b8 9a       	sbi	0x17, 0	; 23
    DDRB  &= ~(0 << PB1) | (0 << PB2) | (0 << PB3);		// Set Port B1, B2, B3 to input
     416:	87 b3       	in	r24, 0x17	; 23
     418:	87 bb       	out	0x17, r24	; 23
    PORTB |= (1 << PB0);                                // Port B0 is HIGH: Turn on status LED		
     41a:	c0 9a       	sbi	0x18, 0	; 24
     41c:	08 95       	ret

0000041e <gpio_read_button>:

bool gpio_read_button(uint8_t button)                   /** Read button values */
{
    bool read_button;

    if (button == 1)
     41e:	81 30       	cpi	r24, 0x01	; 1
     420:	21 f4       	brne	.+8      	; 0x42a <gpio_read_button+0xc>
	    read_button = (1 << PB1) & PINB;
     422:	86 b3       	in	r24, 0x16	; 22
     424:	86 95       	lsr	r24
     426:	81 70       	andi	r24, 0x01	; 1
     428:	08 95       	ret

    else if (button == 2)
     42a:	82 30       	cpi	r24, 0x02	; 2
     42c:	29 f4       	brne	.+10     	; 0x438 <gpio_read_button+0x1a>
	    read_button = (1 << PB2) & PINB;
     42e:	86 b3       	in	r24, 0x16	; 22
     430:	82 fb       	bst	r24, 2
     432:	88 27       	eor	r24, r24
     434:	80 f9       	bld	r24, 0
     436:	08 95       	ret

    else if (button == 3)
     438:	83 30       	cpi	r24, 0x03	; 3
     43a:	29 f4       	brne	.+10     	; 0x446 <gpio_read_button+0x28>
	    read_button = (1 << PB3) & PINB;
     43c:	86 b3       	in	r24, 0x16	; 22
     43e:	83 fb       	bst	r24, 3
     440:	88 27       	eor	r24, r24
     442:	80 f9       	bld	r24, 0
     444:	08 95       	ret
    else
        return 0;
     446:	80 e0       	ldi	r24, 0x00	; 0
        
	return read_button;
     448:	08 95       	ret

0000044a <mcp_activate>:
}

// PROTOTYPE
void mcp_activate()
{
    PORTB  &= ~(0 << PB4);                       // Lower 'CS
     44a:	88 b3       	in	r24, 0x18	; 24
     44c:	88 bb       	out	0x18, r24	; 24
     44e:	08 95       	ret

00000450 <mcp_deactivate>:
}

void mcp_deactivate()
{
    PORTB  |= (1 << PB4);                       // Higher 'CS
     450:	c4 9a       	sbi	0x18, 4	; 24
     452:	08 95       	ret

00000454 <mcp_reset>:
    // More functionality coming
}

void mcp_reset()
{
    mcp_activate();
     454:	0e 94 25 02 	call	0x44a	; 0x44a <mcp_activate>
    spi_write(MCP_RESET);
     458:	80 ec       	ldi	r24, 0xC0	; 192
     45a:	0e 94 6f 03 	call	0x6de	; 0x6de <spi_write>
    mcp_deactivate();
     45e:	0e 94 28 02 	call	0x450	; 0x450 <mcp_deactivate>
     462:	08 95       	ret

00000464 <mcp_init>:



void mcp_init()
{
    mcp_reset();
     464:	0e 94 2a 02 	call	0x454	; 0x454 <mcp_reset>
     468:	08 95       	ret

0000046a <menu_print>:
	menu_print();
}

void menu_print()
{	
	oled_reset();
     46a:	0e 94 a5 02 	call	0x54a	; 0x54a <oled_reset>
	oled_goto_line(0);
     46e:	80 e0       	ldi	r24, 0x00	; 0
     470:	90 e0       	ldi	r25, 0x00	; 0
     472:	0e 94 7c 02 	call	0x4f8	; 0x4f8 <oled_goto_line>
	oled_print("--- Home ---");
     476:	85 e2       	ldi	r24, 0x25	; 37
     478:	91 e0       	ldi	r25, 0x01	; 1
     47a:	0e 94 24 03 	call	0x648	; 0x648 <oled_print>
	
	oled_goto_line(2);
     47e:	82 e0       	ldi	r24, 0x02	; 2
     480:	90 e0       	ldi	r25, 0x00	; 0
     482:	0e 94 7c 02 	call	0x4f8	; 0x4f8 <oled_goto_line>
	oled_print("Play");
     486:	82 e3       	ldi	r24, 0x32	; 50
     488:	91 e0       	ldi	r25, 0x01	; 1
     48a:	0e 94 24 03 	call	0x648	; 0x648 <oled_print>
	
	oled_goto_line(4);
     48e:	84 e0       	ldi	r24, 0x04	; 4
     490:	90 e0       	ldi	r25, 0x00	; 0
     492:	0e 94 7c 02 	call	0x4f8	; 0x4f8 <oled_goto_line>
	oled_print("Highscore");
     496:	87 e3       	ldi	r24, 0x37	; 55
     498:	91 e0       	ldi	r25, 0x01	; 1
     49a:	0e 94 24 03 	call	0x648	; 0x648 <oled_print>
	
	oled_goto_line(6);	
     49e:	86 e0       	ldi	r24, 0x06	; 6
     4a0:	90 e0       	ldi	r25, 0x00	; 0
     4a2:	0e 94 7c 02 	call	0x4f8	; 0x4f8 <oled_goto_line>
	oled_print("About");
     4a6:	81 e4       	ldi	r24, 0x41	; 65
     4a8:	91 e0       	ldi	r25, 0x01	; 1
     4aa:	0e 94 24 03 	call	0x648	; 0x648 <oled_print>
     4ae:	08 95       	ret

000004b0 <menu_init>:
#include "../inc/menu.h"
#include "../inc/oled.h"

void menu_init()
{
	oled_print("WELCOME!");
     4b0:	87 e4       	ldi	r24, 0x47	; 71
     4b2:	91 e0       	ldi	r25, 0x01	; 1
     4b4:	0e 94 24 03 	call	0x648	; 0x648 <oled_print>
	oled_pos(4, 0);
     4b8:	60 e0       	ldi	r22, 0x00	; 0
     4ba:	70 e0       	ldi	r23, 0x00	; 0
     4bc:	84 e0       	ldi	r24, 0x04	; 4
     4be:	90 e0       	ldi	r25, 0x00	; 0
     4c0:	0e 94 88 02 	call	0x510	; 0x510 <oled_pos>
	oled_print_inv("*ENTER GAME*");
     4c4:	80 e5       	ldi	r24, 0x50	; 80
     4c6:	91 e0       	ldi	r25, 0x01	; 1
     4c8:	0e 94 46 03 	call	0x68c	; 0x68c <oled_print_inv>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     4cc:	2f ef       	ldi	r18, 0xFF	; 255
     4ce:	8f ef       	ldi	r24, 0xFF	; 255
     4d0:	9c e2       	ldi	r25, 0x2C	; 44
     4d2:	21 50       	subi	r18, 0x01	; 1
     4d4:	80 40       	sbci	r24, 0x00	; 0
     4d6:	90 40       	sbci	r25, 0x00	; 0
     4d8:	e1 f7       	brne	.-8      	; 0x4d2 <menu_init+0x22>
     4da:	00 c0       	rjmp	.+0      	; 0x4dc <menu_init+0x2c>
     4dc:	00 c0       	rjmp	.+0      	; 0x4de <menu_init+0x2e>
	
	// Wait to display welcome screen
	//oled_print_logo();
	_delay_ms(3000);
	
	menu_print();
     4de:	0e 94 35 02 	call	0x46a	; 0x46a <menu_print>
     4e2:	08 95       	ret

000004e4 <oled_goto_column>:


void oled_write_cmd(uint8_t cmd)		// Write command
{
	volatile char* ext_oled_cmd = (char *) OLED_CMD_ADR;		// Start address for OLED command
	ext_oled_cmd[0] = cmd;		                                    // write command
     4e4:	98 2f       	mov	r25, r24
     4e6:	9f 70       	andi	r25, 0x0F	; 15
     4e8:	e0 e0       	ldi	r30, 0x00	; 0
     4ea:	f0 e1       	ldi	r31, 0x10	; 16
     4ec:	90 83       	st	Z, r25
     4ee:	82 95       	swap	r24
     4f0:	8f 70       	andi	r24, 0x0F	; 15
     4f2:	80 5f       	subi	r24, 0xF0	; 240
     4f4:	80 83       	st	Z, r24
     4f6:	08 95       	ret

000004f8 <oled_goto_line>:
     4f8:	80 55       	subi	r24, 0x50	; 80
     4fa:	80 93 00 10 	sts	0x1000, r24	; 0x801000 <__bss_end+0xe50>
     4fe:	80 e0       	ldi	r24, 0x00	; 0
     500:	0e 94 72 02 	call	0x4e4	; 0x4e4 <oled_goto_column>
     504:	08 95       	ret

00000506 <oled_home>:
     506:	80 e0       	ldi	r24, 0x00	; 0
     508:	90 e0       	ldi	r25, 0x00	; 0
     50a:	0e 94 7c 02 	call	0x4f8	; 0x4f8 <oled_goto_line>
     50e:	08 95       	ret

00000510 <oled_pos>:
     510:	cf 93       	push	r28
     512:	c6 2f       	mov	r28, r22
     514:	0e 94 7c 02 	call	0x4f8	; 0x4f8 <oled_goto_line>
     518:	8c 2f       	mov	r24, r28
     51a:	0e 94 72 02 	call	0x4e4	; 0x4e4 <oled_goto_column>
     51e:	cf 91       	pop	r28
     520:	08 95       	ret

00000522 <oled_clear_line>:
     522:	cf 93       	push	r28
     524:	df 93       	push	r29
     526:	ec 01       	movw	r28, r24
     528:	60 e0       	ldi	r22, 0x00	; 0
     52a:	70 e0       	ldi	r23, 0x00	; 0
     52c:	0e 94 88 02 	call	0x510	; 0x510 <oled_pos>
     530:	80 e8       	ldi	r24, 0x80	; 128
     532:	90 e0       	ldi	r25, 0x00	; 0
     534:	e0 e0       	ldi	r30, 0x00	; 0
     536:	f2 e1       	ldi	r31, 0x12	; 18
     538:	10 82       	st	Z, r1
     53a:	01 97       	sbiw	r24, 0x01	; 1
     53c:	e9 f7       	brne	.-6      	; 0x538 <oled_clear_line+0x16>
     53e:	ce 01       	movw	r24, r28
     540:	0e 94 7c 02 	call	0x4f8	; 0x4f8 <oled_goto_line>
     544:	df 91       	pop	r29
     546:	cf 91       	pop	r28
     548:	08 95       	ret

0000054a <oled_reset>:
     54a:	cf 93       	push	r28
     54c:	df 93       	push	r29
     54e:	c0 e0       	ldi	r28, 0x00	; 0
     550:	d0 e0       	ldi	r29, 0x00	; 0
     552:	ce 01       	movw	r24, r28
     554:	0e 94 91 02 	call	0x522	; 0x522 <oled_clear_line>
     558:	21 96       	adiw	r28, 0x01	; 1
     55a:	c8 30       	cpi	r28, 0x08	; 8
     55c:	d1 05       	cpc	r29, r1
     55e:	c9 f7       	brne	.-14     	; 0x552 <oled_reset+0x8>
     560:	0e 94 83 02 	call	0x506	; 0x506 <oled_home>
     564:	df 91       	pop	r29
     566:	cf 91       	pop	r28
     568:	08 95       	ret

0000056a <oled_init>:
     56a:	e0 e0       	ldi	r30, 0x00	; 0
     56c:	f0 e1       	ldi	r31, 0x10	; 16
     56e:	8e ea       	ldi	r24, 0xAE	; 174
     570:	80 83       	st	Z, r24
     572:	81 ea       	ldi	r24, 0xA1	; 161
     574:	80 83       	st	Z, r24
     576:	8a ed       	ldi	r24, 0xDA	; 218
     578:	80 83       	st	Z, r24
     57a:	82 e1       	ldi	r24, 0x12	; 18
     57c:	80 83       	st	Z, r24
     57e:	88 ec       	ldi	r24, 0xC8	; 200
     580:	80 83       	st	Z, r24
     582:	88 ea       	ldi	r24, 0xA8	; 168
     584:	80 83       	st	Z, r24
     586:	8f e3       	ldi	r24, 0x3F	; 63
     588:	80 83       	st	Z, r24
     58a:	85 ed       	ldi	r24, 0xD5	; 213
     58c:	80 83       	st	Z, r24
     58e:	80 e8       	ldi	r24, 0x80	; 128
     590:	80 83       	st	Z, r24
     592:	81 e8       	ldi	r24, 0x81	; 129
     594:	80 83       	st	Z, r24
     596:	80 e5       	ldi	r24, 0x50	; 80
     598:	80 83       	st	Z, r24
     59a:	89 ed       	ldi	r24, 0xD9	; 217
     59c:	80 83       	st	Z, r24
     59e:	81 e2       	ldi	r24, 0x21	; 33
     5a0:	80 83       	st	Z, r24
     5a2:	80 e2       	ldi	r24, 0x20	; 32
     5a4:	80 83       	st	Z, r24
     5a6:	82 e0       	ldi	r24, 0x02	; 2
     5a8:	80 83       	st	Z, r24
     5aa:	8b ed       	ldi	r24, 0xDB	; 219
     5ac:	80 83       	st	Z, r24
     5ae:	80 e3       	ldi	r24, 0x30	; 48
     5b0:	80 83       	st	Z, r24
     5b2:	8d ea       	ldi	r24, 0xAD	; 173
     5b4:	80 83       	st	Z, r24
     5b6:	10 82       	st	Z, r1
     5b8:	84 ea       	ldi	r24, 0xA4	; 164
     5ba:	80 83       	st	Z, r24
     5bc:	86 ea       	ldi	r24, 0xA6	; 166
     5be:	80 83       	st	Z, r24
     5c0:	8f ea       	ldi	r24, 0xAF	; 175
     5c2:	80 83       	st	Z, r24
     5c4:	0e 94 a5 02 	call	0x54a	; 0x54a <oled_reset>
     5c8:	08 95       	ret

000005ca <oled_put_char>:
}


void oled_put_char(unsigned char c)		// Put character
{
     5ca:	80 52       	subi	r24, 0x20	; 32
     5cc:	90 e0       	ldi	r25, 0x00	; 0
     5ce:	9c 01       	movw	r18, r24
     5d0:	22 0f       	add	r18, r18
     5d2:	33 1f       	adc	r19, r19
     5d4:	22 0f       	add	r18, r18
     5d6:	33 1f       	adc	r19, r19
     5d8:	22 0f       	add	r18, r18
     5da:	33 1f       	adc	r19, r19
     5dc:	20 59       	subi	r18, 0x90	; 144
     5de:	3f 4f       	sbci	r19, 0xFF	; 255
     5e0:	88 0f       	add	r24, r24
     5e2:	99 1f       	adc	r25, r25
     5e4:	88 0f       	add	r24, r24
     5e6:	99 1f       	adc	r25, r25
     5e8:	88 0f       	add	r24, r24
     5ea:	99 1f       	adc	r25, r25
     5ec:	88 58       	subi	r24, 0x88	; 136
     5ee:	9f 4f       	sbci	r25, 0xFF	; 255


void oled_write_data(uint8_t data)		// Write char to screen
{
    volatile char* ext_oled_data = (char *) OLED_DATA_ADR;		// Start address for OLED data
    ext_oled_data[0] = data;
     5f0:	a0 e0       	ldi	r26, 0x00	; 0
     5f2:	b2 e1       	ldi	r27, 0x12	; 18
{
	uint8_t print_char = c - 32;
	uint8_t font_size  = 8;				// Size of the different fonts. Needs to be calculated.
	
	for (int i = 0; i < font_size; i++)
		oled_write_data(pgm_read_word(&font8[print_char][i]));
     5f4:	f9 01       	movw	r30, r18
     5f6:	45 91       	lpm	r20, Z+
     5f8:	54 91       	lpm	r21, Z


void oled_write_data(uint8_t data)		// Write char to screen
{
    volatile char* ext_oled_data = (char *) OLED_DATA_ADR;		// Start address for OLED data
    ext_oled_data[0] = data;
     5fa:	4c 93       	st	X, r20
     5fc:	2f 5f       	subi	r18, 0xFF	; 255
     5fe:	3f 4f       	sbci	r19, 0xFF	; 255
void oled_put_char(unsigned char c)		// Put character
{
	uint8_t print_char = c - 32;
	uint8_t font_size  = 8;				// Size of the different fonts. Needs to be calculated.
	
	for (int i = 0; i < font_size; i++)
     600:	28 17       	cp	r18, r24
     602:	39 07       	cpc	r19, r25
     604:	b9 f7       	brne	.-18     	; 0x5f4 <oled_put_char+0x2a>
		oled_write_data(pgm_read_word(&font8[print_char][i]));
}
     606:	08 95       	ret

00000608 <oled_put_char_inv>:

void oled_put_char_inv(unsigned char c)	// Put inverted character
{
     608:	80 52       	subi	r24, 0x20	; 32
     60a:	90 e0       	ldi	r25, 0x00	; 0
     60c:	9c 01       	movw	r18, r24
     60e:	22 0f       	add	r18, r18
     610:	33 1f       	adc	r19, r19
     612:	22 0f       	add	r18, r18
     614:	33 1f       	adc	r19, r19
     616:	22 0f       	add	r18, r18
     618:	33 1f       	adc	r19, r19
     61a:	20 59       	subi	r18, 0x90	; 144
     61c:	3f 4f       	sbci	r19, 0xFF	; 255
     61e:	88 0f       	add	r24, r24
     620:	99 1f       	adc	r25, r25
     622:	88 0f       	add	r24, r24
     624:	99 1f       	adc	r25, r25
     626:	88 0f       	add	r24, r24
     628:	99 1f       	adc	r25, r25
     62a:	88 58       	subi	r24, 0x88	; 136
     62c:	9f 4f       	sbci	r25, 0xFF	; 255


void oled_write_data(uint8_t data)		// Write char to screen
{
    volatile char* ext_oled_data = (char *) OLED_DATA_ADR;		// Start address for OLED data
    ext_oled_data[0] = data;
     62e:	a0 e0       	ldi	r26, 0x00	; 0
     630:	b2 e1       	ldi	r27, 0x12	; 18
{
	uint8_t print_char = c - 32;
	uint8_t font_size  = 8;				// Size of the different fonts. Needs to be calculated.
	
	for (int i = 0; i < font_size; i++)
		oled_write_data(~pgm_read_word(&font8[print_char][i]));
     632:	f9 01       	movw	r30, r18
     634:	45 91       	lpm	r20, Z+
     636:	54 91       	lpm	r21, Z
     638:	40 95       	com	r20


void oled_write_data(uint8_t data)		// Write char to screen
{
    volatile char* ext_oled_data = (char *) OLED_DATA_ADR;		// Start address for OLED data
    ext_oled_data[0] = data;
     63a:	4c 93       	st	X, r20
     63c:	2f 5f       	subi	r18, 0xFF	; 255
     63e:	3f 4f       	sbci	r19, 0xFF	; 255
void oled_put_char_inv(unsigned char c)	// Put inverted character
{
	uint8_t print_char = c - 32;
	uint8_t font_size  = 8;				// Size of the different fonts. Needs to be calculated.
	
	for (int i = 0; i < font_size; i++)
     640:	28 17       	cp	r18, r24
     642:	39 07       	cpc	r19, r25
     644:	b1 f7       	brne	.-20     	; 0x632 <oled_put_char_inv+0x2a>
		oled_write_data(~pgm_read_word(&font8[print_char][i]));
}
     646:	08 95       	ret

00000648 <oled_print>:

void oled_print(char* str)			// Print text to screen
{			
     648:	ef 92       	push	r14
     64a:	ff 92       	push	r15
     64c:	0f 93       	push	r16
     64e:	1f 93       	push	r17
     650:	cf 93       	push	r28
     652:	df 93       	push	r29
     654:	8c 01       	movw	r16, r24
     656:	7c 01       	movw	r14, r24
	for (int i = 0; i < strlen(str); i++)
     658:	c0 e0       	ldi	r28, 0x00	; 0
     65a:	d0 e0       	ldi	r29, 0x00	; 0
     65c:	06 c0       	rjmp	.+12     	; 0x66a <oled_print+0x22>
		oled_put_char(str[i]);					// write to screen
     65e:	f7 01       	movw	r30, r14
     660:	81 91       	ld	r24, Z+
     662:	7f 01       	movw	r14, r30
     664:	0e 94 e5 02 	call	0x5ca	; 0x5ca <oled_put_char>
		oled_write_data(~pgm_read_word(&font8[print_char][i]));
}

void oled_print(char* str)			// Print text to screen
{			
	for (int i = 0; i < strlen(str); i++)
     668:	21 96       	adiw	r28, 0x01	; 1
     66a:	f8 01       	movw	r30, r16
     66c:	01 90       	ld	r0, Z+
     66e:	00 20       	and	r0, r0
     670:	e9 f7       	brne	.-6      	; 0x66c <oled_print+0x24>
     672:	31 97       	sbiw	r30, 0x01	; 1
     674:	e0 1b       	sub	r30, r16
     676:	f1 0b       	sbc	r31, r17
     678:	ce 17       	cp	r28, r30
     67a:	df 07       	cpc	r29, r31
     67c:	80 f3       	brcs	.-32     	; 0x65e <oled_print+0x16>
		oled_put_char(str[i]);					// write to screen
}
     67e:	df 91       	pop	r29
     680:	cf 91       	pop	r28
     682:	1f 91       	pop	r17
     684:	0f 91       	pop	r16
     686:	ff 90       	pop	r15
     688:	ef 90       	pop	r14
     68a:	08 95       	ret

0000068c <oled_print_inv>:

void oled_print_inv(char* str)		// Print inverted text to screen
{
     68c:	ef 92       	push	r14
     68e:	ff 92       	push	r15
     690:	0f 93       	push	r16
     692:	1f 93       	push	r17
     694:	cf 93       	push	r28
     696:	df 93       	push	r29
     698:	8c 01       	movw	r16, r24
     69a:	7c 01       	movw	r14, r24
	for (int i = 0; i < strlen(str); i++)
     69c:	c0 e0       	ldi	r28, 0x00	; 0
     69e:	d0 e0       	ldi	r29, 0x00	; 0
     6a0:	06 c0       	rjmp	.+12     	; 0x6ae <oled_print_inv+0x22>
		oled_put_char_inv(str[i]);					// write to screen
     6a2:	f7 01       	movw	r30, r14
     6a4:	81 91       	ld	r24, Z+
     6a6:	7f 01       	movw	r14, r30
     6a8:	0e 94 04 03 	call	0x608	; 0x608 <oled_put_char_inv>
		oled_put_char(str[i]);					// write to screen
}

void oled_print_inv(char* str)		// Print inverted text to screen
{
	for (int i = 0; i < strlen(str); i++)
     6ac:	21 96       	adiw	r28, 0x01	; 1
     6ae:	f8 01       	movw	r30, r16
     6b0:	01 90       	ld	r0, Z+
     6b2:	00 20       	and	r0, r0
     6b4:	e9 f7       	brne	.-6      	; 0x6b0 <oled_print_inv+0x24>
     6b6:	31 97       	sbiw	r30, 0x01	; 1
     6b8:	e0 1b       	sub	r30, r16
     6ba:	f1 0b       	sbc	r31, r17
     6bc:	ce 17       	cp	r28, r30
     6be:	df 07       	cpc	r29, r31
     6c0:	80 f3       	brcs	.-32     	; 0x6a2 <oled_print_inv+0x16>
		oled_put_char_inv(str[i]);					// write to screen
}
     6c2:	df 91       	pop	r29
     6c4:	cf 91       	pop	r28
     6c6:	1f 91       	pop	r17
     6c8:	0f 91       	pop	r16
     6ca:	ff 90       	pop	r15
     6cc:	ef 90       	pop	r14
     6ce:	08 95       	ret

000006d0 <spi_init>:
{
    while(!(SPSR & (1<<SPIF)))              // Wait for reception complete 
        ;

    return SPDR;                            // Return data register
}
     6d0:	87 b3       	in	r24, 0x17	; 23
     6d2:	80 6b       	ori	r24, 0xB0	; 176
     6d4:	87 bb       	out	0x17, r24	; 23
     6d6:	81 e5       	ldi	r24, 0x51	; 81
     6d8:	8d b9       	out	0x0d, r24	; 13
     6da:	c4 9a       	sbi	0x18, 4	; 24
     6dc:	08 95       	ret

000006de <spi_write>:

void spi_write(uint8_t cmd)                      /* Write to the SPI */
{
    SPDR = cmd;                            // Start transmission                        
     6de:	8f b9       	out	0x0f, r24	; 15
    while(!(SPSR & (1<<SPIF)) )            // Wait for transmission complete  
     6e0:	77 9b       	sbis	0x0e, 7	; 14
     6e2:	fe cf       	rjmp	.-4      	; 0x6e0 <spi_write+0x2>
        ;
     6e4:	08 95       	ret

000006e6 <uart_receive>:
}

// Return received data
unsigned char uart_receive()
{
    return UDR0;
     6e6:	8c b1       	in	r24, 0x0c	; 12
}
     6e8:	08 95       	ret

000006ea <uart_is_ready>:
   \____________________________*/

// Check if transmitt buffer is ready
bool uart_is_ready()
{
    return ((UCSR0A & (1 << UDRE0)));
     6ea:	8b b1       	in	r24, 0x0b	; 11
}
     6ec:	85 fb       	bst	r24, 5
     6ee:	88 27       	eor	r24, r24
     6f0:	80 f9       	bld	r24, 0
     6f2:	08 95       	ret

000006f4 <uart_send>:

// Send data
void uart_send(unsigned char data)
{
     6f4:	cf 93       	push	r28
     6f6:	c8 2f       	mov	r28, r24
    // Wait for empty transmit buffer
    while (!uart_is_ready());
     6f8:	0e 94 75 03 	call	0x6ea	; 0x6ea <uart_is_ready>
     6fc:	88 23       	and	r24, r24
     6fe:	e1 f3       	breq	.-8      	; 0x6f8 <uart_send+0x4>

    UDR0 = data; //put data on buffer
     700:	cc b9       	out	0x0c, r28	; 12
}
     702:	cf 91       	pop	r28
     704:	08 95       	ret

00000706 <uart_init>:

// initialize the uart
void uart_init()
{
    // Set baud rate
    UBRR0H = (unsigned char)(MYUBRR >> 8);
     706:	10 bc       	out	0x20, r1	; 32
    UBRR0L = (unsigned char)(MYUBRR);
     708:	8f e1       	ldi	r24, 0x1F	; 31
     70a:	89 b9       	out	0x09, r24	; 9

    // Enable receive and transmitt
    UCSR0B = (1 << RXEN0) | (1 << TXEN0);
     70c:	88 e1       	ldi	r24, 0x18	; 24
     70e:	8a b9       	out	0x0a, r24	; 10

    // Set frame format
    UCSR0C = (1 << URSEL0) | (1 << USBS0) | (3 << UCSZ00);
     710:	8e e8       	ldi	r24, 0x8E	; 142
     712:	80 bd       	out	0x20, r24	; 32

    // Assign printf to UART
    fdevopen(uart_send, uart_receive);
     714:	63 e7       	ldi	r22, 0x73	; 115
     716:	73 e0       	ldi	r23, 0x03	; 3
     718:	8a e7       	ldi	r24, 0x7A	; 122
     71a:	93 e0       	ldi	r25, 0x03	; 3
     71c:	0e 94 96 03 	call	0x72c	; 0x72c <fdevopen>
     720:	08 95       	ret

00000722 <xmem_init>:
#include "../inc/xmem.h"

void xmem_init()                      // Initialize external memory
{
	MCUCR =  (1 << SRE);	     	  // Activate external memory
     722:	80 e8       	ldi	r24, 0x80	; 128
     724:	85 bf       	out	0x35, r24	; 53
	SFIOR =  (1 << XMM2);			  // Mask JTAG pins
     726:	80 e2       	ldi	r24, 0x20	; 32
     728:	80 bf       	out	0x30, r24	; 48
     72a:	08 95       	ret

0000072c <fdevopen>:
     72c:	0f 93       	push	r16
     72e:	1f 93       	push	r17
     730:	cf 93       	push	r28
     732:	df 93       	push	r29
     734:	00 97       	sbiw	r24, 0x00	; 0
     736:	31 f4       	brne	.+12     	; 0x744 <fdevopen+0x18>
     738:	61 15       	cp	r22, r1
     73a:	71 05       	cpc	r23, r1
     73c:	19 f4       	brne	.+6      	; 0x744 <fdevopen+0x18>
     73e:	80 e0       	ldi	r24, 0x00	; 0
     740:	90 e0       	ldi	r25, 0x00	; 0
     742:	3a c0       	rjmp	.+116    	; 0x7b8 <fdevopen+0x8c>
     744:	8b 01       	movw	r16, r22
     746:	ec 01       	movw	r28, r24
     748:	6e e0       	ldi	r22, 0x0E	; 14
     74a:	70 e0       	ldi	r23, 0x00	; 0
     74c:	81 e0       	ldi	r24, 0x01	; 1
     74e:	90 e0       	ldi	r25, 0x00	; 0
     750:	0e 94 d8 05 	call	0xbb0	; 0xbb0 <calloc>
     754:	fc 01       	movw	r30, r24
     756:	89 2b       	or	r24, r25
     758:	91 f3       	breq	.-28     	; 0x73e <fdevopen+0x12>
     75a:	80 e8       	ldi	r24, 0x80	; 128
     75c:	83 83       	std	Z+3, r24	; 0x03
     75e:	01 15       	cp	r16, r1
     760:	11 05       	cpc	r17, r1
     762:	71 f0       	breq	.+28     	; 0x780 <fdevopen+0x54>
     764:	13 87       	std	Z+11, r17	; 0x0b
     766:	02 87       	std	Z+10, r16	; 0x0a
     768:	81 e8       	ldi	r24, 0x81	; 129
     76a:	83 83       	std	Z+3, r24	; 0x03
     76c:	80 91 a6 01 	lds	r24, 0x01A6	; 0x8001a6 <__data_end>
     770:	90 91 a7 01 	lds	r25, 0x01A7	; 0x8001a7 <__data_end+0x1>
     774:	89 2b       	or	r24, r25
     776:	21 f4       	brne	.+8      	; 0x780 <fdevopen+0x54>
     778:	f0 93 a7 01 	sts	0x01A7, r31	; 0x8001a7 <__data_end+0x1>
     77c:	e0 93 a6 01 	sts	0x01A6, r30	; 0x8001a6 <__data_end>
     780:	20 97       	sbiw	r28, 0x00	; 0
     782:	c9 f0       	breq	.+50     	; 0x7b6 <fdevopen+0x8a>
     784:	d1 87       	std	Z+9, r29	; 0x09
     786:	c0 87       	std	Z+8, r28	; 0x08
     788:	83 81       	ldd	r24, Z+3	; 0x03
     78a:	82 60       	ori	r24, 0x02	; 2
     78c:	83 83       	std	Z+3, r24	; 0x03
     78e:	80 91 a8 01 	lds	r24, 0x01A8	; 0x8001a8 <__data_end+0x2>
     792:	90 91 a9 01 	lds	r25, 0x01A9	; 0x8001a9 <__data_end+0x3>
     796:	89 2b       	or	r24, r25
     798:	71 f4       	brne	.+28     	; 0x7b6 <fdevopen+0x8a>
     79a:	f0 93 a9 01 	sts	0x01A9, r31	; 0x8001a9 <__data_end+0x3>
     79e:	e0 93 a8 01 	sts	0x01A8, r30	; 0x8001a8 <__data_end+0x2>
     7a2:	80 91 aa 01 	lds	r24, 0x01AA	; 0x8001aa <__data_end+0x4>
     7a6:	90 91 ab 01 	lds	r25, 0x01AB	; 0x8001ab <__data_end+0x5>
     7aa:	89 2b       	or	r24, r25
     7ac:	21 f4       	brne	.+8      	; 0x7b6 <fdevopen+0x8a>
     7ae:	f0 93 ab 01 	sts	0x01AB, r31	; 0x8001ab <__data_end+0x5>
     7b2:	e0 93 aa 01 	sts	0x01AA, r30	; 0x8001aa <__data_end+0x4>
     7b6:	cf 01       	movw	r24, r30
     7b8:	df 91       	pop	r29
     7ba:	cf 91       	pop	r28
     7bc:	1f 91       	pop	r17
     7be:	0f 91       	pop	r16
     7c0:	08 95       	ret

000007c2 <printf>:
     7c2:	a0 e0       	ldi	r26, 0x00	; 0
     7c4:	b0 e0       	ldi	r27, 0x00	; 0
     7c6:	e7 ee       	ldi	r30, 0xE7	; 231
     7c8:	f3 e0       	ldi	r31, 0x03	; 3
     7ca:	0c 94 dc 07 	jmp	0xfb8	; 0xfb8 <__prologue_saves__+0x20>
     7ce:	ae 01       	movw	r20, r28
     7d0:	4b 5f       	subi	r20, 0xFB	; 251
     7d2:	5f 4f       	sbci	r21, 0xFF	; 255
     7d4:	fa 01       	movw	r30, r20
     7d6:	61 91       	ld	r22, Z+
     7d8:	71 91       	ld	r23, Z+
     7da:	af 01       	movw	r20, r30
     7dc:	80 91 a8 01 	lds	r24, 0x01A8	; 0x8001a8 <__data_end+0x2>
     7e0:	90 91 a9 01 	lds	r25, 0x01A9	; 0x8001a9 <__data_end+0x3>
     7e4:	0e 94 f7 03 	call	0x7ee	; 0x7ee <vfprintf>
     7e8:	e2 e0       	ldi	r30, 0x02	; 2
     7ea:	0c 94 f8 07 	jmp	0xff0	; 0xff0 <__epilogue_restores__+0x20>

000007ee <vfprintf>:
     7ee:	ab e0       	ldi	r26, 0x0B	; 11
     7f0:	b0 e0       	ldi	r27, 0x00	; 0
     7f2:	ed ef       	ldi	r30, 0xFD	; 253
     7f4:	f3 e0       	ldi	r31, 0x03	; 3
     7f6:	0c 94 cc 07 	jmp	0xf98	; 0xf98 <__prologue_saves__>
     7fa:	6c 01       	movw	r12, r24
     7fc:	7b 01       	movw	r14, r22
     7fe:	8a 01       	movw	r16, r20
     800:	fc 01       	movw	r30, r24
     802:	17 82       	std	Z+7, r1	; 0x07
     804:	16 82       	std	Z+6, r1	; 0x06
     806:	83 81       	ldd	r24, Z+3	; 0x03
     808:	81 ff       	sbrs	r24, 1
     80a:	cc c1       	rjmp	.+920    	; 0xba4 <vfprintf+0x3b6>
     80c:	ce 01       	movw	r24, r28
     80e:	01 96       	adiw	r24, 0x01	; 1
     810:	3c 01       	movw	r6, r24
     812:	f6 01       	movw	r30, r12
     814:	93 81       	ldd	r25, Z+3	; 0x03
     816:	f7 01       	movw	r30, r14
     818:	93 fd       	sbrc	r25, 3
     81a:	85 91       	lpm	r24, Z+
     81c:	93 ff       	sbrs	r25, 3
     81e:	81 91       	ld	r24, Z+
     820:	7f 01       	movw	r14, r30
     822:	88 23       	and	r24, r24
     824:	09 f4       	brne	.+2      	; 0x828 <vfprintf+0x3a>
     826:	ba c1       	rjmp	.+884    	; 0xb9c <vfprintf+0x3ae>
     828:	85 32       	cpi	r24, 0x25	; 37
     82a:	39 f4       	brne	.+14     	; 0x83a <vfprintf+0x4c>
     82c:	93 fd       	sbrc	r25, 3
     82e:	85 91       	lpm	r24, Z+
     830:	93 ff       	sbrs	r25, 3
     832:	81 91       	ld	r24, Z+
     834:	7f 01       	movw	r14, r30
     836:	85 32       	cpi	r24, 0x25	; 37
     838:	29 f4       	brne	.+10     	; 0x844 <vfprintf+0x56>
     83a:	b6 01       	movw	r22, r12
     83c:	90 e0       	ldi	r25, 0x00	; 0
     83e:	0e 94 32 07 	call	0xe64	; 0xe64 <fputc>
     842:	e7 cf       	rjmp	.-50     	; 0x812 <vfprintf+0x24>
     844:	91 2c       	mov	r9, r1
     846:	21 2c       	mov	r2, r1
     848:	31 2c       	mov	r3, r1
     84a:	ff e1       	ldi	r31, 0x1F	; 31
     84c:	f3 15       	cp	r31, r3
     84e:	d8 f0       	brcs	.+54     	; 0x886 <vfprintf+0x98>
     850:	8b 32       	cpi	r24, 0x2B	; 43
     852:	79 f0       	breq	.+30     	; 0x872 <vfprintf+0x84>
     854:	38 f4       	brcc	.+14     	; 0x864 <vfprintf+0x76>
     856:	80 32       	cpi	r24, 0x20	; 32
     858:	79 f0       	breq	.+30     	; 0x878 <vfprintf+0x8a>
     85a:	83 32       	cpi	r24, 0x23	; 35
     85c:	a1 f4       	brne	.+40     	; 0x886 <vfprintf+0x98>
     85e:	23 2d       	mov	r18, r3
     860:	20 61       	ori	r18, 0x10	; 16
     862:	1d c0       	rjmp	.+58     	; 0x89e <vfprintf+0xb0>
     864:	8d 32       	cpi	r24, 0x2D	; 45
     866:	61 f0       	breq	.+24     	; 0x880 <vfprintf+0x92>
     868:	80 33       	cpi	r24, 0x30	; 48
     86a:	69 f4       	brne	.+26     	; 0x886 <vfprintf+0x98>
     86c:	23 2d       	mov	r18, r3
     86e:	21 60       	ori	r18, 0x01	; 1
     870:	16 c0       	rjmp	.+44     	; 0x89e <vfprintf+0xb0>
     872:	83 2d       	mov	r24, r3
     874:	82 60       	ori	r24, 0x02	; 2
     876:	38 2e       	mov	r3, r24
     878:	e3 2d       	mov	r30, r3
     87a:	e4 60       	ori	r30, 0x04	; 4
     87c:	3e 2e       	mov	r3, r30
     87e:	2a c0       	rjmp	.+84     	; 0x8d4 <vfprintf+0xe6>
     880:	f3 2d       	mov	r31, r3
     882:	f8 60       	ori	r31, 0x08	; 8
     884:	1d c0       	rjmp	.+58     	; 0x8c0 <vfprintf+0xd2>
     886:	37 fc       	sbrc	r3, 7
     888:	2d c0       	rjmp	.+90     	; 0x8e4 <vfprintf+0xf6>
     88a:	20 ed       	ldi	r18, 0xD0	; 208
     88c:	28 0f       	add	r18, r24
     88e:	2a 30       	cpi	r18, 0x0A	; 10
     890:	40 f0       	brcs	.+16     	; 0x8a2 <vfprintf+0xb4>
     892:	8e 32       	cpi	r24, 0x2E	; 46
     894:	b9 f4       	brne	.+46     	; 0x8c4 <vfprintf+0xd6>
     896:	36 fc       	sbrc	r3, 6
     898:	81 c1       	rjmp	.+770    	; 0xb9c <vfprintf+0x3ae>
     89a:	23 2d       	mov	r18, r3
     89c:	20 64       	ori	r18, 0x40	; 64
     89e:	32 2e       	mov	r3, r18
     8a0:	19 c0       	rjmp	.+50     	; 0x8d4 <vfprintf+0xe6>
     8a2:	36 fe       	sbrs	r3, 6
     8a4:	06 c0       	rjmp	.+12     	; 0x8b2 <vfprintf+0xc4>
     8a6:	8a e0       	ldi	r24, 0x0A	; 10
     8a8:	98 9e       	mul	r9, r24
     8aa:	20 0d       	add	r18, r0
     8ac:	11 24       	eor	r1, r1
     8ae:	92 2e       	mov	r9, r18
     8b0:	11 c0       	rjmp	.+34     	; 0x8d4 <vfprintf+0xe6>
     8b2:	ea e0       	ldi	r30, 0x0A	; 10
     8b4:	2e 9e       	mul	r2, r30
     8b6:	20 0d       	add	r18, r0
     8b8:	11 24       	eor	r1, r1
     8ba:	22 2e       	mov	r2, r18
     8bc:	f3 2d       	mov	r31, r3
     8be:	f0 62       	ori	r31, 0x20	; 32
     8c0:	3f 2e       	mov	r3, r31
     8c2:	08 c0       	rjmp	.+16     	; 0x8d4 <vfprintf+0xe6>
     8c4:	8c 36       	cpi	r24, 0x6C	; 108
     8c6:	21 f4       	brne	.+8      	; 0x8d0 <vfprintf+0xe2>
     8c8:	83 2d       	mov	r24, r3
     8ca:	80 68       	ori	r24, 0x80	; 128
     8cc:	38 2e       	mov	r3, r24
     8ce:	02 c0       	rjmp	.+4      	; 0x8d4 <vfprintf+0xe6>
     8d0:	88 36       	cpi	r24, 0x68	; 104
     8d2:	41 f4       	brne	.+16     	; 0x8e4 <vfprintf+0xf6>
     8d4:	f7 01       	movw	r30, r14
     8d6:	93 fd       	sbrc	r25, 3
     8d8:	85 91       	lpm	r24, Z+
     8da:	93 ff       	sbrs	r25, 3
     8dc:	81 91       	ld	r24, Z+
     8de:	7f 01       	movw	r14, r30
     8e0:	81 11       	cpse	r24, r1
     8e2:	b3 cf       	rjmp	.-154    	; 0x84a <vfprintf+0x5c>
     8e4:	98 2f       	mov	r25, r24
     8e6:	9f 7d       	andi	r25, 0xDF	; 223
     8e8:	95 54       	subi	r25, 0x45	; 69
     8ea:	93 30       	cpi	r25, 0x03	; 3
     8ec:	28 f4       	brcc	.+10     	; 0x8f8 <vfprintf+0x10a>
     8ee:	0c 5f       	subi	r16, 0xFC	; 252
     8f0:	1f 4f       	sbci	r17, 0xFF	; 255
     8f2:	9f e3       	ldi	r25, 0x3F	; 63
     8f4:	99 83       	std	Y+1, r25	; 0x01
     8f6:	0d c0       	rjmp	.+26     	; 0x912 <vfprintf+0x124>
     8f8:	83 36       	cpi	r24, 0x63	; 99
     8fa:	31 f0       	breq	.+12     	; 0x908 <vfprintf+0x11a>
     8fc:	83 37       	cpi	r24, 0x73	; 115
     8fe:	71 f0       	breq	.+28     	; 0x91c <vfprintf+0x12e>
     900:	83 35       	cpi	r24, 0x53	; 83
     902:	09 f0       	breq	.+2      	; 0x906 <vfprintf+0x118>
     904:	59 c0       	rjmp	.+178    	; 0x9b8 <vfprintf+0x1ca>
     906:	21 c0       	rjmp	.+66     	; 0x94a <vfprintf+0x15c>
     908:	f8 01       	movw	r30, r16
     90a:	80 81       	ld	r24, Z
     90c:	89 83       	std	Y+1, r24	; 0x01
     90e:	0e 5f       	subi	r16, 0xFE	; 254
     910:	1f 4f       	sbci	r17, 0xFF	; 255
     912:	88 24       	eor	r8, r8
     914:	83 94       	inc	r8
     916:	91 2c       	mov	r9, r1
     918:	53 01       	movw	r10, r6
     91a:	13 c0       	rjmp	.+38     	; 0x942 <vfprintf+0x154>
     91c:	28 01       	movw	r4, r16
     91e:	f2 e0       	ldi	r31, 0x02	; 2
     920:	4f 0e       	add	r4, r31
     922:	51 1c       	adc	r5, r1
     924:	f8 01       	movw	r30, r16
     926:	a0 80       	ld	r10, Z
     928:	b1 80       	ldd	r11, Z+1	; 0x01
     92a:	36 fe       	sbrs	r3, 6
     92c:	03 c0       	rjmp	.+6      	; 0x934 <vfprintf+0x146>
     92e:	69 2d       	mov	r22, r9
     930:	70 e0       	ldi	r23, 0x00	; 0
     932:	02 c0       	rjmp	.+4      	; 0x938 <vfprintf+0x14a>
     934:	6f ef       	ldi	r22, 0xFF	; 255
     936:	7f ef       	ldi	r23, 0xFF	; 255
     938:	c5 01       	movw	r24, r10
     93a:	0e 94 27 07 	call	0xe4e	; 0xe4e <strnlen>
     93e:	4c 01       	movw	r8, r24
     940:	82 01       	movw	r16, r4
     942:	f3 2d       	mov	r31, r3
     944:	ff 77       	andi	r31, 0x7F	; 127
     946:	3f 2e       	mov	r3, r31
     948:	16 c0       	rjmp	.+44     	; 0x976 <vfprintf+0x188>
     94a:	28 01       	movw	r4, r16
     94c:	22 e0       	ldi	r18, 0x02	; 2
     94e:	42 0e       	add	r4, r18
     950:	51 1c       	adc	r5, r1
     952:	f8 01       	movw	r30, r16
     954:	a0 80       	ld	r10, Z
     956:	b1 80       	ldd	r11, Z+1	; 0x01
     958:	36 fe       	sbrs	r3, 6
     95a:	03 c0       	rjmp	.+6      	; 0x962 <vfprintf+0x174>
     95c:	69 2d       	mov	r22, r9
     95e:	70 e0       	ldi	r23, 0x00	; 0
     960:	02 c0       	rjmp	.+4      	; 0x966 <vfprintf+0x178>
     962:	6f ef       	ldi	r22, 0xFF	; 255
     964:	7f ef       	ldi	r23, 0xFF	; 255
     966:	c5 01       	movw	r24, r10
     968:	0e 94 15 07 	call	0xe2a	; 0xe2a <strnlen_P>
     96c:	4c 01       	movw	r8, r24
     96e:	f3 2d       	mov	r31, r3
     970:	f0 68       	ori	r31, 0x80	; 128
     972:	3f 2e       	mov	r3, r31
     974:	82 01       	movw	r16, r4
     976:	33 fc       	sbrc	r3, 3
     978:	1b c0       	rjmp	.+54     	; 0x9b0 <vfprintf+0x1c2>
     97a:	82 2d       	mov	r24, r2
     97c:	90 e0       	ldi	r25, 0x00	; 0
     97e:	88 16       	cp	r8, r24
     980:	99 06       	cpc	r9, r25
     982:	b0 f4       	brcc	.+44     	; 0x9b0 <vfprintf+0x1c2>
     984:	b6 01       	movw	r22, r12
     986:	80 e2       	ldi	r24, 0x20	; 32
     988:	90 e0       	ldi	r25, 0x00	; 0
     98a:	0e 94 32 07 	call	0xe64	; 0xe64 <fputc>
     98e:	2a 94       	dec	r2
     990:	f4 cf       	rjmp	.-24     	; 0x97a <vfprintf+0x18c>
     992:	f5 01       	movw	r30, r10
     994:	37 fc       	sbrc	r3, 7
     996:	85 91       	lpm	r24, Z+
     998:	37 fe       	sbrs	r3, 7
     99a:	81 91       	ld	r24, Z+
     99c:	5f 01       	movw	r10, r30
     99e:	b6 01       	movw	r22, r12
     9a0:	90 e0       	ldi	r25, 0x00	; 0
     9a2:	0e 94 32 07 	call	0xe64	; 0xe64 <fputc>
     9a6:	21 10       	cpse	r2, r1
     9a8:	2a 94       	dec	r2
     9aa:	21 e0       	ldi	r18, 0x01	; 1
     9ac:	82 1a       	sub	r8, r18
     9ae:	91 08       	sbc	r9, r1
     9b0:	81 14       	cp	r8, r1
     9b2:	91 04       	cpc	r9, r1
     9b4:	71 f7       	brne	.-36     	; 0x992 <vfprintf+0x1a4>
     9b6:	e8 c0       	rjmp	.+464    	; 0xb88 <vfprintf+0x39a>
     9b8:	84 36       	cpi	r24, 0x64	; 100
     9ba:	11 f0       	breq	.+4      	; 0x9c0 <vfprintf+0x1d2>
     9bc:	89 36       	cpi	r24, 0x69	; 105
     9be:	41 f5       	brne	.+80     	; 0xa10 <vfprintf+0x222>
     9c0:	f8 01       	movw	r30, r16
     9c2:	37 fe       	sbrs	r3, 7
     9c4:	07 c0       	rjmp	.+14     	; 0x9d4 <vfprintf+0x1e6>
     9c6:	60 81       	ld	r22, Z
     9c8:	71 81       	ldd	r23, Z+1	; 0x01
     9ca:	82 81       	ldd	r24, Z+2	; 0x02
     9cc:	93 81       	ldd	r25, Z+3	; 0x03
     9ce:	0c 5f       	subi	r16, 0xFC	; 252
     9d0:	1f 4f       	sbci	r17, 0xFF	; 255
     9d2:	08 c0       	rjmp	.+16     	; 0x9e4 <vfprintf+0x1f6>
     9d4:	60 81       	ld	r22, Z
     9d6:	71 81       	ldd	r23, Z+1	; 0x01
     9d8:	07 2e       	mov	r0, r23
     9da:	00 0c       	add	r0, r0
     9dc:	88 0b       	sbc	r24, r24
     9de:	99 0b       	sbc	r25, r25
     9e0:	0e 5f       	subi	r16, 0xFE	; 254
     9e2:	1f 4f       	sbci	r17, 0xFF	; 255
     9e4:	f3 2d       	mov	r31, r3
     9e6:	ff 76       	andi	r31, 0x6F	; 111
     9e8:	3f 2e       	mov	r3, r31
     9ea:	97 ff       	sbrs	r25, 7
     9ec:	09 c0       	rjmp	.+18     	; 0xa00 <vfprintf+0x212>
     9ee:	90 95       	com	r25
     9f0:	80 95       	com	r24
     9f2:	70 95       	com	r23
     9f4:	61 95       	neg	r22
     9f6:	7f 4f       	sbci	r23, 0xFF	; 255
     9f8:	8f 4f       	sbci	r24, 0xFF	; 255
     9fa:	9f 4f       	sbci	r25, 0xFF	; 255
     9fc:	f0 68       	ori	r31, 0x80	; 128
     9fe:	3f 2e       	mov	r3, r31
     a00:	2a e0       	ldi	r18, 0x0A	; 10
     a02:	30 e0       	ldi	r19, 0x00	; 0
     a04:	a3 01       	movw	r20, r6
     a06:	0e 94 6e 07 	call	0xedc	; 0xedc <__ultoa_invert>
     a0a:	88 2e       	mov	r8, r24
     a0c:	86 18       	sub	r8, r6
     a0e:	45 c0       	rjmp	.+138    	; 0xa9a <vfprintf+0x2ac>
     a10:	85 37       	cpi	r24, 0x75	; 117
     a12:	31 f4       	brne	.+12     	; 0xa20 <vfprintf+0x232>
     a14:	23 2d       	mov	r18, r3
     a16:	2f 7e       	andi	r18, 0xEF	; 239
     a18:	b2 2e       	mov	r11, r18
     a1a:	2a e0       	ldi	r18, 0x0A	; 10
     a1c:	30 e0       	ldi	r19, 0x00	; 0
     a1e:	25 c0       	rjmp	.+74     	; 0xa6a <vfprintf+0x27c>
     a20:	93 2d       	mov	r25, r3
     a22:	99 7f       	andi	r25, 0xF9	; 249
     a24:	b9 2e       	mov	r11, r25
     a26:	8f 36       	cpi	r24, 0x6F	; 111
     a28:	c1 f0       	breq	.+48     	; 0xa5a <vfprintf+0x26c>
     a2a:	18 f4       	brcc	.+6      	; 0xa32 <vfprintf+0x244>
     a2c:	88 35       	cpi	r24, 0x58	; 88
     a2e:	79 f0       	breq	.+30     	; 0xa4e <vfprintf+0x260>
     a30:	b5 c0       	rjmp	.+362    	; 0xb9c <vfprintf+0x3ae>
     a32:	80 37       	cpi	r24, 0x70	; 112
     a34:	19 f0       	breq	.+6      	; 0xa3c <vfprintf+0x24e>
     a36:	88 37       	cpi	r24, 0x78	; 120
     a38:	21 f0       	breq	.+8      	; 0xa42 <vfprintf+0x254>
     a3a:	b0 c0       	rjmp	.+352    	; 0xb9c <vfprintf+0x3ae>
     a3c:	e9 2f       	mov	r30, r25
     a3e:	e0 61       	ori	r30, 0x10	; 16
     a40:	be 2e       	mov	r11, r30
     a42:	b4 fe       	sbrs	r11, 4
     a44:	0d c0       	rjmp	.+26     	; 0xa60 <vfprintf+0x272>
     a46:	fb 2d       	mov	r31, r11
     a48:	f4 60       	ori	r31, 0x04	; 4
     a4a:	bf 2e       	mov	r11, r31
     a4c:	09 c0       	rjmp	.+18     	; 0xa60 <vfprintf+0x272>
     a4e:	34 fe       	sbrs	r3, 4
     a50:	0a c0       	rjmp	.+20     	; 0xa66 <vfprintf+0x278>
     a52:	29 2f       	mov	r18, r25
     a54:	26 60       	ori	r18, 0x06	; 6
     a56:	b2 2e       	mov	r11, r18
     a58:	06 c0       	rjmp	.+12     	; 0xa66 <vfprintf+0x278>
     a5a:	28 e0       	ldi	r18, 0x08	; 8
     a5c:	30 e0       	ldi	r19, 0x00	; 0
     a5e:	05 c0       	rjmp	.+10     	; 0xa6a <vfprintf+0x27c>
     a60:	20 e1       	ldi	r18, 0x10	; 16
     a62:	30 e0       	ldi	r19, 0x00	; 0
     a64:	02 c0       	rjmp	.+4      	; 0xa6a <vfprintf+0x27c>
     a66:	20 e1       	ldi	r18, 0x10	; 16
     a68:	32 e0       	ldi	r19, 0x02	; 2
     a6a:	f8 01       	movw	r30, r16
     a6c:	b7 fe       	sbrs	r11, 7
     a6e:	07 c0       	rjmp	.+14     	; 0xa7e <vfprintf+0x290>
     a70:	60 81       	ld	r22, Z
     a72:	71 81       	ldd	r23, Z+1	; 0x01
     a74:	82 81       	ldd	r24, Z+2	; 0x02
     a76:	93 81       	ldd	r25, Z+3	; 0x03
     a78:	0c 5f       	subi	r16, 0xFC	; 252
     a7a:	1f 4f       	sbci	r17, 0xFF	; 255
     a7c:	06 c0       	rjmp	.+12     	; 0xa8a <vfprintf+0x29c>
     a7e:	60 81       	ld	r22, Z
     a80:	71 81       	ldd	r23, Z+1	; 0x01
     a82:	80 e0       	ldi	r24, 0x00	; 0
     a84:	90 e0       	ldi	r25, 0x00	; 0
     a86:	0e 5f       	subi	r16, 0xFE	; 254
     a88:	1f 4f       	sbci	r17, 0xFF	; 255
     a8a:	a3 01       	movw	r20, r6
     a8c:	0e 94 6e 07 	call	0xedc	; 0xedc <__ultoa_invert>
     a90:	88 2e       	mov	r8, r24
     a92:	86 18       	sub	r8, r6
     a94:	fb 2d       	mov	r31, r11
     a96:	ff 77       	andi	r31, 0x7F	; 127
     a98:	3f 2e       	mov	r3, r31
     a9a:	36 fe       	sbrs	r3, 6
     a9c:	0d c0       	rjmp	.+26     	; 0xab8 <vfprintf+0x2ca>
     a9e:	23 2d       	mov	r18, r3
     aa0:	2e 7f       	andi	r18, 0xFE	; 254
     aa2:	a2 2e       	mov	r10, r18
     aa4:	89 14       	cp	r8, r9
     aa6:	58 f4       	brcc	.+22     	; 0xabe <vfprintf+0x2d0>
     aa8:	34 fe       	sbrs	r3, 4
     aaa:	0b c0       	rjmp	.+22     	; 0xac2 <vfprintf+0x2d4>
     aac:	32 fc       	sbrc	r3, 2
     aae:	09 c0       	rjmp	.+18     	; 0xac2 <vfprintf+0x2d4>
     ab0:	83 2d       	mov	r24, r3
     ab2:	8e 7e       	andi	r24, 0xEE	; 238
     ab4:	a8 2e       	mov	r10, r24
     ab6:	05 c0       	rjmp	.+10     	; 0xac2 <vfprintf+0x2d4>
     ab8:	b8 2c       	mov	r11, r8
     aba:	a3 2c       	mov	r10, r3
     abc:	03 c0       	rjmp	.+6      	; 0xac4 <vfprintf+0x2d6>
     abe:	b8 2c       	mov	r11, r8
     ac0:	01 c0       	rjmp	.+2      	; 0xac4 <vfprintf+0x2d6>
     ac2:	b9 2c       	mov	r11, r9
     ac4:	a4 fe       	sbrs	r10, 4
     ac6:	0f c0       	rjmp	.+30     	; 0xae6 <vfprintf+0x2f8>
     ac8:	fe 01       	movw	r30, r28
     aca:	e8 0d       	add	r30, r8
     acc:	f1 1d       	adc	r31, r1
     ace:	80 81       	ld	r24, Z
     ad0:	80 33       	cpi	r24, 0x30	; 48
     ad2:	21 f4       	brne	.+8      	; 0xadc <vfprintf+0x2ee>
     ad4:	9a 2d       	mov	r25, r10
     ad6:	99 7e       	andi	r25, 0xE9	; 233
     ad8:	a9 2e       	mov	r10, r25
     ada:	09 c0       	rjmp	.+18     	; 0xaee <vfprintf+0x300>
     adc:	a2 fe       	sbrs	r10, 2
     ade:	06 c0       	rjmp	.+12     	; 0xaec <vfprintf+0x2fe>
     ae0:	b3 94       	inc	r11
     ae2:	b3 94       	inc	r11
     ae4:	04 c0       	rjmp	.+8      	; 0xaee <vfprintf+0x300>
     ae6:	8a 2d       	mov	r24, r10
     ae8:	86 78       	andi	r24, 0x86	; 134
     aea:	09 f0       	breq	.+2      	; 0xaee <vfprintf+0x300>
     aec:	b3 94       	inc	r11
     aee:	a3 fc       	sbrc	r10, 3
     af0:	11 c0       	rjmp	.+34     	; 0xb14 <vfprintf+0x326>
     af2:	a0 fe       	sbrs	r10, 0
     af4:	06 c0       	rjmp	.+12     	; 0xb02 <vfprintf+0x314>
     af6:	b2 14       	cp	r11, r2
     af8:	88 f4       	brcc	.+34     	; 0xb1c <vfprintf+0x32e>
     afa:	28 0c       	add	r2, r8
     afc:	92 2c       	mov	r9, r2
     afe:	9b 18       	sub	r9, r11
     b00:	0e c0       	rjmp	.+28     	; 0xb1e <vfprintf+0x330>
     b02:	b2 14       	cp	r11, r2
     b04:	60 f4       	brcc	.+24     	; 0xb1e <vfprintf+0x330>
     b06:	b6 01       	movw	r22, r12
     b08:	80 e2       	ldi	r24, 0x20	; 32
     b0a:	90 e0       	ldi	r25, 0x00	; 0
     b0c:	0e 94 32 07 	call	0xe64	; 0xe64 <fputc>
     b10:	b3 94       	inc	r11
     b12:	f7 cf       	rjmp	.-18     	; 0xb02 <vfprintf+0x314>
     b14:	b2 14       	cp	r11, r2
     b16:	18 f4       	brcc	.+6      	; 0xb1e <vfprintf+0x330>
     b18:	2b 18       	sub	r2, r11
     b1a:	02 c0       	rjmp	.+4      	; 0xb20 <vfprintf+0x332>
     b1c:	98 2c       	mov	r9, r8
     b1e:	21 2c       	mov	r2, r1
     b20:	a4 fe       	sbrs	r10, 4
     b22:	10 c0       	rjmp	.+32     	; 0xb44 <vfprintf+0x356>
     b24:	b6 01       	movw	r22, r12
     b26:	80 e3       	ldi	r24, 0x30	; 48
     b28:	90 e0       	ldi	r25, 0x00	; 0
     b2a:	0e 94 32 07 	call	0xe64	; 0xe64 <fputc>
     b2e:	a2 fe       	sbrs	r10, 2
     b30:	17 c0       	rjmp	.+46     	; 0xb60 <vfprintf+0x372>
     b32:	a1 fc       	sbrc	r10, 1
     b34:	03 c0       	rjmp	.+6      	; 0xb3c <vfprintf+0x34e>
     b36:	88 e7       	ldi	r24, 0x78	; 120
     b38:	90 e0       	ldi	r25, 0x00	; 0
     b3a:	02 c0       	rjmp	.+4      	; 0xb40 <vfprintf+0x352>
     b3c:	88 e5       	ldi	r24, 0x58	; 88
     b3e:	90 e0       	ldi	r25, 0x00	; 0
     b40:	b6 01       	movw	r22, r12
     b42:	0c c0       	rjmp	.+24     	; 0xb5c <vfprintf+0x36e>
     b44:	8a 2d       	mov	r24, r10
     b46:	86 78       	andi	r24, 0x86	; 134
     b48:	59 f0       	breq	.+22     	; 0xb60 <vfprintf+0x372>
     b4a:	a1 fe       	sbrs	r10, 1
     b4c:	02 c0       	rjmp	.+4      	; 0xb52 <vfprintf+0x364>
     b4e:	8b e2       	ldi	r24, 0x2B	; 43
     b50:	01 c0       	rjmp	.+2      	; 0xb54 <vfprintf+0x366>
     b52:	80 e2       	ldi	r24, 0x20	; 32
     b54:	a7 fc       	sbrc	r10, 7
     b56:	8d e2       	ldi	r24, 0x2D	; 45
     b58:	b6 01       	movw	r22, r12
     b5a:	90 e0       	ldi	r25, 0x00	; 0
     b5c:	0e 94 32 07 	call	0xe64	; 0xe64 <fputc>
     b60:	89 14       	cp	r8, r9
     b62:	38 f4       	brcc	.+14     	; 0xb72 <vfprintf+0x384>
     b64:	b6 01       	movw	r22, r12
     b66:	80 e3       	ldi	r24, 0x30	; 48
     b68:	90 e0       	ldi	r25, 0x00	; 0
     b6a:	0e 94 32 07 	call	0xe64	; 0xe64 <fputc>
     b6e:	9a 94       	dec	r9
     b70:	f7 cf       	rjmp	.-18     	; 0xb60 <vfprintf+0x372>
     b72:	8a 94       	dec	r8
     b74:	f3 01       	movw	r30, r6
     b76:	e8 0d       	add	r30, r8
     b78:	f1 1d       	adc	r31, r1
     b7a:	80 81       	ld	r24, Z
     b7c:	b6 01       	movw	r22, r12
     b7e:	90 e0       	ldi	r25, 0x00	; 0
     b80:	0e 94 32 07 	call	0xe64	; 0xe64 <fputc>
     b84:	81 10       	cpse	r8, r1
     b86:	f5 cf       	rjmp	.-22     	; 0xb72 <vfprintf+0x384>
     b88:	22 20       	and	r2, r2
     b8a:	09 f4       	brne	.+2      	; 0xb8e <vfprintf+0x3a0>
     b8c:	42 ce       	rjmp	.-892    	; 0x812 <vfprintf+0x24>
     b8e:	b6 01       	movw	r22, r12
     b90:	80 e2       	ldi	r24, 0x20	; 32
     b92:	90 e0       	ldi	r25, 0x00	; 0
     b94:	0e 94 32 07 	call	0xe64	; 0xe64 <fputc>
     b98:	2a 94       	dec	r2
     b9a:	f6 cf       	rjmp	.-20     	; 0xb88 <vfprintf+0x39a>
     b9c:	f6 01       	movw	r30, r12
     b9e:	86 81       	ldd	r24, Z+6	; 0x06
     ba0:	97 81       	ldd	r25, Z+7	; 0x07
     ba2:	02 c0       	rjmp	.+4      	; 0xba8 <vfprintf+0x3ba>
     ba4:	8f ef       	ldi	r24, 0xFF	; 255
     ba6:	9f ef       	ldi	r25, 0xFF	; 255
     ba8:	2b 96       	adiw	r28, 0x0b	; 11
     baa:	e2 e1       	ldi	r30, 0x12	; 18
     bac:	0c 94 e8 07 	jmp	0xfd0	; 0xfd0 <__epilogue_restores__>

00000bb0 <calloc>:
     bb0:	0f 93       	push	r16
     bb2:	1f 93       	push	r17
     bb4:	cf 93       	push	r28
     bb6:	df 93       	push	r29
     bb8:	86 9f       	mul	r24, r22
     bba:	80 01       	movw	r16, r0
     bbc:	87 9f       	mul	r24, r23
     bbe:	10 0d       	add	r17, r0
     bc0:	96 9f       	mul	r25, r22
     bc2:	10 0d       	add	r17, r0
     bc4:	11 24       	eor	r1, r1
     bc6:	c8 01       	movw	r24, r16
     bc8:	0e 94 f4 05 	call	0xbe8	; 0xbe8 <malloc>
     bcc:	ec 01       	movw	r28, r24
     bce:	00 97       	sbiw	r24, 0x00	; 0
     bd0:	29 f0       	breq	.+10     	; 0xbdc <calloc+0x2c>
     bd2:	a8 01       	movw	r20, r16
     bd4:	60 e0       	ldi	r22, 0x00	; 0
     bd6:	70 e0       	ldi	r23, 0x00	; 0
     bd8:	0e 94 20 07 	call	0xe40	; 0xe40 <memset>
     bdc:	ce 01       	movw	r24, r28
     bde:	df 91       	pop	r29
     be0:	cf 91       	pop	r28
     be2:	1f 91       	pop	r17
     be4:	0f 91       	pop	r16
     be6:	08 95       	ret

00000be8 <malloc>:
     be8:	0f 93       	push	r16
     bea:	1f 93       	push	r17
     bec:	cf 93       	push	r28
     bee:	df 93       	push	r29
     bf0:	82 30       	cpi	r24, 0x02	; 2
     bf2:	91 05       	cpc	r25, r1
     bf4:	10 f4       	brcc	.+4      	; 0xbfa <malloc+0x12>
     bf6:	82 e0       	ldi	r24, 0x02	; 2
     bf8:	90 e0       	ldi	r25, 0x00	; 0
     bfa:	e0 91 ae 01 	lds	r30, 0x01AE	; 0x8001ae <__flp>
     bfe:	f0 91 af 01 	lds	r31, 0x01AF	; 0x8001af <__flp+0x1>
     c02:	20 e0       	ldi	r18, 0x00	; 0
     c04:	30 e0       	ldi	r19, 0x00	; 0
     c06:	a0 e0       	ldi	r26, 0x00	; 0
     c08:	b0 e0       	ldi	r27, 0x00	; 0
     c0a:	30 97       	sbiw	r30, 0x00	; 0
     c0c:	19 f1       	breq	.+70     	; 0xc54 <malloc+0x6c>
     c0e:	40 81       	ld	r20, Z
     c10:	51 81       	ldd	r21, Z+1	; 0x01
     c12:	02 81       	ldd	r16, Z+2	; 0x02
     c14:	13 81       	ldd	r17, Z+3	; 0x03
     c16:	48 17       	cp	r20, r24
     c18:	59 07       	cpc	r21, r25
     c1a:	c8 f0       	brcs	.+50     	; 0xc4e <malloc+0x66>
     c1c:	84 17       	cp	r24, r20
     c1e:	95 07       	cpc	r25, r21
     c20:	69 f4       	brne	.+26     	; 0xc3c <malloc+0x54>
     c22:	10 97       	sbiw	r26, 0x00	; 0
     c24:	31 f0       	breq	.+12     	; 0xc32 <malloc+0x4a>
     c26:	12 96       	adiw	r26, 0x02	; 2
     c28:	0c 93       	st	X, r16
     c2a:	12 97       	sbiw	r26, 0x02	; 2
     c2c:	13 96       	adiw	r26, 0x03	; 3
     c2e:	1c 93       	st	X, r17
     c30:	27 c0       	rjmp	.+78     	; 0xc80 <malloc+0x98>
     c32:	00 93 ae 01 	sts	0x01AE, r16	; 0x8001ae <__flp>
     c36:	10 93 af 01 	sts	0x01AF, r17	; 0x8001af <__flp+0x1>
     c3a:	22 c0       	rjmp	.+68     	; 0xc80 <malloc+0x98>
     c3c:	21 15       	cp	r18, r1
     c3e:	31 05       	cpc	r19, r1
     c40:	19 f0       	breq	.+6      	; 0xc48 <malloc+0x60>
     c42:	42 17       	cp	r20, r18
     c44:	53 07       	cpc	r21, r19
     c46:	18 f4       	brcc	.+6      	; 0xc4e <malloc+0x66>
     c48:	9a 01       	movw	r18, r20
     c4a:	bd 01       	movw	r22, r26
     c4c:	ef 01       	movw	r28, r30
     c4e:	df 01       	movw	r26, r30
     c50:	f8 01       	movw	r30, r16
     c52:	db cf       	rjmp	.-74     	; 0xc0a <malloc+0x22>
     c54:	21 15       	cp	r18, r1
     c56:	31 05       	cpc	r19, r1
     c58:	f9 f0       	breq	.+62     	; 0xc98 <malloc+0xb0>
     c5a:	28 1b       	sub	r18, r24
     c5c:	39 0b       	sbc	r19, r25
     c5e:	24 30       	cpi	r18, 0x04	; 4
     c60:	31 05       	cpc	r19, r1
     c62:	80 f4       	brcc	.+32     	; 0xc84 <malloc+0x9c>
     c64:	8a 81       	ldd	r24, Y+2	; 0x02
     c66:	9b 81       	ldd	r25, Y+3	; 0x03
     c68:	61 15       	cp	r22, r1
     c6a:	71 05       	cpc	r23, r1
     c6c:	21 f0       	breq	.+8      	; 0xc76 <malloc+0x8e>
     c6e:	fb 01       	movw	r30, r22
     c70:	93 83       	std	Z+3, r25	; 0x03
     c72:	82 83       	std	Z+2, r24	; 0x02
     c74:	04 c0       	rjmp	.+8      	; 0xc7e <malloc+0x96>
     c76:	90 93 af 01 	sts	0x01AF, r25	; 0x8001af <__flp+0x1>
     c7a:	80 93 ae 01 	sts	0x01AE, r24	; 0x8001ae <__flp>
     c7e:	fe 01       	movw	r30, r28
     c80:	32 96       	adiw	r30, 0x02	; 2
     c82:	44 c0       	rjmp	.+136    	; 0xd0c <malloc+0x124>
     c84:	fe 01       	movw	r30, r28
     c86:	e2 0f       	add	r30, r18
     c88:	f3 1f       	adc	r31, r19
     c8a:	81 93       	st	Z+, r24
     c8c:	91 93       	st	Z+, r25
     c8e:	22 50       	subi	r18, 0x02	; 2
     c90:	31 09       	sbc	r19, r1
     c92:	39 83       	std	Y+1, r19	; 0x01
     c94:	28 83       	st	Y, r18
     c96:	3a c0       	rjmp	.+116    	; 0xd0c <malloc+0x124>
     c98:	20 91 ac 01 	lds	r18, 0x01AC	; 0x8001ac <__brkval>
     c9c:	30 91 ad 01 	lds	r19, 0x01AD	; 0x8001ad <__brkval+0x1>
     ca0:	23 2b       	or	r18, r19
     ca2:	41 f4       	brne	.+16     	; 0xcb4 <malloc+0xcc>
     ca4:	20 91 02 01 	lds	r18, 0x0102	; 0x800102 <__malloc_heap_start>
     ca8:	30 91 03 01 	lds	r19, 0x0103	; 0x800103 <__malloc_heap_start+0x1>
     cac:	30 93 ad 01 	sts	0x01AD, r19	; 0x8001ad <__brkval+0x1>
     cb0:	20 93 ac 01 	sts	0x01AC, r18	; 0x8001ac <__brkval>
     cb4:	20 91 00 01 	lds	r18, 0x0100	; 0x800100 <__data_start>
     cb8:	30 91 01 01 	lds	r19, 0x0101	; 0x800101 <__data_start+0x1>
     cbc:	21 15       	cp	r18, r1
     cbe:	31 05       	cpc	r19, r1
     cc0:	41 f4       	brne	.+16     	; 0xcd2 <malloc+0xea>
     cc2:	2d b7       	in	r18, 0x3d	; 61
     cc4:	3e b7       	in	r19, 0x3e	; 62
     cc6:	40 91 04 01 	lds	r20, 0x0104	; 0x800104 <__malloc_margin>
     cca:	50 91 05 01 	lds	r21, 0x0105	; 0x800105 <__malloc_margin+0x1>
     cce:	24 1b       	sub	r18, r20
     cd0:	35 0b       	sbc	r19, r21
     cd2:	e0 91 ac 01 	lds	r30, 0x01AC	; 0x8001ac <__brkval>
     cd6:	f0 91 ad 01 	lds	r31, 0x01AD	; 0x8001ad <__brkval+0x1>
     cda:	e2 17       	cp	r30, r18
     cdc:	f3 07       	cpc	r31, r19
     cde:	a0 f4       	brcc	.+40     	; 0xd08 <malloc+0x120>
     ce0:	2e 1b       	sub	r18, r30
     ce2:	3f 0b       	sbc	r19, r31
     ce4:	28 17       	cp	r18, r24
     ce6:	39 07       	cpc	r19, r25
     ce8:	78 f0       	brcs	.+30     	; 0xd08 <malloc+0x120>
     cea:	ac 01       	movw	r20, r24
     cec:	4e 5f       	subi	r20, 0xFE	; 254
     cee:	5f 4f       	sbci	r21, 0xFF	; 255
     cf0:	24 17       	cp	r18, r20
     cf2:	35 07       	cpc	r19, r21
     cf4:	48 f0       	brcs	.+18     	; 0xd08 <malloc+0x120>
     cf6:	4e 0f       	add	r20, r30
     cf8:	5f 1f       	adc	r21, r31
     cfa:	50 93 ad 01 	sts	0x01AD, r21	; 0x8001ad <__brkval+0x1>
     cfe:	40 93 ac 01 	sts	0x01AC, r20	; 0x8001ac <__brkval>
     d02:	81 93       	st	Z+, r24
     d04:	91 93       	st	Z+, r25
     d06:	02 c0       	rjmp	.+4      	; 0xd0c <malloc+0x124>
     d08:	e0 e0       	ldi	r30, 0x00	; 0
     d0a:	f0 e0       	ldi	r31, 0x00	; 0
     d0c:	cf 01       	movw	r24, r30
     d0e:	df 91       	pop	r29
     d10:	cf 91       	pop	r28
     d12:	1f 91       	pop	r17
     d14:	0f 91       	pop	r16
     d16:	08 95       	ret

00000d18 <free>:
     d18:	cf 93       	push	r28
     d1a:	df 93       	push	r29
     d1c:	00 97       	sbiw	r24, 0x00	; 0
     d1e:	09 f4       	brne	.+2      	; 0xd22 <free+0xa>
     d20:	81 c0       	rjmp	.+258    	; 0xe24 <free+0x10c>
     d22:	fc 01       	movw	r30, r24
     d24:	32 97       	sbiw	r30, 0x02	; 2
     d26:	13 82       	std	Z+3, r1	; 0x03
     d28:	12 82       	std	Z+2, r1	; 0x02
     d2a:	a0 91 ae 01 	lds	r26, 0x01AE	; 0x8001ae <__flp>
     d2e:	b0 91 af 01 	lds	r27, 0x01AF	; 0x8001af <__flp+0x1>
     d32:	10 97       	sbiw	r26, 0x00	; 0
     d34:	81 f4       	brne	.+32     	; 0xd56 <free+0x3e>
     d36:	20 81       	ld	r18, Z
     d38:	31 81       	ldd	r19, Z+1	; 0x01
     d3a:	82 0f       	add	r24, r18
     d3c:	93 1f       	adc	r25, r19
     d3e:	20 91 ac 01 	lds	r18, 0x01AC	; 0x8001ac <__brkval>
     d42:	30 91 ad 01 	lds	r19, 0x01AD	; 0x8001ad <__brkval+0x1>
     d46:	28 17       	cp	r18, r24
     d48:	39 07       	cpc	r19, r25
     d4a:	51 f5       	brne	.+84     	; 0xda0 <free+0x88>
     d4c:	f0 93 ad 01 	sts	0x01AD, r31	; 0x8001ad <__brkval+0x1>
     d50:	e0 93 ac 01 	sts	0x01AC, r30	; 0x8001ac <__brkval>
     d54:	67 c0       	rjmp	.+206    	; 0xe24 <free+0x10c>
     d56:	ed 01       	movw	r28, r26
     d58:	20 e0       	ldi	r18, 0x00	; 0
     d5a:	30 e0       	ldi	r19, 0x00	; 0
     d5c:	ce 17       	cp	r28, r30
     d5e:	df 07       	cpc	r29, r31
     d60:	40 f4       	brcc	.+16     	; 0xd72 <free+0x5a>
     d62:	4a 81       	ldd	r20, Y+2	; 0x02
     d64:	5b 81       	ldd	r21, Y+3	; 0x03
     d66:	9e 01       	movw	r18, r28
     d68:	41 15       	cp	r20, r1
     d6a:	51 05       	cpc	r21, r1
     d6c:	f1 f0       	breq	.+60     	; 0xdaa <free+0x92>
     d6e:	ea 01       	movw	r28, r20
     d70:	f5 cf       	rjmp	.-22     	; 0xd5c <free+0x44>
     d72:	d3 83       	std	Z+3, r29	; 0x03
     d74:	c2 83       	std	Z+2, r28	; 0x02
     d76:	40 81       	ld	r20, Z
     d78:	51 81       	ldd	r21, Z+1	; 0x01
     d7a:	84 0f       	add	r24, r20
     d7c:	95 1f       	adc	r25, r21
     d7e:	c8 17       	cp	r28, r24
     d80:	d9 07       	cpc	r29, r25
     d82:	59 f4       	brne	.+22     	; 0xd9a <free+0x82>
     d84:	88 81       	ld	r24, Y
     d86:	99 81       	ldd	r25, Y+1	; 0x01
     d88:	84 0f       	add	r24, r20
     d8a:	95 1f       	adc	r25, r21
     d8c:	02 96       	adiw	r24, 0x02	; 2
     d8e:	91 83       	std	Z+1, r25	; 0x01
     d90:	80 83       	st	Z, r24
     d92:	8a 81       	ldd	r24, Y+2	; 0x02
     d94:	9b 81       	ldd	r25, Y+3	; 0x03
     d96:	93 83       	std	Z+3, r25	; 0x03
     d98:	82 83       	std	Z+2, r24	; 0x02
     d9a:	21 15       	cp	r18, r1
     d9c:	31 05       	cpc	r19, r1
     d9e:	29 f4       	brne	.+10     	; 0xdaa <free+0x92>
     da0:	f0 93 af 01 	sts	0x01AF, r31	; 0x8001af <__flp+0x1>
     da4:	e0 93 ae 01 	sts	0x01AE, r30	; 0x8001ae <__flp>
     da8:	3d c0       	rjmp	.+122    	; 0xe24 <free+0x10c>
     daa:	e9 01       	movw	r28, r18
     dac:	fb 83       	std	Y+3, r31	; 0x03
     dae:	ea 83       	std	Y+2, r30	; 0x02
     db0:	49 91       	ld	r20, Y+
     db2:	59 91       	ld	r21, Y+
     db4:	c4 0f       	add	r28, r20
     db6:	d5 1f       	adc	r29, r21
     db8:	ec 17       	cp	r30, r28
     dba:	fd 07       	cpc	r31, r29
     dbc:	61 f4       	brne	.+24     	; 0xdd6 <free+0xbe>
     dbe:	80 81       	ld	r24, Z
     dc0:	91 81       	ldd	r25, Z+1	; 0x01
     dc2:	84 0f       	add	r24, r20
     dc4:	95 1f       	adc	r25, r21
     dc6:	02 96       	adiw	r24, 0x02	; 2
     dc8:	e9 01       	movw	r28, r18
     dca:	99 83       	std	Y+1, r25	; 0x01
     dcc:	88 83       	st	Y, r24
     dce:	82 81       	ldd	r24, Z+2	; 0x02
     dd0:	93 81       	ldd	r25, Z+3	; 0x03
     dd2:	9b 83       	std	Y+3, r25	; 0x03
     dd4:	8a 83       	std	Y+2, r24	; 0x02
     dd6:	e0 e0       	ldi	r30, 0x00	; 0
     dd8:	f0 e0       	ldi	r31, 0x00	; 0
     dda:	12 96       	adiw	r26, 0x02	; 2
     ddc:	8d 91       	ld	r24, X+
     dde:	9c 91       	ld	r25, X
     de0:	13 97       	sbiw	r26, 0x03	; 3
     de2:	00 97       	sbiw	r24, 0x00	; 0
     de4:	19 f0       	breq	.+6      	; 0xdec <free+0xd4>
     de6:	fd 01       	movw	r30, r26
     de8:	dc 01       	movw	r26, r24
     dea:	f7 cf       	rjmp	.-18     	; 0xdda <free+0xc2>
     dec:	8d 91       	ld	r24, X+
     dee:	9c 91       	ld	r25, X
     df0:	11 97       	sbiw	r26, 0x01	; 1
     df2:	9d 01       	movw	r18, r26
     df4:	2e 5f       	subi	r18, 0xFE	; 254
     df6:	3f 4f       	sbci	r19, 0xFF	; 255
     df8:	82 0f       	add	r24, r18
     dfa:	93 1f       	adc	r25, r19
     dfc:	20 91 ac 01 	lds	r18, 0x01AC	; 0x8001ac <__brkval>
     e00:	30 91 ad 01 	lds	r19, 0x01AD	; 0x8001ad <__brkval+0x1>
     e04:	28 17       	cp	r18, r24
     e06:	39 07       	cpc	r19, r25
     e08:	69 f4       	brne	.+26     	; 0xe24 <free+0x10c>
     e0a:	30 97       	sbiw	r30, 0x00	; 0
     e0c:	29 f4       	brne	.+10     	; 0xe18 <free+0x100>
     e0e:	10 92 af 01 	sts	0x01AF, r1	; 0x8001af <__flp+0x1>
     e12:	10 92 ae 01 	sts	0x01AE, r1	; 0x8001ae <__flp>
     e16:	02 c0       	rjmp	.+4      	; 0xe1c <free+0x104>
     e18:	13 82       	std	Z+3, r1	; 0x03
     e1a:	12 82       	std	Z+2, r1	; 0x02
     e1c:	b0 93 ad 01 	sts	0x01AD, r27	; 0x8001ad <__brkval+0x1>
     e20:	a0 93 ac 01 	sts	0x01AC, r26	; 0x8001ac <__brkval>
     e24:	df 91       	pop	r29
     e26:	cf 91       	pop	r28
     e28:	08 95       	ret

00000e2a <strnlen_P>:
     e2a:	fc 01       	movw	r30, r24
     e2c:	05 90       	lpm	r0, Z+
     e2e:	61 50       	subi	r22, 0x01	; 1
     e30:	70 40       	sbci	r23, 0x00	; 0
     e32:	01 10       	cpse	r0, r1
     e34:	d8 f7       	brcc	.-10     	; 0xe2c <strnlen_P+0x2>
     e36:	80 95       	com	r24
     e38:	90 95       	com	r25
     e3a:	8e 0f       	add	r24, r30
     e3c:	9f 1f       	adc	r25, r31
     e3e:	08 95       	ret

00000e40 <memset>:
     e40:	dc 01       	movw	r26, r24
     e42:	01 c0       	rjmp	.+2      	; 0xe46 <memset+0x6>
     e44:	6d 93       	st	X+, r22
     e46:	41 50       	subi	r20, 0x01	; 1
     e48:	50 40       	sbci	r21, 0x00	; 0
     e4a:	e0 f7       	brcc	.-8      	; 0xe44 <memset+0x4>
     e4c:	08 95       	ret

00000e4e <strnlen>:
     e4e:	fc 01       	movw	r30, r24
     e50:	61 50       	subi	r22, 0x01	; 1
     e52:	70 40       	sbci	r23, 0x00	; 0
     e54:	01 90       	ld	r0, Z+
     e56:	01 10       	cpse	r0, r1
     e58:	d8 f7       	brcc	.-10     	; 0xe50 <strnlen+0x2>
     e5a:	80 95       	com	r24
     e5c:	90 95       	com	r25
     e5e:	8e 0f       	add	r24, r30
     e60:	9f 1f       	adc	r25, r31
     e62:	08 95       	ret

00000e64 <fputc>:
     e64:	0f 93       	push	r16
     e66:	1f 93       	push	r17
     e68:	cf 93       	push	r28
     e6a:	df 93       	push	r29
     e6c:	fb 01       	movw	r30, r22
     e6e:	23 81       	ldd	r18, Z+3	; 0x03
     e70:	21 fd       	sbrc	r18, 1
     e72:	03 c0       	rjmp	.+6      	; 0xe7a <fputc+0x16>
     e74:	8f ef       	ldi	r24, 0xFF	; 255
     e76:	9f ef       	ldi	r25, 0xFF	; 255
     e78:	2c c0       	rjmp	.+88     	; 0xed2 <fputc+0x6e>
     e7a:	22 ff       	sbrs	r18, 2
     e7c:	16 c0       	rjmp	.+44     	; 0xeaa <fputc+0x46>
     e7e:	46 81       	ldd	r20, Z+6	; 0x06
     e80:	57 81       	ldd	r21, Z+7	; 0x07
     e82:	24 81       	ldd	r18, Z+4	; 0x04
     e84:	35 81       	ldd	r19, Z+5	; 0x05
     e86:	42 17       	cp	r20, r18
     e88:	53 07       	cpc	r21, r19
     e8a:	44 f4       	brge	.+16     	; 0xe9c <fputc+0x38>
     e8c:	a0 81       	ld	r26, Z
     e8e:	b1 81       	ldd	r27, Z+1	; 0x01
     e90:	9d 01       	movw	r18, r26
     e92:	2f 5f       	subi	r18, 0xFF	; 255
     e94:	3f 4f       	sbci	r19, 0xFF	; 255
     e96:	31 83       	std	Z+1, r19	; 0x01
     e98:	20 83       	st	Z, r18
     e9a:	8c 93       	st	X, r24
     e9c:	26 81       	ldd	r18, Z+6	; 0x06
     e9e:	37 81       	ldd	r19, Z+7	; 0x07
     ea0:	2f 5f       	subi	r18, 0xFF	; 255
     ea2:	3f 4f       	sbci	r19, 0xFF	; 255
     ea4:	37 83       	std	Z+7, r19	; 0x07
     ea6:	26 83       	std	Z+6, r18	; 0x06
     ea8:	14 c0       	rjmp	.+40     	; 0xed2 <fputc+0x6e>
     eaa:	8b 01       	movw	r16, r22
     eac:	ec 01       	movw	r28, r24
     eae:	fb 01       	movw	r30, r22
     eb0:	00 84       	ldd	r0, Z+8	; 0x08
     eb2:	f1 85       	ldd	r31, Z+9	; 0x09
     eb4:	e0 2d       	mov	r30, r0
     eb6:	09 95       	icall
     eb8:	89 2b       	or	r24, r25
     eba:	e1 f6       	brne	.-72     	; 0xe74 <fputc+0x10>
     ebc:	d8 01       	movw	r26, r16
     ebe:	16 96       	adiw	r26, 0x06	; 6
     ec0:	8d 91       	ld	r24, X+
     ec2:	9c 91       	ld	r25, X
     ec4:	17 97       	sbiw	r26, 0x07	; 7
     ec6:	01 96       	adiw	r24, 0x01	; 1
     ec8:	17 96       	adiw	r26, 0x07	; 7
     eca:	9c 93       	st	X, r25
     ecc:	8e 93       	st	-X, r24
     ece:	16 97       	sbiw	r26, 0x06	; 6
     ed0:	ce 01       	movw	r24, r28
     ed2:	df 91       	pop	r29
     ed4:	cf 91       	pop	r28
     ed6:	1f 91       	pop	r17
     ed8:	0f 91       	pop	r16
     eda:	08 95       	ret

00000edc <__ultoa_invert>:
     edc:	fa 01       	movw	r30, r20
     ede:	aa 27       	eor	r26, r26
     ee0:	28 30       	cpi	r18, 0x08	; 8
     ee2:	51 f1       	breq	.+84     	; 0xf38 <__ultoa_invert+0x5c>
     ee4:	20 31       	cpi	r18, 0x10	; 16
     ee6:	81 f1       	breq	.+96     	; 0xf48 <__ultoa_invert+0x6c>
     ee8:	e8 94       	clt
     eea:	6f 93       	push	r22
     eec:	6e 7f       	andi	r22, 0xFE	; 254
     eee:	6e 5f       	subi	r22, 0xFE	; 254
     ef0:	7f 4f       	sbci	r23, 0xFF	; 255
     ef2:	8f 4f       	sbci	r24, 0xFF	; 255
     ef4:	9f 4f       	sbci	r25, 0xFF	; 255
     ef6:	af 4f       	sbci	r26, 0xFF	; 255
     ef8:	b1 e0       	ldi	r27, 0x01	; 1
     efa:	3e d0       	rcall	.+124    	; 0xf78 <__ultoa_invert+0x9c>
     efc:	b4 e0       	ldi	r27, 0x04	; 4
     efe:	3c d0       	rcall	.+120    	; 0xf78 <__ultoa_invert+0x9c>
     f00:	67 0f       	add	r22, r23
     f02:	78 1f       	adc	r23, r24
     f04:	89 1f       	adc	r24, r25
     f06:	9a 1f       	adc	r25, r26
     f08:	a1 1d       	adc	r26, r1
     f0a:	68 0f       	add	r22, r24
     f0c:	79 1f       	adc	r23, r25
     f0e:	8a 1f       	adc	r24, r26
     f10:	91 1d       	adc	r25, r1
     f12:	a1 1d       	adc	r26, r1
     f14:	6a 0f       	add	r22, r26
     f16:	71 1d       	adc	r23, r1
     f18:	81 1d       	adc	r24, r1
     f1a:	91 1d       	adc	r25, r1
     f1c:	a1 1d       	adc	r26, r1
     f1e:	20 d0       	rcall	.+64     	; 0xf60 <__ultoa_invert+0x84>
     f20:	09 f4       	brne	.+2      	; 0xf24 <__ultoa_invert+0x48>
     f22:	68 94       	set
     f24:	3f 91       	pop	r19
     f26:	2a e0       	ldi	r18, 0x0A	; 10
     f28:	26 9f       	mul	r18, r22
     f2a:	11 24       	eor	r1, r1
     f2c:	30 19       	sub	r19, r0
     f2e:	30 5d       	subi	r19, 0xD0	; 208
     f30:	31 93       	st	Z+, r19
     f32:	de f6       	brtc	.-74     	; 0xeea <__ultoa_invert+0xe>
     f34:	cf 01       	movw	r24, r30
     f36:	08 95       	ret
     f38:	46 2f       	mov	r20, r22
     f3a:	47 70       	andi	r20, 0x07	; 7
     f3c:	40 5d       	subi	r20, 0xD0	; 208
     f3e:	41 93       	st	Z+, r20
     f40:	b3 e0       	ldi	r27, 0x03	; 3
     f42:	0f d0       	rcall	.+30     	; 0xf62 <__ultoa_invert+0x86>
     f44:	c9 f7       	brne	.-14     	; 0xf38 <__ultoa_invert+0x5c>
     f46:	f6 cf       	rjmp	.-20     	; 0xf34 <__ultoa_invert+0x58>
     f48:	46 2f       	mov	r20, r22
     f4a:	4f 70       	andi	r20, 0x0F	; 15
     f4c:	40 5d       	subi	r20, 0xD0	; 208
     f4e:	4a 33       	cpi	r20, 0x3A	; 58
     f50:	18 f0       	brcs	.+6      	; 0xf58 <__ultoa_invert+0x7c>
     f52:	49 5d       	subi	r20, 0xD9	; 217
     f54:	31 fd       	sbrc	r19, 1
     f56:	40 52       	subi	r20, 0x20	; 32
     f58:	41 93       	st	Z+, r20
     f5a:	02 d0       	rcall	.+4      	; 0xf60 <__ultoa_invert+0x84>
     f5c:	a9 f7       	brne	.-22     	; 0xf48 <__ultoa_invert+0x6c>
     f5e:	ea cf       	rjmp	.-44     	; 0xf34 <__ultoa_invert+0x58>
     f60:	b4 e0       	ldi	r27, 0x04	; 4
     f62:	a6 95       	lsr	r26
     f64:	97 95       	ror	r25
     f66:	87 95       	ror	r24
     f68:	77 95       	ror	r23
     f6a:	67 95       	ror	r22
     f6c:	ba 95       	dec	r27
     f6e:	c9 f7       	brne	.-14     	; 0xf62 <__ultoa_invert+0x86>
     f70:	00 97       	sbiw	r24, 0x00	; 0
     f72:	61 05       	cpc	r22, r1
     f74:	71 05       	cpc	r23, r1
     f76:	08 95       	ret
     f78:	9b 01       	movw	r18, r22
     f7a:	ac 01       	movw	r20, r24
     f7c:	0a 2e       	mov	r0, r26
     f7e:	06 94       	lsr	r0
     f80:	57 95       	ror	r21
     f82:	47 95       	ror	r20
     f84:	37 95       	ror	r19
     f86:	27 95       	ror	r18
     f88:	ba 95       	dec	r27
     f8a:	c9 f7       	brne	.-14     	; 0xf7e <__ultoa_invert+0xa2>
     f8c:	62 0f       	add	r22, r18
     f8e:	73 1f       	adc	r23, r19
     f90:	84 1f       	adc	r24, r20
     f92:	95 1f       	adc	r25, r21
     f94:	a0 1d       	adc	r26, r0
     f96:	08 95       	ret

00000f98 <__prologue_saves__>:
     f98:	2f 92       	push	r2
     f9a:	3f 92       	push	r3
     f9c:	4f 92       	push	r4
     f9e:	5f 92       	push	r5
     fa0:	6f 92       	push	r6
     fa2:	7f 92       	push	r7
     fa4:	8f 92       	push	r8
     fa6:	9f 92       	push	r9
     fa8:	af 92       	push	r10
     faa:	bf 92       	push	r11
     fac:	cf 92       	push	r12
     fae:	df 92       	push	r13
     fb0:	ef 92       	push	r14
     fb2:	ff 92       	push	r15
     fb4:	0f 93       	push	r16
     fb6:	1f 93       	push	r17
     fb8:	cf 93       	push	r28
     fba:	df 93       	push	r29
     fbc:	cd b7       	in	r28, 0x3d	; 61
     fbe:	de b7       	in	r29, 0x3e	; 62
     fc0:	ca 1b       	sub	r28, r26
     fc2:	db 0b       	sbc	r29, r27
     fc4:	0f b6       	in	r0, 0x3f	; 63
     fc6:	f8 94       	cli
     fc8:	de bf       	out	0x3e, r29	; 62
     fca:	0f be       	out	0x3f, r0	; 63
     fcc:	cd bf       	out	0x3d, r28	; 61
     fce:	09 94       	ijmp

00000fd0 <__epilogue_restores__>:
     fd0:	2a 88       	ldd	r2, Y+18	; 0x12
     fd2:	39 88       	ldd	r3, Y+17	; 0x11
     fd4:	48 88       	ldd	r4, Y+16	; 0x10
     fd6:	5f 84       	ldd	r5, Y+15	; 0x0f
     fd8:	6e 84       	ldd	r6, Y+14	; 0x0e
     fda:	7d 84       	ldd	r7, Y+13	; 0x0d
     fdc:	8c 84       	ldd	r8, Y+12	; 0x0c
     fde:	9b 84       	ldd	r9, Y+11	; 0x0b
     fe0:	aa 84       	ldd	r10, Y+10	; 0x0a
     fe2:	b9 84       	ldd	r11, Y+9	; 0x09
     fe4:	c8 84       	ldd	r12, Y+8	; 0x08
     fe6:	df 80       	ldd	r13, Y+7	; 0x07
     fe8:	ee 80       	ldd	r14, Y+6	; 0x06
     fea:	fd 80       	ldd	r15, Y+5	; 0x05
     fec:	0c 81       	ldd	r16, Y+4	; 0x04
     fee:	1b 81       	ldd	r17, Y+3	; 0x03
     ff0:	aa 81       	ldd	r26, Y+2	; 0x02
     ff2:	b9 81       	ldd	r27, Y+1	; 0x01
     ff4:	ce 0f       	add	r28, r30
     ff6:	d1 1d       	adc	r29, r1
     ff8:	0f b6       	in	r0, 0x3f	; 63
     ffa:	f8 94       	cli
     ffc:	de bf       	out	0x3e, r29	; 62
     ffe:	0f be       	out	0x3f, r0	; 63
    1000:	cd bf       	out	0x3d, r28	; 61
    1002:	ed 01       	movw	r28, r26
    1004:	08 95       	ret

00001006 <_exit>:
    1006:	f8 94       	cli

00001008 <__stop_program>:
    1008:	ff cf       	rjmp	.-2      	; 0x1008 <__stop_program>
