
Byggern.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         000000a2  00800100  00000ffe  00001092  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000ffe  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000000a  008001a2  008001a2  00001134  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00001134  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00001190  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000240  00000000  00000000  000011cc  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000020c8  00000000  00000000  0000140c  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000e1b  00000000  00000000  000034d4  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000e69  00000000  00000000  000042ef  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000458  00000000  00000000  00005158  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000080f  00000000  00000000  000055b0  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000ebb  00000000  00000000  00005dbf  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000001f8  00000000  00000000  00006c7a  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 b4 01 	jmp	0x368	; 0x368 <__ctors_end>
   4:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
   8:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
   c:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
  10:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
  14:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
  18:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
  1c:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
  20:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
  24:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
  28:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
  2c:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
  30:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
  34:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
  38:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
  3c:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
  40:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
  44:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
  48:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
  4c:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
  50:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
  54:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
  58:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
  5c:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
  60:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
  64:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
  68:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
  6c:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>

00000070 <__trampolines_end>:
	...
  78:	00 06       	cpc	r0, r16
  7a:	5f 5f       	subi	r21, 0xFF	; 255
  7c:	06 00       	.word	0x0006	; ????
  7e:	00 00       	nop
  80:	00 07       	cpc	r16, r16
  82:	07 00       	.word	0x0007	; ????
  84:	07 07       	cpc	r16, r23
  86:	00 00       	nop
  88:	14 7f       	andi	r17, 0xF4	; 244
  8a:	7f 14       	cp	r7, r15
  8c:	7f 7f       	andi	r23, 0xFF	; 255
  8e:	14 00       	.word	0x0014	; ????
  90:	24 2e       	mov	r2, r20
  92:	6b 6b       	ori	r22, 0xBB	; 187
  94:	3a 12       	cpse	r3, r26
  96:	00 00       	nop
  98:	46 66       	ori	r20, 0x66	; 102
  9a:	30 18       	sub	r3, r0
  9c:	0c 66       	ori	r16, 0x6C	; 108
  9e:	62 00       	.word	0x0062	; ????
  a0:	30 7a       	andi	r19, 0xA0	; 160
  a2:	4f 5d       	subi	r20, 0xDF	; 223
  a4:	37 7a       	andi	r19, 0xA7	; 167
  a6:	48 00       	.word	0x0048	; ????
  a8:	04 07       	cpc	r16, r20
  aa:	03 00       	.word	0x0003	; ????
  ac:	00 00       	nop
  ae:	00 00       	nop
  b0:	00 1c       	adc	r0, r0
  b2:	3e 63       	ori	r19, 0x3E	; 62
  b4:	41 00       	.word	0x0041	; ????
  b6:	00 00       	nop
  b8:	00 41       	sbci	r16, 0x10	; 16
  ba:	63 3e       	cpi	r22, 0xE3	; 227
  bc:	1c 00       	.word	0x001c	; ????
  be:	00 00       	nop
  c0:	08 2a       	or	r0, r24
  c2:	3e 1c       	adc	r3, r14
  c4:	1c 3e       	cpi	r17, 0xEC	; 236
  c6:	2a 08       	sbc	r2, r10
  c8:	08 08       	sbc	r0, r8
  ca:	3e 3e       	cpi	r19, 0xEE	; 238
  cc:	08 08       	sbc	r0, r8
  ce:	00 00       	nop
  d0:	00 a0       	ldd	r0, Z+32	; 0x20
  d2:	e0 60       	ori	r30, 0x00	; 0
  d4:	00 00       	nop
  d6:	00 00       	nop
  d8:	08 08       	sbc	r0, r8
  da:	08 08       	sbc	r0, r8
  dc:	08 08       	sbc	r0, r8
  de:	00 00       	nop
  e0:	00 00       	nop
  e2:	60 60       	ori	r22, 0x00	; 0
  e4:	00 00       	nop
  e6:	00 00       	nop
  e8:	60 30       	cpi	r22, 0x00	; 0
  ea:	18 0c       	add	r1, r8
  ec:	06 03       	mulsu	r16, r22
  ee:	01 00       	.word	0x0001	; ????
  f0:	3e 7f       	andi	r19, 0xFE	; 254
  f2:	59 4d       	sbci	r21, 0xD9	; 217
  f4:	7f 3e       	cpi	r23, 0xEF	; 239
  f6:	00 00       	nop
  f8:	42 42       	sbci	r20, 0x22	; 34
  fa:	7f 7f       	andi	r23, 0xFF	; 255
  fc:	40 40       	sbci	r20, 0x00	; 0
  fe:	00 00       	nop
 100:	62 73       	andi	r22, 0x32	; 50
 102:	59 49       	sbci	r21, 0x99	; 153
 104:	6f 66       	ori	r22, 0x6F	; 111
 106:	00 00       	nop
 108:	22 63       	ori	r18, 0x32	; 50
 10a:	49 49       	sbci	r20, 0x99	; 153
 10c:	7f 36       	cpi	r23, 0x6F	; 111
 10e:	00 00       	nop
 110:	18 1c       	adc	r1, r8
 112:	16 13       	cpse	r17, r22
 114:	7f 7f       	andi	r23, 0xFF	; 255
 116:	10 00       	.word	0x0010	; ????
 118:	27 67       	ori	r18, 0x77	; 119
 11a:	45 45       	sbci	r20, 0x55	; 85
 11c:	7d 39       	cpi	r23, 0x9D	; 157
 11e:	00 00       	nop
 120:	3c 7e       	andi	r19, 0xEC	; 236
 122:	4b 49       	sbci	r20, 0x9B	; 155
 124:	79 30       	cpi	r23, 0x09	; 9
 126:	00 00       	nop
 128:	03 63       	ori	r16, 0x33	; 51
 12a:	71 19       	sub	r23, r1
 12c:	0f 07       	cpc	r16, r31
 12e:	00 00       	nop
 130:	36 7f       	andi	r19, 0xF6	; 246
 132:	49 49       	sbci	r20, 0x99	; 153
 134:	7f 36       	cpi	r23, 0x6F	; 111
 136:	00 00       	nop
 138:	06 4f       	sbci	r16, 0xF6	; 246
 13a:	49 69       	ori	r20, 0x99	; 153
 13c:	3f 1e       	adc	r3, r31
 13e:	00 00       	nop
 140:	00 00       	nop
 142:	6c 6c       	ori	r22, 0xCC	; 204
 144:	00 00       	nop
 146:	00 00       	nop
 148:	00 a0       	ldd	r0, Z+32	; 0x20
 14a:	ec 6c       	ori	r30, 0xCC	; 204
 14c:	00 00       	nop
 14e:	00 00       	nop
 150:	08 1c       	adc	r0, r8
 152:	36 63       	ori	r19, 0x36	; 54
 154:	41 00       	.word	0x0041	; ????
 156:	00 00       	nop
 158:	14 14       	cp	r1, r4
 15a:	14 14       	cp	r1, r4
 15c:	14 14       	cp	r1, r4
 15e:	00 00       	nop
 160:	00 41       	sbci	r16, 0x10	; 16
 162:	63 36       	cpi	r22, 0x63	; 99
 164:	1c 08       	sbc	r1, r12
 166:	00 00       	nop
 168:	02 03       	mulsu	r16, r18
 16a:	51 59       	subi	r21, 0x91	; 145
 16c:	0f 06       	cpc	r0, r31
 16e:	00 00       	nop
 170:	3e 7f       	andi	r19, 0xFE	; 254
 172:	41 5d       	subi	r20, 0xD1	; 209
 174:	5d 1f       	adc	r21, r29
 176:	1e 00       	.word	0x001e	; ????
 178:	7c 7e       	andi	r23, 0xEC	; 236
 17a:	13 13       	cpse	r17, r19
 17c:	7e 7c       	andi	r23, 0xCE	; 206
 17e:	00 00       	nop
 180:	41 7f       	andi	r20, 0xF1	; 241
 182:	7f 49       	sbci	r23, 0x9F	; 159
 184:	49 7f       	andi	r20, 0xF9	; 249
 186:	36 00       	.word	0x0036	; ????
 188:	1c 3e       	cpi	r17, 0xEC	; 236
 18a:	63 41       	sbci	r22, 0x13	; 19
 18c:	41 63       	ori	r20, 0x31	; 49
 18e:	22 00       	.word	0x0022	; ????
 190:	41 7f       	andi	r20, 0xF1	; 241
 192:	7f 41       	sbci	r23, 0x1F	; 31
 194:	63 7f       	andi	r22, 0xF3	; 243
 196:	1c 00       	.word	0x001c	; ????
 198:	41 7f       	andi	r20, 0xF1	; 241
 19a:	7f 49       	sbci	r23, 0x9F	; 159
 19c:	5d 41       	sbci	r21, 0x1D	; 29
 19e:	63 00       	.word	0x0063	; ????
 1a0:	41 7f       	andi	r20, 0xF1	; 241
 1a2:	7f 49       	sbci	r23, 0x9F	; 159
 1a4:	1d 01       	movw	r2, r26
 1a6:	03 00       	.word	0x0003	; ????
 1a8:	1c 3e       	cpi	r17, 0xEC	; 236
 1aa:	63 41       	sbci	r22, 0x13	; 19
 1ac:	51 73       	andi	r21, 0x31	; 49
 1ae:	72 00       	.word	0x0072	; ????
 1b0:	7f 7f       	andi	r23, 0xFF	; 255
 1b2:	08 08       	sbc	r0, r8
 1b4:	7f 7f       	andi	r23, 0xFF	; 255
 1b6:	00 00       	nop
 1b8:	00 41       	sbci	r16, 0x10	; 16
 1ba:	7f 7f       	andi	r23, 0xFF	; 255
 1bc:	41 00       	.word	0x0041	; ????
 1be:	00 00       	nop
 1c0:	30 70       	andi	r19, 0x00	; 0
 1c2:	40 41       	sbci	r20, 0x10	; 16
 1c4:	7f 3f       	cpi	r23, 0xFF	; 255
 1c6:	01 00       	.word	0x0001	; ????
 1c8:	41 7f       	andi	r20, 0xF1	; 241
 1ca:	7f 08       	sbc	r7, r15
 1cc:	1c 77       	andi	r17, 0x7C	; 124
 1ce:	63 00       	.word	0x0063	; ????
 1d0:	41 7f       	andi	r20, 0xF1	; 241
 1d2:	7f 41       	sbci	r23, 0x1F	; 31
 1d4:	40 60       	ori	r20, 0x00	; 0
 1d6:	70 00       	.word	0x0070	; ????
 1d8:	7f 7f       	andi	r23, 0xFF	; 255
 1da:	06 0c       	add	r0, r6
 1dc:	06 7f       	andi	r16, 0xF6	; 246
 1de:	7f 00       	.word	0x007f	; ????
 1e0:	7f 7f       	andi	r23, 0xFF	; 255
 1e2:	06 0c       	add	r0, r6
 1e4:	18 7f       	andi	r17, 0xF8	; 248
 1e6:	7f 00       	.word	0x007f	; ????
 1e8:	1c 3e       	cpi	r17, 0xEC	; 236
 1ea:	63 41       	sbci	r22, 0x13	; 19
 1ec:	63 3e       	cpi	r22, 0xE3	; 227
 1ee:	1c 00       	.word	0x001c	; ????
 1f0:	41 7f       	andi	r20, 0xF1	; 241
 1f2:	7f 49       	sbci	r23, 0x9F	; 159
 1f4:	09 0f       	add	r16, r25
 1f6:	06 00       	.word	0x0006	; ????
 1f8:	1e 3f       	cpi	r17, 0xFE	; 254
 1fa:	21 71       	andi	r18, 0x11	; 17
 1fc:	7f 5e       	subi	r23, 0xEF	; 239
 1fe:	00 00       	nop
 200:	41 7f       	andi	r20, 0xF1	; 241
 202:	7f 19       	sub	r23, r15
 204:	39 6f       	ori	r19, 0xF9	; 249
 206:	46 00       	.word	0x0046	; ????
 208:	26 67       	ori	r18, 0x76	; 118
 20a:	4d 59       	subi	r20, 0x9D	; 157
 20c:	7b 32       	cpi	r23, 0x2B	; 43
 20e:	00 00       	nop
 210:	03 41       	sbci	r16, 0x13	; 19
 212:	7f 7f       	andi	r23, 0xFF	; 255
 214:	41 03       	mulsu	r20, r17
 216:	00 00       	nop
 218:	7f 7f       	andi	r23, 0xFF	; 255
 21a:	40 40       	sbci	r20, 0x00	; 0
 21c:	7f 7f       	andi	r23, 0xFF	; 255
 21e:	00 00       	nop
 220:	1f 3f       	cpi	r17, 0xFF	; 255
 222:	60 60       	ori	r22, 0x00	; 0
 224:	3f 1f       	adc	r19, r31
 226:	00 00       	nop
 228:	7f 7f       	andi	r23, 0xFF	; 255
 22a:	30 18       	sub	r3, r0
 22c:	30 7f       	andi	r19, 0xF0	; 240
 22e:	7f 00       	.word	0x007f	; ????
 230:	63 77       	andi	r22, 0x73	; 115
 232:	1c 08       	sbc	r1, r12
 234:	1c 77       	andi	r17, 0x7C	; 124
 236:	63 00       	.word	0x0063	; ????
 238:	07 4f       	sbci	r16, 0xF7	; 247
 23a:	78 78       	andi	r23, 0x88	; 136
 23c:	4f 07       	cpc	r20, r31
 23e:	00 00       	nop
 240:	67 73       	andi	r22, 0x37	; 55
 242:	59 4d       	sbci	r21, 0xD9	; 217
 244:	47 63       	ori	r20, 0x37	; 55
 246:	71 00       	.word	0x0071	; ????
 248:	00 7f       	andi	r16, 0xF0	; 240
 24a:	7f 41       	sbci	r23, 0x1F	; 31
 24c:	41 00       	.word	0x0041	; ????
 24e:	00 00       	nop
 250:	01 03       	mulsu	r16, r17
 252:	06 0c       	add	r0, r6
 254:	18 30       	cpi	r17, 0x08	; 8
 256:	60 00       	.word	0x0060	; ????
 258:	00 41       	sbci	r16, 0x10	; 16
 25a:	41 7f       	andi	r20, 0xF1	; 241
 25c:	7f 00       	.word	0x007f	; ????
 25e:	00 00       	nop
 260:	08 0c       	add	r0, r8
 262:	06 03       	mulsu	r16, r22
 264:	06 0c       	add	r0, r6
 266:	08 00       	.word	0x0008	; ????
 268:	80 80       	ld	r8, Z
 26a:	80 80       	ld	r8, Z
 26c:	80 80       	ld	r8, Z
 26e:	80 80       	ld	r8, Z
 270:	00 00       	nop
 272:	03 07       	cpc	r16, r19
 274:	04 00       	.word	0x0004	; ????
 276:	00 00       	nop
 278:	20 74       	andi	r18, 0x40	; 64
 27a:	54 54       	subi	r21, 0x44	; 68
 27c:	3c 78       	andi	r19, 0x8C	; 140
 27e:	40 00       	.word	0x0040	; ????
 280:	41 3f       	cpi	r20, 0xF1	; 241
 282:	7f 44       	sbci	r23, 0x4F	; 79
 284:	44 7c       	andi	r20, 0xC4	; 196
 286:	38 00       	.word	0x0038	; ????
 288:	38 7c       	andi	r19, 0xC8	; 200
 28a:	44 44       	sbci	r20, 0x44	; 68
 28c:	6c 28       	or	r6, r12
 28e:	00 00       	nop
 290:	30 78       	andi	r19, 0x80	; 128
 292:	48 49       	sbci	r20, 0x98	; 152
 294:	3f 7f       	andi	r19, 0xFF	; 255
 296:	40 00       	.word	0x0040	; ????
 298:	38 7c       	andi	r19, 0xC8	; 200
 29a:	54 54       	subi	r21, 0x44	; 68
 29c:	5c 18       	sub	r5, r12
 29e:	00 00       	nop
 2a0:	48 7e       	andi	r20, 0xE8	; 232
 2a2:	7f 49       	sbci	r23, 0x9F	; 159
 2a4:	03 02       	muls	r16, r19
 2a6:	00 00       	nop
 2a8:	98 bc       	out	0x28, r9	; 40
 2aa:	a4 a4       	ldd	r10, Z+44	; 0x2c
 2ac:	f8 7c       	andi	r31, 0xC8	; 200
 2ae:	04 00       	.word	0x0004	; ????
 2b0:	41 7f       	andi	r20, 0xF1	; 241
 2b2:	7f 08       	sbc	r7, r15
 2b4:	04 7c       	andi	r16, 0xC4	; 196
 2b6:	78 00       	.word	0x0078	; ????
 2b8:	00 44       	sbci	r16, 0x40	; 64
 2ba:	7d 7d       	andi	r23, 0xDD	; 221
 2bc:	40 00       	.word	0x0040	; ????
 2be:	00 00       	nop
 2c0:	40 c4       	rjmp	.+2176   	; 0xb42 <vfprintf+0x360>
 2c2:	84 fd       	sbrc	r24, 4
 2c4:	7d 00       	.word	0x007d	; ????
 2c6:	00 00       	nop
 2c8:	41 7f       	andi	r20, 0xF1	; 241
 2ca:	7f 10       	cpse	r7, r15
 2cc:	38 6c       	ori	r19, 0xC8	; 200
 2ce:	44 00       	.word	0x0044	; ????
 2d0:	00 41       	sbci	r16, 0x10	; 16
 2d2:	7f 7f       	andi	r23, 0xFF	; 255
 2d4:	40 00       	.word	0x0040	; ????
 2d6:	00 00       	nop
 2d8:	7c 7c       	andi	r23, 0xCC	; 204
 2da:	0c 18       	sub	r0, r12
 2dc:	0c 7c       	andi	r16, 0xCC	; 204
 2de:	78 00       	.word	0x0078	; ????
 2e0:	7c 7c       	andi	r23, 0xCC	; 204
 2e2:	04 04       	cpc	r0, r4
 2e4:	7c 78       	andi	r23, 0x8C	; 140
 2e6:	00 00       	nop
 2e8:	38 7c       	andi	r19, 0xC8	; 200
 2ea:	44 44       	sbci	r20, 0x44	; 68
 2ec:	7c 38       	cpi	r23, 0x8C	; 140
 2ee:	00 00       	nop
 2f0:	84 fc       	sbrc	r8, 4
 2f2:	f8 a4       	ldd	r15, Y+40	; 0x28
 2f4:	24 3c       	cpi	r18, 0xC4	; 196
 2f6:	18 00       	.word	0x0018	; ????
 2f8:	18 3c       	cpi	r17, 0xC8	; 200
 2fa:	24 a4       	ldd	r2, Z+44	; 0x2c
 2fc:	f8 fc       	.word	0xfcf8	; ????
 2fe:	84 00       	.word	0x0084	; ????
 300:	44 7c       	andi	r20, 0xC4	; 196
 302:	78 44       	sbci	r23, 0x48	; 72
 304:	1c 18       	sub	r1, r12
 306:	00 00       	nop
 308:	48 5c       	subi	r20, 0xC8	; 200
 30a:	54 54       	subi	r21, 0x44	; 68
 30c:	74 24       	eor	r7, r4
 30e:	00 00       	nop
 310:	00 04       	cpc	r0, r0
 312:	3e 7f       	andi	r19, 0xFE	; 254
 314:	44 24       	eor	r4, r4
 316:	00 00       	nop
 318:	3c 7c       	andi	r19, 0xCC	; 204
 31a:	40 40       	sbci	r20, 0x00	; 0
 31c:	3c 7c       	andi	r19, 0xCC	; 204
 31e:	40 00       	.word	0x0040	; ????
 320:	1c 3c       	cpi	r17, 0xCC	; 204
 322:	60 60       	ori	r22, 0x00	; 0
 324:	3c 1c       	adc	r3, r12
 326:	00 00       	nop
 328:	3c 7c       	andi	r19, 0xCC	; 204
 32a:	60 30       	cpi	r22, 0x00	; 0
 32c:	60 7c       	andi	r22, 0xC0	; 192
 32e:	3c 00       	.word	0x003c	; ????
 330:	44 6c       	ori	r20, 0xC4	; 196
 332:	38 10       	cpse	r3, r8
 334:	38 6c       	ori	r19, 0xC8	; 200
 336:	44 00       	.word	0x0044	; ????
 338:	9c bc       	out	0x2c, r9	; 44
 33a:	a0 a0       	ldd	r10, Z+32	; 0x20
 33c:	fc 7c       	andi	r31, 0xCC	; 204
 33e:	00 00       	nop
 340:	4c 64       	ori	r20, 0x4C	; 76
 342:	74 5c       	subi	r23, 0xC4	; 196
 344:	4c 64       	ori	r20, 0x4C	; 76
 346:	00 00       	nop
 348:	08 08       	sbc	r0, r8
 34a:	3e 77       	andi	r19, 0x7E	; 126
 34c:	41 41       	sbci	r20, 0x11	; 17
 34e:	00 00       	nop
 350:	00 00       	nop
 352:	00 77       	andi	r16, 0x70	; 112
 354:	77 00       	.word	0x0077	; ????
 356:	00 00       	nop
 358:	41 41       	sbci	r20, 0x11	; 17
 35a:	77 3e       	cpi	r23, 0xE7	; 231
 35c:	08 08       	sbc	r0, r8
 35e:	00 00       	nop
 360:	02 03       	mulsu	r16, r18
 362:	01 03       	mulsu	r16, r17
 364:	02 03       	mulsu	r16, r18
 366:	01 00       	.word	0x0001	; ????

00000368 <__ctors_end>:
 368:	11 24       	eor	r1, r1
 36a:	1f be       	out	0x3f, r1	; 63
 36c:	cf ef       	ldi	r28, 0xFF	; 255
 36e:	d4 e0       	ldi	r29, 0x04	; 4
 370:	de bf       	out	0x3e, r29	; 62
 372:	cd bf       	out	0x3d, r28	; 61

00000374 <__do_copy_data>:
 374:	11 e0       	ldi	r17, 0x01	; 1
 376:	a0 e0       	ldi	r26, 0x00	; 0
 378:	b1 e0       	ldi	r27, 0x01	; 1
 37a:	ee ef       	ldi	r30, 0xFE	; 254
 37c:	ff e0       	ldi	r31, 0x0F	; 15
 37e:	02 c0       	rjmp	.+4      	; 0x384 <__do_copy_data+0x10>
 380:	05 90       	lpm	r0, Z+
 382:	0d 92       	st	X+, r0
 384:	a2 3a       	cpi	r26, 0xA2	; 162
 386:	b1 07       	cpc	r27, r17
 388:	d9 f7       	brne	.-10     	; 0x380 <__do_copy_data+0xc>

0000038a <__do_clear_bss>:
 38a:	21 e0       	ldi	r18, 0x01	; 1
 38c:	a2 ea       	ldi	r26, 0xA2	; 162
 38e:	b1 e0       	ldi	r27, 0x01	; 1
 390:	01 c0       	rjmp	.+2      	; 0x394 <.do_clear_bss_start>

00000392 <.do_clear_bss_loop>:
 392:	1d 92       	st	X+, r1

00000394 <.do_clear_bss_start>:
 394:	ac 3a       	cpi	r26, 0xAC	; 172
 396:	b2 07       	cpc	r27, r18
 398:	e1 f7       	brne	.-8      	; 0x392 <.do_clear_bss_loop>
 39a:	0e 94 ef 01 	call	0x3de	; 0x3de <main>
 39e:	0c 94 fd 07 	jmp	0xffa	; 0xffa <_exit>

000003a2 <__bad_interrupt>:
 3a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000003a6 <can_init>:




void can_init()
{
 3a6:	08 95       	ret

000003a8 <gpio_init>:
#include "gpio.h"


void gpio_init()                                        /** Initialize gpio pins */
{
    DDRB  |= (1 << PB0);                                // Port B0 is an output
 3a8:	b8 9a       	sbi	0x17, 0	; 23
    DDRB  &= ~(0 << PB1) | (0 << PB2) | (0 << PB3);		// Set Port B1, B2, B3 to input
 3aa:	87 b3       	in	r24, 0x17	; 23
 3ac:	87 bb       	out	0x17, r24	; 23
    PORTB |= (1 << PB0);                                // Port B0 is HIGH: Turn on status LED		
 3ae:	c0 9a       	sbi	0x18, 0	; 24
 3b0:	08 95       	ret

000003b2 <gpio_read_button>:

bool gpio_read_button(uint8_t button)                   /** Read button values */
{
    bool read_button;

    if (button == 1)
 3b2:	81 30       	cpi	r24, 0x01	; 1
 3b4:	21 f4       	brne	.+8      	; 0x3be <gpio_read_button+0xc>
	    read_button = (1 << PB1) & PINB;
 3b6:	86 b3       	in	r24, 0x16	; 22
 3b8:	86 95       	lsr	r24
 3ba:	81 70       	andi	r24, 0x01	; 1
 3bc:	08 95       	ret

    else if (button == 2)
 3be:	82 30       	cpi	r24, 0x02	; 2
 3c0:	29 f4       	brne	.+10     	; 0x3cc <gpio_read_button+0x1a>
	    read_button = (1 << PB2) & PINB;
 3c2:	86 b3       	in	r24, 0x16	; 22
 3c4:	82 fb       	bst	r24, 2
 3c6:	88 27       	eor	r24, r24
 3c8:	80 f9       	bld	r24, 0
 3ca:	08 95       	ret

    else if (button == 3)
 3cc:	83 30       	cpi	r24, 0x03	; 3
 3ce:	29 f4       	brne	.+10     	; 0x3da <gpio_read_button+0x28>
	    read_button = (1 << PB3) & PINB;
 3d0:	86 b3       	in	r24, 0x16	; 22
 3d2:	83 fb       	bst	r24, 3
 3d4:	88 27       	eor	r24, r24
 3d6:	80 f9       	bld	r24, 0
 3d8:	08 95       	ret
    else
        return 0;
 3da:	80 e0       	ldi	r24, 0x00	; 0
        
	return read_button;
 3dc:	08 95       	ret

000003de <main>:
#include "can.h"

int main()
{
	// Initialize
    gpio_init();
 3de:	0e 94 d4 01 	call	0x3a8	; 0x3a8 <gpio_init>
	xmem_init();
 3e2:	0e 94 8b 03 	call	0x716	; 0x716 <xmem_init>
	uart_init();
 3e6:	0e 94 7d 03 	call	0x6fa	; 0x6fa <uart_init>
	oled_init();
 3ea:	0e 94 af 02 	call	0x55e	; 0x55e <oled_init>
	menu_init();
 3ee:	0e 94 52 02 	call	0x4a4	; 0x4a4 <menu_init>
	spi_init();
 3f2:	0e 94 62 03 	call	0x6c4	; 0x6c4 <spi_init>
	mcp_init();     // Relies on spi_init() to be initialized first
 3f6:	0e 94 2c 02 	call	0x458	; 0x458 <mcp_init>
	can_init();     // Relies on mcp_init() to be initialized first
 3fa:	0e 94 d3 01 	call	0x3a6	; 0x3a6 <can_init>

    // Main program loop
    while (1) 
	{	
		 
		printf("B1: %d,   B2: %d   B3: %d\n", gpio_read_button(1), gpio_read_button(2), gpio_read_button(3));
 3fe:	c6 e0       	ldi	r28, 0x06	; 6
 400:	d1 e0       	ldi	r29, 0x01	; 1
 402:	83 e0       	ldi	r24, 0x03	; 3
 404:	0e 94 d9 01 	call	0x3b2	; 0x3b2 <gpio_read_button>
 408:	08 2f       	mov	r16, r24
 40a:	82 e0       	ldi	r24, 0x02	; 2
 40c:	0e 94 d9 01 	call	0x3b2	; 0x3b2 <gpio_read_button>
 410:	18 2f       	mov	r17, r24
 412:	81 e0       	ldi	r24, 0x01	; 1
 414:	0e 94 d9 01 	call	0x3b2	; 0x3b2 <gpio_read_button>
 418:	1f 92       	push	r1
 41a:	0f 93       	push	r16
 41c:	1f 92       	push	r1
 41e:	1f 93       	push	r17
 420:	1f 92       	push	r1
 422:	8f 93       	push	r24
 424:	df 93       	push	r29
 426:	cf 93       	push	r28
 428:	0e 94 db 03 	call	0x7b6	; 0x7b6 <printf>
 42c:	8d b7       	in	r24, 0x3d	; 61
 42e:	9e b7       	in	r25, 0x3e	; 62
 430:	08 96       	adiw	r24, 0x08	; 8
 432:	0f b6       	in	r0, 0x3f	; 63
 434:	f8 94       	cli
 436:	9e bf       	out	0x3e, r25	; 62
 438:	0f be       	out	0x3f, r0	; 63
 43a:	8d bf       	out	0x3d, r24	; 61
 43c:	e2 cf       	rjmp	.-60     	; 0x402 <__LOCK_REGION_LENGTH__+0x2>

0000043e <mcp_activate>:
}

// PROTOTYPE
void mcp_activate()
{
    PORTB  &= ~(0 << PB4);                       // Lower 'CS
 43e:	88 b3       	in	r24, 0x18	; 24
 440:	88 bb       	out	0x18, r24	; 24
 442:	08 95       	ret

00000444 <mcp_deactivate>:
}

void mcp_deactivate()
{
    PORTB  |= (1 << PB4);                       // Higher 'CS
 444:	c4 9a       	sbi	0x18, 4	; 24
 446:	08 95       	ret

00000448 <mcp_reset>:
    // More functionality coming
}

void mcp_reset()
{
    mcp_activate();
 448:	0e 94 1f 02 	call	0x43e	; 0x43e <mcp_activate>
    spi_write(MCP_RESET);
 44c:	80 ec       	ldi	r24, 0xC0	; 192
 44e:	0e 94 69 03 	call	0x6d2	; 0x6d2 <spi_write>
    mcp_deactivate();
 452:	0e 94 22 02 	call	0x444	; 0x444 <mcp_deactivate>
 456:	08 95       	ret

00000458 <mcp_init>:



void mcp_init()
{
    mcp_reset();
 458:	0e 94 24 02 	call	0x448	; 0x448 <mcp_reset>
 45c:	08 95       	ret

0000045e <menu_print>:
	menu_print();
}

void menu_print()
{	
	oled_reset();
 45e:	0e 94 9f 02 	call	0x53e	; 0x53e <oled_reset>
	oled_goto_line(0);
 462:	80 e0       	ldi	r24, 0x00	; 0
 464:	90 e0       	ldi	r25, 0x00	; 0
 466:	0e 94 76 02 	call	0x4ec	; 0x4ec <oled_goto_line>
	oled_print("--- Home ---");
 46a:	81 e2       	ldi	r24, 0x21	; 33
 46c:	91 e0       	ldi	r25, 0x01	; 1
 46e:	0e 94 1e 03 	call	0x63c	; 0x63c <oled_print>
	
	oled_goto_line(2);
 472:	82 e0       	ldi	r24, 0x02	; 2
 474:	90 e0       	ldi	r25, 0x00	; 0
 476:	0e 94 76 02 	call	0x4ec	; 0x4ec <oled_goto_line>
	oled_print("Play");
 47a:	8e e2       	ldi	r24, 0x2E	; 46
 47c:	91 e0       	ldi	r25, 0x01	; 1
 47e:	0e 94 1e 03 	call	0x63c	; 0x63c <oled_print>
	
	oled_goto_line(4);
 482:	84 e0       	ldi	r24, 0x04	; 4
 484:	90 e0       	ldi	r25, 0x00	; 0
 486:	0e 94 76 02 	call	0x4ec	; 0x4ec <oled_goto_line>
	oled_print("Highscore");
 48a:	83 e3       	ldi	r24, 0x33	; 51
 48c:	91 e0       	ldi	r25, 0x01	; 1
 48e:	0e 94 1e 03 	call	0x63c	; 0x63c <oled_print>
	
	oled_goto_line(6);	
 492:	86 e0       	ldi	r24, 0x06	; 6
 494:	90 e0       	ldi	r25, 0x00	; 0
 496:	0e 94 76 02 	call	0x4ec	; 0x4ec <oled_goto_line>
	oled_print("About");
 49a:	8d e3       	ldi	r24, 0x3D	; 61
 49c:	91 e0       	ldi	r25, 0x01	; 1
 49e:	0e 94 1e 03 	call	0x63c	; 0x63c <oled_print>
 4a2:	08 95       	ret

000004a4 <menu_init>:
#include "menu.h"
#include "oled.h"

void menu_init()
{
	oled_print("WELCOME!");
 4a4:	83 e4       	ldi	r24, 0x43	; 67
 4a6:	91 e0       	ldi	r25, 0x01	; 1
 4a8:	0e 94 1e 03 	call	0x63c	; 0x63c <oled_print>
	oled_pos(4, 0);
 4ac:	60 e0       	ldi	r22, 0x00	; 0
 4ae:	70 e0       	ldi	r23, 0x00	; 0
 4b0:	84 e0       	ldi	r24, 0x04	; 4
 4b2:	90 e0       	ldi	r25, 0x00	; 0
 4b4:	0e 94 82 02 	call	0x504	; 0x504 <oled_pos>
	oled_print_inv("*ENTER GAME*");
 4b8:	8c e4       	ldi	r24, 0x4C	; 76
 4ba:	91 e0       	ldi	r25, 0x01	; 1
 4bc:	0e 94 40 03 	call	0x680	; 0x680 <oled_print_inv>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 4c0:	2f ef       	ldi	r18, 0xFF	; 255
 4c2:	8f ef       	ldi	r24, 0xFF	; 255
 4c4:	9c e2       	ldi	r25, 0x2C	; 44
 4c6:	21 50       	subi	r18, 0x01	; 1
 4c8:	80 40       	sbci	r24, 0x00	; 0
 4ca:	90 40       	sbci	r25, 0x00	; 0
 4cc:	e1 f7       	brne	.-8      	; 0x4c6 <menu_init+0x22>
 4ce:	00 c0       	rjmp	.+0      	; 0x4d0 <menu_init+0x2c>
 4d0:	00 c0       	rjmp	.+0      	; 0x4d2 <menu_init+0x2e>
	
	// Wait to display welcome screen
	//oled_print_logo();
	_delay_ms(3000);
	
	menu_print();
 4d2:	0e 94 2f 02 	call	0x45e	; 0x45e <menu_print>
 4d6:	08 95       	ret

000004d8 <oled_goto_column>:


void oled_write_cmd(uint8_t cmd)		// Write command
{
	volatile char* ext_oled_cmd = (char *) OLED_CMD_ADR;		// Start address for OLED command
	ext_oled_cmd[0] = cmd;		                                    // write command
 4d8:	98 2f       	mov	r25, r24
 4da:	9f 70       	andi	r25, 0x0F	; 15
 4dc:	e0 e0       	ldi	r30, 0x00	; 0
 4de:	f0 e1       	ldi	r31, 0x10	; 16
 4e0:	90 83       	st	Z, r25
 4e2:	82 95       	swap	r24
 4e4:	8f 70       	andi	r24, 0x0F	; 15
 4e6:	80 5f       	subi	r24, 0xF0	; 240
 4e8:	80 83       	st	Z, r24
 4ea:	08 95       	ret

000004ec <oled_goto_line>:
 4ec:	80 55       	subi	r24, 0x50	; 80
 4ee:	80 93 00 10 	sts	0x1000, r24	; 0x801000 <__bss_end+0xe54>
 4f2:	80 e0       	ldi	r24, 0x00	; 0
 4f4:	0e 94 6c 02 	call	0x4d8	; 0x4d8 <oled_goto_column>
 4f8:	08 95       	ret

000004fa <oled_home>:
 4fa:	80 e0       	ldi	r24, 0x00	; 0
 4fc:	90 e0       	ldi	r25, 0x00	; 0
 4fe:	0e 94 76 02 	call	0x4ec	; 0x4ec <oled_goto_line>
 502:	08 95       	ret

00000504 <oled_pos>:
 504:	cf 93       	push	r28
 506:	c6 2f       	mov	r28, r22
 508:	0e 94 76 02 	call	0x4ec	; 0x4ec <oled_goto_line>
 50c:	8c 2f       	mov	r24, r28
 50e:	0e 94 6c 02 	call	0x4d8	; 0x4d8 <oled_goto_column>
 512:	cf 91       	pop	r28
 514:	08 95       	ret

00000516 <oled_clear_line>:
 516:	cf 93       	push	r28
 518:	df 93       	push	r29
 51a:	ec 01       	movw	r28, r24
 51c:	60 e0       	ldi	r22, 0x00	; 0
 51e:	70 e0       	ldi	r23, 0x00	; 0
 520:	0e 94 82 02 	call	0x504	; 0x504 <oled_pos>
 524:	80 e8       	ldi	r24, 0x80	; 128
 526:	90 e0       	ldi	r25, 0x00	; 0
 528:	e0 e0       	ldi	r30, 0x00	; 0
 52a:	f2 e1       	ldi	r31, 0x12	; 18
 52c:	10 82       	st	Z, r1
 52e:	01 97       	sbiw	r24, 0x01	; 1
 530:	e9 f7       	brne	.-6      	; 0x52c <oled_clear_line+0x16>
 532:	ce 01       	movw	r24, r28
 534:	0e 94 76 02 	call	0x4ec	; 0x4ec <oled_goto_line>
 538:	df 91       	pop	r29
 53a:	cf 91       	pop	r28
 53c:	08 95       	ret

0000053e <oled_reset>:
 53e:	cf 93       	push	r28
 540:	df 93       	push	r29
 542:	c0 e0       	ldi	r28, 0x00	; 0
 544:	d0 e0       	ldi	r29, 0x00	; 0
 546:	ce 01       	movw	r24, r28
 548:	0e 94 8b 02 	call	0x516	; 0x516 <oled_clear_line>
 54c:	21 96       	adiw	r28, 0x01	; 1
 54e:	c8 30       	cpi	r28, 0x08	; 8
 550:	d1 05       	cpc	r29, r1
 552:	c9 f7       	brne	.-14     	; 0x546 <oled_reset+0x8>
 554:	0e 94 7d 02 	call	0x4fa	; 0x4fa <oled_home>
 558:	df 91       	pop	r29
 55a:	cf 91       	pop	r28
 55c:	08 95       	ret

0000055e <oled_init>:
 55e:	e0 e0       	ldi	r30, 0x00	; 0
 560:	f0 e1       	ldi	r31, 0x10	; 16
 562:	8e ea       	ldi	r24, 0xAE	; 174
 564:	80 83       	st	Z, r24
 566:	81 ea       	ldi	r24, 0xA1	; 161
 568:	80 83       	st	Z, r24
 56a:	8a ed       	ldi	r24, 0xDA	; 218
 56c:	80 83       	st	Z, r24
 56e:	82 e1       	ldi	r24, 0x12	; 18
 570:	80 83       	st	Z, r24
 572:	88 ec       	ldi	r24, 0xC8	; 200
 574:	80 83       	st	Z, r24
 576:	88 ea       	ldi	r24, 0xA8	; 168
 578:	80 83       	st	Z, r24
 57a:	8f e3       	ldi	r24, 0x3F	; 63
 57c:	80 83       	st	Z, r24
 57e:	85 ed       	ldi	r24, 0xD5	; 213
 580:	80 83       	st	Z, r24
 582:	80 e8       	ldi	r24, 0x80	; 128
 584:	80 83       	st	Z, r24
 586:	81 e8       	ldi	r24, 0x81	; 129
 588:	80 83       	st	Z, r24
 58a:	80 e5       	ldi	r24, 0x50	; 80
 58c:	80 83       	st	Z, r24
 58e:	89 ed       	ldi	r24, 0xD9	; 217
 590:	80 83       	st	Z, r24
 592:	81 e2       	ldi	r24, 0x21	; 33
 594:	80 83       	st	Z, r24
 596:	80 e2       	ldi	r24, 0x20	; 32
 598:	80 83       	st	Z, r24
 59a:	82 e0       	ldi	r24, 0x02	; 2
 59c:	80 83       	st	Z, r24
 59e:	8b ed       	ldi	r24, 0xDB	; 219
 5a0:	80 83       	st	Z, r24
 5a2:	80 e3       	ldi	r24, 0x30	; 48
 5a4:	80 83       	st	Z, r24
 5a6:	8d ea       	ldi	r24, 0xAD	; 173
 5a8:	80 83       	st	Z, r24
 5aa:	10 82       	st	Z, r1
 5ac:	84 ea       	ldi	r24, 0xA4	; 164
 5ae:	80 83       	st	Z, r24
 5b0:	86 ea       	ldi	r24, 0xA6	; 166
 5b2:	80 83       	st	Z, r24
 5b4:	8f ea       	ldi	r24, 0xAF	; 175
 5b6:	80 83       	st	Z, r24
 5b8:	0e 94 9f 02 	call	0x53e	; 0x53e <oled_reset>
 5bc:	08 95       	ret

000005be <oled_put_char>:
}


void oled_put_char(unsigned char c)		// Put character
{
 5be:	80 52       	subi	r24, 0x20	; 32
 5c0:	90 e0       	ldi	r25, 0x00	; 0
 5c2:	9c 01       	movw	r18, r24
 5c4:	22 0f       	add	r18, r18
 5c6:	33 1f       	adc	r19, r19
 5c8:	22 0f       	add	r18, r18
 5ca:	33 1f       	adc	r19, r19
 5cc:	22 0f       	add	r18, r18
 5ce:	33 1f       	adc	r19, r19
 5d0:	20 59       	subi	r18, 0x90	; 144
 5d2:	3f 4f       	sbci	r19, 0xFF	; 255
 5d4:	88 0f       	add	r24, r24
 5d6:	99 1f       	adc	r25, r25
 5d8:	88 0f       	add	r24, r24
 5da:	99 1f       	adc	r25, r25
 5dc:	88 0f       	add	r24, r24
 5de:	99 1f       	adc	r25, r25
 5e0:	88 58       	subi	r24, 0x88	; 136
 5e2:	9f 4f       	sbci	r25, 0xFF	; 255


void oled_write_data(uint8_t data)		// Write char to screen
{
    volatile char* ext_oled_data = (char *) OLED_DATA_ADR;		// Start address for OLED data
    ext_oled_data[0] = data;
 5e4:	a0 e0       	ldi	r26, 0x00	; 0
 5e6:	b2 e1       	ldi	r27, 0x12	; 18
{
	uint8_t print_char = c - 32;
	uint8_t font_size  = 8;				// Size of the different fonts. Needs to be calculated.
	
	for (int i = 0; i < font_size; i++)
		oled_write_data(pgm_read_word(&font8[print_char][i]));
 5e8:	f9 01       	movw	r30, r18
 5ea:	45 91       	lpm	r20, Z+
 5ec:	54 91       	lpm	r21, Z


void oled_write_data(uint8_t data)		// Write char to screen
{
    volatile char* ext_oled_data = (char *) OLED_DATA_ADR;		// Start address for OLED data
    ext_oled_data[0] = data;
 5ee:	4c 93       	st	X, r20
 5f0:	2f 5f       	subi	r18, 0xFF	; 255
 5f2:	3f 4f       	sbci	r19, 0xFF	; 255
void oled_put_char(unsigned char c)		// Put character
{
	uint8_t print_char = c - 32;
	uint8_t font_size  = 8;				// Size of the different fonts. Needs to be calculated.
	
	for (int i = 0; i < font_size; i++)
 5f4:	28 17       	cp	r18, r24
 5f6:	39 07       	cpc	r19, r25
 5f8:	b9 f7       	brne	.-18     	; 0x5e8 <oled_put_char+0x2a>
		oled_write_data(pgm_read_word(&font8[print_char][i]));
}
 5fa:	08 95       	ret

000005fc <oled_put_char_inv>:

void oled_put_char_inv(unsigned char c)	// Put inverted character
{
 5fc:	80 52       	subi	r24, 0x20	; 32
 5fe:	90 e0       	ldi	r25, 0x00	; 0
 600:	9c 01       	movw	r18, r24
 602:	22 0f       	add	r18, r18
 604:	33 1f       	adc	r19, r19
 606:	22 0f       	add	r18, r18
 608:	33 1f       	adc	r19, r19
 60a:	22 0f       	add	r18, r18
 60c:	33 1f       	adc	r19, r19
 60e:	20 59       	subi	r18, 0x90	; 144
 610:	3f 4f       	sbci	r19, 0xFF	; 255
 612:	88 0f       	add	r24, r24
 614:	99 1f       	adc	r25, r25
 616:	88 0f       	add	r24, r24
 618:	99 1f       	adc	r25, r25
 61a:	88 0f       	add	r24, r24
 61c:	99 1f       	adc	r25, r25
 61e:	88 58       	subi	r24, 0x88	; 136
 620:	9f 4f       	sbci	r25, 0xFF	; 255


void oled_write_data(uint8_t data)		// Write char to screen
{
    volatile char* ext_oled_data = (char *) OLED_DATA_ADR;		// Start address for OLED data
    ext_oled_data[0] = data;
 622:	a0 e0       	ldi	r26, 0x00	; 0
 624:	b2 e1       	ldi	r27, 0x12	; 18
{
	uint8_t print_char = c - 32;
	uint8_t font_size  = 8;				// Size of the different fonts. Needs to be calculated.
	
	for (int i = 0; i < font_size; i++)
		oled_write_data(~pgm_read_word(&font8[print_char][i]));
 626:	f9 01       	movw	r30, r18
 628:	45 91       	lpm	r20, Z+
 62a:	54 91       	lpm	r21, Z
 62c:	40 95       	com	r20


void oled_write_data(uint8_t data)		// Write char to screen
{
    volatile char* ext_oled_data = (char *) OLED_DATA_ADR;		// Start address for OLED data
    ext_oled_data[0] = data;
 62e:	4c 93       	st	X, r20
 630:	2f 5f       	subi	r18, 0xFF	; 255
 632:	3f 4f       	sbci	r19, 0xFF	; 255
void oled_put_char_inv(unsigned char c)	// Put inverted character
{
	uint8_t print_char = c - 32;
	uint8_t font_size  = 8;				// Size of the different fonts. Needs to be calculated.
	
	for (int i = 0; i < font_size; i++)
 634:	28 17       	cp	r18, r24
 636:	39 07       	cpc	r19, r25
 638:	b1 f7       	brne	.-20     	; 0x626 <oled_put_char_inv+0x2a>
		oled_write_data(~pgm_read_word(&font8[print_char][i]));
}
 63a:	08 95       	ret

0000063c <oled_print>:

void oled_print(char* str)			// Print text to screen
{			
 63c:	ef 92       	push	r14
 63e:	ff 92       	push	r15
 640:	0f 93       	push	r16
 642:	1f 93       	push	r17
 644:	cf 93       	push	r28
 646:	df 93       	push	r29
 648:	8c 01       	movw	r16, r24
 64a:	7c 01       	movw	r14, r24
	for (int i = 0; i < strlen(str); i++)
 64c:	c0 e0       	ldi	r28, 0x00	; 0
 64e:	d0 e0       	ldi	r29, 0x00	; 0
 650:	06 c0       	rjmp	.+12     	; 0x65e <oled_print+0x22>
		oled_put_char(str[i]);					// write to screen
 652:	f7 01       	movw	r30, r14
 654:	81 91       	ld	r24, Z+
 656:	7f 01       	movw	r14, r30
 658:	0e 94 df 02 	call	0x5be	; 0x5be <oled_put_char>
		oled_write_data(~pgm_read_word(&font8[print_char][i]));
}

void oled_print(char* str)			// Print text to screen
{			
	for (int i = 0; i < strlen(str); i++)
 65c:	21 96       	adiw	r28, 0x01	; 1
 65e:	f8 01       	movw	r30, r16
 660:	01 90       	ld	r0, Z+
 662:	00 20       	and	r0, r0
 664:	e9 f7       	brne	.-6      	; 0x660 <oled_print+0x24>
 666:	31 97       	sbiw	r30, 0x01	; 1
 668:	e0 1b       	sub	r30, r16
 66a:	f1 0b       	sbc	r31, r17
 66c:	ce 17       	cp	r28, r30
 66e:	df 07       	cpc	r29, r31
 670:	80 f3       	brcs	.-32     	; 0x652 <oled_print+0x16>
		oled_put_char(str[i]);					// write to screen
}
 672:	df 91       	pop	r29
 674:	cf 91       	pop	r28
 676:	1f 91       	pop	r17
 678:	0f 91       	pop	r16
 67a:	ff 90       	pop	r15
 67c:	ef 90       	pop	r14
 67e:	08 95       	ret

00000680 <oled_print_inv>:

void oled_print_inv(char* str)		// Print inverted text to screen
{
 680:	ef 92       	push	r14
 682:	ff 92       	push	r15
 684:	0f 93       	push	r16
 686:	1f 93       	push	r17
 688:	cf 93       	push	r28
 68a:	df 93       	push	r29
 68c:	8c 01       	movw	r16, r24
 68e:	7c 01       	movw	r14, r24
	for (int i = 0; i < strlen(str); i++)
 690:	c0 e0       	ldi	r28, 0x00	; 0
 692:	d0 e0       	ldi	r29, 0x00	; 0
 694:	06 c0       	rjmp	.+12     	; 0x6a2 <oled_print_inv+0x22>
		oled_put_char_inv(str[i]);					// write to screen
 696:	f7 01       	movw	r30, r14
 698:	81 91       	ld	r24, Z+
 69a:	7f 01       	movw	r14, r30
 69c:	0e 94 fe 02 	call	0x5fc	; 0x5fc <oled_put_char_inv>
		oled_put_char(str[i]);					// write to screen
}

void oled_print_inv(char* str)		// Print inverted text to screen
{
	for (int i = 0; i < strlen(str); i++)
 6a0:	21 96       	adiw	r28, 0x01	; 1
 6a2:	f8 01       	movw	r30, r16
 6a4:	01 90       	ld	r0, Z+
 6a6:	00 20       	and	r0, r0
 6a8:	e9 f7       	brne	.-6      	; 0x6a4 <oled_print_inv+0x24>
 6aa:	31 97       	sbiw	r30, 0x01	; 1
 6ac:	e0 1b       	sub	r30, r16
 6ae:	f1 0b       	sbc	r31, r17
 6b0:	ce 17       	cp	r28, r30
 6b2:	df 07       	cpc	r29, r31
 6b4:	80 f3       	brcs	.-32     	; 0x696 <oled_print_inv+0x16>
		oled_put_char_inv(str[i]);					// write to screen
}
 6b6:	df 91       	pop	r29
 6b8:	cf 91       	pop	r28
 6ba:	1f 91       	pop	r17
 6bc:	0f 91       	pop	r16
 6be:	ff 90       	pop	r15
 6c0:	ef 90       	pop	r14
 6c2:	08 95       	ret

000006c4 <spi_init>:
{
    while(!(SPSR & (1<<SPIF)))              // Wait for reception complete 
        ;

    return SPDR;                            // Return data register
}
 6c4:	87 b3       	in	r24, 0x17	; 23
 6c6:	80 6b       	ori	r24, 0xB0	; 176
 6c8:	87 bb       	out	0x17, r24	; 23
 6ca:	81 e5       	ldi	r24, 0x51	; 81
 6cc:	8d b9       	out	0x0d, r24	; 13
 6ce:	c4 9a       	sbi	0x18, 4	; 24
 6d0:	08 95       	ret

000006d2 <spi_write>:

void spi_write(uint8_t cmd)                      /* Write to the SPI */
{
    SPDR = cmd;                            // Start transmission                        
 6d2:	8f b9       	out	0x0f, r24	; 15
    while(!(SPSR & (1<<SPIF)) )            // Wait for transmission complete  
 6d4:	77 9b       	sbis	0x0e, 7	; 14
 6d6:	fe cf       	rjmp	.-4      	; 0x6d4 <spi_write+0x2>
        ;
 6d8:	08 95       	ret

000006da <uart_receive>:
}

// Return received data
unsigned char uart_receive()
{
    return UDR0;
 6da:	8c b1       	in	r24, 0x0c	; 12
}
 6dc:	08 95       	ret

000006de <uart_is_ready>:
   \____________________________*/

// Check if transmitt buffer is ready
bool uart_is_ready()
{
    return ((UCSR0A & (1 << UDRE0)));
 6de:	8b b1       	in	r24, 0x0b	; 11
}
 6e0:	85 fb       	bst	r24, 5
 6e2:	88 27       	eor	r24, r24
 6e4:	80 f9       	bld	r24, 0
 6e6:	08 95       	ret

000006e8 <uart_send>:

// Send data
void uart_send(unsigned char data)
{
 6e8:	cf 93       	push	r28
 6ea:	c8 2f       	mov	r28, r24
    // Wait for empty transmit buffer
    while (!uart_is_ready());
 6ec:	0e 94 6f 03 	call	0x6de	; 0x6de <uart_is_ready>
 6f0:	88 23       	and	r24, r24
 6f2:	e1 f3       	breq	.-8      	; 0x6ec <uart_send+0x4>

    UDR0 = data; //put data on buffer
 6f4:	cc b9       	out	0x0c, r28	; 12
}
 6f6:	cf 91       	pop	r28
 6f8:	08 95       	ret

000006fa <uart_init>:

// initialize the uart
void uart_init()
{
    // Set baud rate
    UBRR0H = (unsigned char)(MYUBRR >> 8);
 6fa:	10 bc       	out	0x20, r1	; 32
    UBRR0L = (unsigned char)(MYUBRR);
 6fc:	8f e1       	ldi	r24, 0x1F	; 31
 6fe:	89 b9       	out	0x09, r24	; 9

    // Enable receive and transmitt
    UCSR0B = (1 << RXEN0) | (1 << TXEN0);
 700:	88 e1       	ldi	r24, 0x18	; 24
 702:	8a b9       	out	0x0a, r24	; 10

    // Set frame format
    UCSR0C = (1 << URSEL0) | (1 << USBS0) | (3 << UCSZ00);
 704:	8e e8       	ldi	r24, 0x8E	; 142
 706:	80 bd       	out	0x20, r24	; 32

    // Assign printf to UART
    fdevopen(uart_send, uart_receive);
 708:	6d e6       	ldi	r22, 0x6D	; 109
 70a:	73 e0       	ldi	r23, 0x03	; 3
 70c:	84 e7       	ldi	r24, 0x74	; 116
 70e:	93 e0       	ldi	r25, 0x03	; 3
 710:	0e 94 90 03 	call	0x720	; 0x720 <fdevopen>
 714:	08 95       	ret

00000716 <xmem_init>:
#include "xmem.h"

void xmem_init()                      // Initialize external memory
{
	MCUCR =  (1 << SRE);	     	  // Activate external memory
 716:	80 e8       	ldi	r24, 0x80	; 128
 718:	85 bf       	out	0x35, r24	; 53
	SFIOR =  (1 << XMM2);			  // Mask JTAG pins
 71a:	80 e2       	ldi	r24, 0x20	; 32
 71c:	80 bf       	out	0x30, r24	; 48
 71e:	08 95       	ret

00000720 <fdevopen>:
 720:	0f 93       	push	r16
 722:	1f 93       	push	r17
 724:	cf 93       	push	r28
 726:	df 93       	push	r29
 728:	00 97       	sbiw	r24, 0x00	; 0
 72a:	31 f4       	brne	.+12     	; 0x738 <fdevopen+0x18>
 72c:	61 15       	cp	r22, r1
 72e:	71 05       	cpc	r23, r1
 730:	19 f4       	brne	.+6      	; 0x738 <fdevopen+0x18>
 732:	80 e0       	ldi	r24, 0x00	; 0
 734:	90 e0       	ldi	r25, 0x00	; 0
 736:	3a c0       	rjmp	.+116    	; 0x7ac <fdevopen+0x8c>
 738:	8b 01       	movw	r16, r22
 73a:	ec 01       	movw	r28, r24
 73c:	6e e0       	ldi	r22, 0x0E	; 14
 73e:	70 e0       	ldi	r23, 0x00	; 0
 740:	81 e0       	ldi	r24, 0x01	; 1
 742:	90 e0       	ldi	r25, 0x00	; 0
 744:	0e 94 d2 05 	call	0xba4	; 0xba4 <calloc>
 748:	fc 01       	movw	r30, r24
 74a:	89 2b       	or	r24, r25
 74c:	91 f3       	breq	.-28     	; 0x732 <fdevopen+0x12>
 74e:	80 e8       	ldi	r24, 0x80	; 128
 750:	83 83       	std	Z+3, r24	; 0x03
 752:	01 15       	cp	r16, r1
 754:	11 05       	cpc	r17, r1
 756:	71 f0       	breq	.+28     	; 0x774 <fdevopen+0x54>
 758:	13 87       	std	Z+11, r17	; 0x0b
 75a:	02 87       	std	Z+10, r16	; 0x0a
 75c:	81 e8       	ldi	r24, 0x81	; 129
 75e:	83 83       	std	Z+3, r24	; 0x03
 760:	80 91 a2 01 	lds	r24, 0x01A2	; 0x8001a2 <__data_end>
 764:	90 91 a3 01 	lds	r25, 0x01A3	; 0x8001a3 <__data_end+0x1>
 768:	89 2b       	or	r24, r25
 76a:	21 f4       	brne	.+8      	; 0x774 <fdevopen+0x54>
 76c:	f0 93 a3 01 	sts	0x01A3, r31	; 0x8001a3 <__data_end+0x1>
 770:	e0 93 a2 01 	sts	0x01A2, r30	; 0x8001a2 <__data_end>
 774:	20 97       	sbiw	r28, 0x00	; 0
 776:	c9 f0       	breq	.+50     	; 0x7aa <fdevopen+0x8a>
 778:	d1 87       	std	Z+9, r29	; 0x09
 77a:	c0 87       	std	Z+8, r28	; 0x08
 77c:	83 81       	ldd	r24, Z+3	; 0x03
 77e:	82 60       	ori	r24, 0x02	; 2
 780:	83 83       	std	Z+3, r24	; 0x03
 782:	80 91 a4 01 	lds	r24, 0x01A4	; 0x8001a4 <__data_end+0x2>
 786:	90 91 a5 01 	lds	r25, 0x01A5	; 0x8001a5 <__data_end+0x3>
 78a:	89 2b       	or	r24, r25
 78c:	71 f4       	brne	.+28     	; 0x7aa <fdevopen+0x8a>
 78e:	f0 93 a5 01 	sts	0x01A5, r31	; 0x8001a5 <__data_end+0x3>
 792:	e0 93 a4 01 	sts	0x01A4, r30	; 0x8001a4 <__data_end+0x2>
 796:	80 91 a6 01 	lds	r24, 0x01A6	; 0x8001a6 <__data_end+0x4>
 79a:	90 91 a7 01 	lds	r25, 0x01A7	; 0x8001a7 <__data_end+0x5>
 79e:	89 2b       	or	r24, r25
 7a0:	21 f4       	brne	.+8      	; 0x7aa <fdevopen+0x8a>
 7a2:	f0 93 a7 01 	sts	0x01A7, r31	; 0x8001a7 <__data_end+0x5>
 7a6:	e0 93 a6 01 	sts	0x01A6, r30	; 0x8001a6 <__data_end+0x4>
 7aa:	cf 01       	movw	r24, r30
 7ac:	df 91       	pop	r29
 7ae:	cf 91       	pop	r28
 7b0:	1f 91       	pop	r17
 7b2:	0f 91       	pop	r16
 7b4:	08 95       	ret

000007b6 <printf>:
 7b6:	a0 e0       	ldi	r26, 0x00	; 0
 7b8:	b0 e0       	ldi	r27, 0x00	; 0
 7ba:	e1 ee       	ldi	r30, 0xE1	; 225
 7bc:	f3 e0       	ldi	r31, 0x03	; 3
 7be:	0c 94 d6 07 	jmp	0xfac	; 0xfac <__prologue_saves__+0x20>
 7c2:	ae 01       	movw	r20, r28
 7c4:	4b 5f       	subi	r20, 0xFB	; 251
 7c6:	5f 4f       	sbci	r21, 0xFF	; 255
 7c8:	fa 01       	movw	r30, r20
 7ca:	61 91       	ld	r22, Z+
 7cc:	71 91       	ld	r23, Z+
 7ce:	af 01       	movw	r20, r30
 7d0:	80 91 a4 01 	lds	r24, 0x01A4	; 0x8001a4 <__data_end+0x2>
 7d4:	90 91 a5 01 	lds	r25, 0x01A5	; 0x8001a5 <__data_end+0x3>
 7d8:	0e 94 f1 03 	call	0x7e2	; 0x7e2 <vfprintf>
 7dc:	e2 e0       	ldi	r30, 0x02	; 2
 7de:	0c 94 f2 07 	jmp	0xfe4	; 0xfe4 <__epilogue_restores__+0x20>

000007e2 <vfprintf>:
 7e2:	ab e0       	ldi	r26, 0x0B	; 11
 7e4:	b0 e0       	ldi	r27, 0x00	; 0
 7e6:	e7 ef       	ldi	r30, 0xF7	; 247
 7e8:	f3 e0       	ldi	r31, 0x03	; 3
 7ea:	0c 94 c6 07 	jmp	0xf8c	; 0xf8c <__prologue_saves__>
 7ee:	6c 01       	movw	r12, r24
 7f0:	7b 01       	movw	r14, r22
 7f2:	8a 01       	movw	r16, r20
 7f4:	fc 01       	movw	r30, r24
 7f6:	17 82       	std	Z+7, r1	; 0x07
 7f8:	16 82       	std	Z+6, r1	; 0x06
 7fa:	83 81       	ldd	r24, Z+3	; 0x03
 7fc:	81 ff       	sbrs	r24, 1
 7fe:	cc c1       	rjmp	.+920    	; 0xb98 <vfprintf+0x3b6>
 800:	ce 01       	movw	r24, r28
 802:	01 96       	adiw	r24, 0x01	; 1
 804:	3c 01       	movw	r6, r24
 806:	f6 01       	movw	r30, r12
 808:	93 81       	ldd	r25, Z+3	; 0x03
 80a:	f7 01       	movw	r30, r14
 80c:	93 fd       	sbrc	r25, 3
 80e:	85 91       	lpm	r24, Z+
 810:	93 ff       	sbrs	r25, 3
 812:	81 91       	ld	r24, Z+
 814:	7f 01       	movw	r14, r30
 816:	88 23       	and	r24, r24
 818:	09 f4       	brne	.+2      	; 0x81c <vfprintf+0x3a>
 81a:	ba c1       	rjmp	.+884    	; 0xb90 <vfprintf+0x3ae>
 81c:	85 32       	cpi	r24, 0x25	; 37
 81e:	39 f4       	brne	.+14     	; 0x82e <vfprintf+0x4c>
 820:	93 fd       	sbrc	r25, 3
 822:	85 91       	lpm	r24, Z+
 824:	93 ff       	sbrs	r25, 3
 826:	81 91       	ld	r24, Z+
 828:	7f 01       	movw	r14, r30
 82a:	85 32       	cpi	r24, 0x25	; 37
 82c:	29 f4       	brne	.+10     	; 0x838 <vfprintf+0x56>
 82e:	b6 01       	movw	r22, r12
 830:	90 e0       	ldi	r25, 0x00	; 0
 832:	0e 94 2c 07 	call	0xe58	; 0xe58 <fputc>
 836:	e7 cf       	rjmp	.-50     	; 0x806 <vfprintf+0x24>
 838:	91 2c       	mov	r9, r1
 83a:	21 2c       	mov	r2, r1
 83c:	31 2c       	mov	r3, r1
 83e:	ff e1       	ldi	r31, 0x1F	; 31
 840:	f3 15       	cp	r31, r3
 842:	d8 f0       	brcs	.+54     	; 0x87a <vfprintf+0x98>
 844:	8b 32       	cpi	r24, 0x2B	; 43
 846:	79 f0       	breq	.+30     	; 0x866 <vfprintf+0x84>
 848:	38 f4       	brcc	.+14     	; 0x858 <vfprintf+0x76>
 84a:	80 32       	cpi	r24, 0x20	; 32
 84c:	79 f0       	breq	.+30     	; 0x86c <vfprintf+0x8a>
 84e:	83 32       	cpi	r24, 0x23	; 35
 850:	a1 f4       	brne	.+40     	; 0x87a <vfprintf+0x98>
 852:	23 2d       	mov	r18, r3
 854:	20 61       	ori	r18, 0x10	; 16
 856:	1d c0       	rjmp	.+58     	; 0x892 <vfprintf+0xb0>
 858:	8d 32       	cpi	r24, 0x2D	; 45
 85a:	61 f0       	breq	.+24     	; 0x874 <vfprintf+0x92>
 85c:	80 33       	cpi	r24, 0x30	; 48
 85e:	69 f4       	brne	.+26     	; 0x87a <vfprintf+0x98>
 860:	23 2d       	mov	r18, r3
 862:	21 60       	ori	r18, 0x01	; 1
 864:	16 c0       	rjmp	.+44     	; 0x892 <vfprintf+0xb0>
 866:	83 2d       	mov	r24, r3
 868:	82 60       	ori	r24, 0x02	; 2
 86a:	38 2e       	mov	r3, r24
 86c:	e3 2d       	mov	r30, r3
 86e:	e4 60       	ori	r30, 0x04	; 4
 870:	3e 2e       	mov	r3, r30
 872:	2a c0       	rjmp	.+84     	; 0x8c8 <vfprintf+0xe6>
 874:	f3 2d       	mov	r31, r3
 876:	f8 60       	ori	r31, 0x08	; 8
 878:	1d c0       	rjmp	.+58     	; 0x8b4 <vfprintf+0xd2>
 87a:	37 fc       	sbrc	r3, 7
 87c:	2d c0       	rjmp	.+90     	; 0x8d8 <vfprintf+0xf6>
 87e:	20 ed       	ldi	r18, 0xD0	; 208
 880:	28 0f       	add	r18, r24
 882:	2a 30       	cpi	r18, 0x0A	; 10
 884:	40 f0       	brcs	.+16     	; 0x896 <vfprintf+0xb4>
 886:	8e 32       	cpi	r24, 0x2E	; 46
 888:	b9 f4       	brne	.+46     	; 0x8b8 <vfprintf+0xd6>
 88a:	36 fc       	sbrc	r3, 6
 88c:	81 c1       	rjmp	.+770    	; 0xb90 <vfprintf+0x3ae>
 88e:	23 2d       	mov	r18, r3
 890:	20 64       	ori	r18, 0x40	; 64
 892:	32 2e       	mov	r3, r18
 894:	19 c0       	rjmp	.+50     	; 0x8c8 <vfprintf+0xe6>
 896:	36 fe       	sbrs	r3, 6
 898:	06 c0       	rjmp	.+12     	; 0x8a6 <vfprintf+0xc4>
 89a:	8a e0       	ldi	r24, 0x0A	; 10
 89c:	98 9e       	mul	r9, r24
 89e:	20 0d       	add	r18, r0
 8a0:	11 24       	eor	r1, r1
 8a2:	92 2e       	mov	r9, r18
 8a4:	11 c0       	rjmp	.+34     	; 0x8c8 <vfprintf+0xe6>
 8a6:	ea e0       	ldi	r30, 0x0A	; 10
 8a8:	2e 9e       	mul	r2, r30
 8aa:	20 0d       	add	r18, r0
 8ac:	11 24       	eor	r1, r1
 8ae:	22 2e       	mov	r2, r18
 8b0:	f3 2d       	mov	r31, r3
 8b2:	f0 62       	ori	r31, 0x20	; 32
 8b4:	3f 2e       	mov	r3, r31
 8b6:	08 c0       	rjmp	.+16     	; 0x8c8 <vfprintf+0xe6>
 8b8:	8c 36       	cpi	r24, 0x6C	; 108
 8ba:	21 f4       	brne	.+8      	; 0x8c4 <vfprintf+0xe2>
 8bc:	83 2d       	mov	r24, r3
 8be:	80 68       	ori	r24, 0x80	; 128
 8c0:	38 2e       	mov	r3, r24
 8c2:	02 c0       	rjmp	.+4      	; 0x8c8 <vfprintf+0xe6>
 8c4:	88 36       	cpi	r24, 0x68	; 104
 8c6:	41 f4       	brne	.+16     	; 0x8d8 <vfprintf+0xf6>
 8c8:	f7 01       	movw	r30, r14
 8ca:	93 fd       	sbrc	r25, 3
 8cc:	85 91       	lpm	r24, Z+
 8ce:	93 ff       	sbrs	r25, 3
 8d0:	81 91       	ld	r24, Z+
 8d2:	7f 01       	movw	r14, r30
 8d4:	81 11       	cpse	r24, r1
 8d6:	b3 cf       	rjmp	.-154    	; 0x83e <vfprintf+0x5c>
 8d8:	98 2f       	mov	r25, r24
 8da:	9f 7d       	andi	r25, 0xDF	; 223
 8dc:	95 54       	subi	r25, 0x45	; 69
 8de:	93 30       	cpi	r25, 0x03	; 3
 8e0:	28 f4       	brcc	.+10     	; 0x8ec <vfprintf+0x10a>
 8e2:	0c 5f       	subi	r16, 0xFC	; 252
 8e4:	1f 4f       	sbci	r17, 0xFF	; 255
 8e6:	9f e3       	ldi	r25, 0x3F	; 63
 8e8:	99 83       	std	Y+1, r25	; 0x01
 8ea:	0d c0       	rjmp	.+26     	; 0x906 <vfprintf+0x124>
 8ec:	83 36       	cpi	r24, 0x63	; 99
 8ee:	31 f0       	breq	.+12     	; 0x8fc <vfprintf+0x11a>
 8f0:	83 37       	cpi	r24, 0x73	; 115
 8f2:	71 f0       	breq	.+28     	; 0x910 <vfprintf+0x12e>
 8f4:	83 35       	cpi	r24, 0x53	; 83
 8f6:	09 f0       	breq	.+2      	; 0x8fa <vfprintf+0x118>
 8f8:	59 c0       	rjmp	.+178    	; 0x9ac <vfprintf+0x1ca>
 8fa:	21 c0       	rjmp	.+66     	; 0x93e <vfprintf+0x15c>
 8fc:	f8 01       	movw	r30, r16
 8fe:	80 81       	ld	r24, Z
 900:	89 83       	std	Y+1, r24	; 0x01
 902:	0e 5f       	subi	r16, 0xFE	; 254
 904:	1f 4f       	sbci	r17, 0xFF	; 255
 906:	88 24       	eor	r8, r8
 908:	83 94       	inc	r8
 90a:	91 2c       	mov	r9, r1
 90c:	53 01       	movw	r10, r6
 90e:	13 c0       	rjmp	.+38     	; 0x936 <vfprintf+0x154>
 910:	28 01       	movw	r4, r16
 912:	f2 e0       	ldi	r31, 0x02	; 2
 914:	4f 0e       	add	r4, r31
 916:	51 1c       	adc	r5, r1
 918:	f8 01       	movw	r30, r16
 91a:	a0 80       	ld	r10, Z
 91c:	b1 80       	ldd	r11, Z+1	; 0x01
 91e:	36 fe       	sbrs	r3, 6
 920:	03 c0       	rjmp	.+6      	; 0x928 <vfprintf+0x146>
 922:	69 2d       	mov	r22, r9
 924:	70 e0       	ldi	r23, 0x00	; 0
 926:	02 c0       	rjmp	.+4      	; 0x92c <vfprintf+0x14a>
 928:	6f ef       	ldi	r22, 0xFF	; 255
 92a:	7f ef       	ldi	r23, 0xFF	; 255
 92c:	c5 01       	movw	r24, r10
 92e:	0e 94 21 07 	call	0xe42	; 0xe42 <strnlen>
 932:	4c 01       	movw	r8, r24
 934:	82 01       	movw	r16, r4
 936:	f3 2d       	mov	r31, r3
 938:	ff 77       	andi	r31, 0x7F	; 127
 93a:	3f 2e       	mov	r3, r31
 93c:	16 c0       	rjmp	.+44     	; 0x96a <vfprintf+0x188>
 93e:	28 01       	movw	r4, r16
 940:	22 e0       	ldi	r18, 0x02	; 2
 942:	42 0e       	add	r4, r18
 944:	51 1c       	adc	r5, r1
 946:	f8 01       	movw	r30, r16
 948:	a0 80       	ld	r10, Z
 94a:	b1 80       	ldd	r11, Z+1	; 0x01
 94c:	36 fe       	sbrs	r3, 6
 94e:	03 c0       	rjmp	.+6      	; 0x956 <vfprintf+0x174>
 950:	69 2d       	mov	r22, r9
 952:	70 e0       	ldi	r23, 0x00	; 0
 954:	02 c0       	rjmp	.+4      	; 0x95a <vfprintf+0x178>
 956:	6f ef       	ldi	r22, 0xFF	; 255
 958:	7f ef       	ldi	r23, 0xFF	; 255
 95a:	c5 01       	movw	r24, r10
 95c:	0e 94 0f 07 	call	0xe1e	; 0xe1e <strnlen_P>
 960:	4c 01       	movw	r8, r24
 962:	f3 2d       	mov	r31, r3
 964:	f0 68       	ori	r31, 0x80	; 128
 966:	3f 2e       	mov	r3, r31
 968:	82 01       	movw	r16, r4
 96a:	33 fc       	sbrc	r3, 3
 96c:	1b c0       	rjmp	.+54     	; 0x9a4 <vfprintf+0x1c2>
 96e:	82 2d       	mov	r24, r2
 970:	90 e0       	ldi	r25, 0x00	; 0
 972:	88 16       	cp	r8, r24
 974:	99 06       	cpc	r9, r25
 976:	b0 f4       	brcc	.+44     	; 0x9a4 <vfprintf+0x1c2>
 978:	b6 01       	movw	r22, r12
 97a:	80 e2       	ldi	r24, 0x20	; 32
 97c:	90 e0       	ldi	r25, 0x00	; 0
 97e:	0e 94 2c 07 	call	0xe58	; 0xe58 <fputc>
 982:	2a 94       	dec	r2
 984:	f4 cf       	rjmp	.-24     	; 0x96e <vfprintf+0x18c>
 986:	f5 01       	movw	r30, r10
 988:	37 fc       	sbrc	r3, 7
 98a:	85 91       	lpm	r24, Z+
 98c:	37 fe       	sbrs	r3, 7
 98e:	81 91       	ld	r24, Z+
 990:	5f 01       	movw	r10, r30
 992:	b6 01       	movw	r22, r12
 994:	90 e0       	ldi	r25, 0x00	; 0
 996:	0e 94 2c 07 	call	0xe58	; 0xe58 <fputc>
 99a:	21 10       	cpse	r2, r1
 99c:	2a 94       	dec	r2
 99e:	21 e0       	ldi	r18, 0x01	; 1
 9a0:	82 1a       	sub	r8, r18
 9a2:	91 08       	sbc	r9, r1
 9a4:	81 14       	cp	r8, r1
 9a6:	91 04       	cpc	r9, r1
 9a8:	71 f7       	brne	.-36     	; 0x986 <vfprintf+0x1a4>
 9aa:	e8 c0       	rjmp	.+464    	; 0xb7c <vfprintf+0x39a>
 9ac:	84 36       	cpi	r24, 0x64	; 100
 9ae:	11 f0       	breq	.+4      	; 0x9b4 <vfprintf+0x1d2>
 9b0:	89 36       	cpi	r24, 0x69	; 105
 9b2:	41 f5       	brne	.+80     	; 0xa04 <vfprintf+0x222>
 9b4:	f8 01       	movw	r30, r16
 9b6:	37 fe       	sbrs	r3, 7
 9b8:	07 c0       	rjmp	.+14     	; 0x9c8 <vfprintf+0x1e6>
 9ba:	60 81       	ld	r22, Z
 9bc:	71 81       	ldd	r23, Z+1	; 0x01
 9be:	82 81       	ldd	r24, Z+2	; 0x02
 9c0:	93 81       	ldd	r25, Z+3	; 0x03
 9c2:	0c 5f       	subi	r16, 0xFC	; 252
 9c4:	1f 4f       	sbci	r17, 0xFF	; 255
 9c6:	08 c0       	rjmp	.+16     	; 0x9d8 <vfprintf+0x1f6>
 9c8:	60 81       	ld	r22, Z
 9ca:	71 81       	ldd	r23, Z+1	; 0x01
 9cc:	07 2e       	mov	r0, r23
 9ce:	00 0c       	add	r0, r0
 9d0:	88 0b       	sbc	r24, r24
 9d2:	99 0b       	sbc	r25, r25
 9d4:	0e 5f       	subi	r16, 0xFE	; 254
 9d6:	1f 4f       	sbci	r17, 0xFF	; 255
 9d8:	f3 2d       	mov	r31, r3
 9da:	ff 76       	andi	r31, 0x6F	; 111
 9dc:	3f 2e       	mov	r3, r31
 9de:	97 ff       	sbrs	r25, 7
 9e0:	09 c0       	rjmp	.+18     	; 0x9f4 <vfprintf+0x212>
 9e2:	90 95       	com	r25
 9e4:	80 95       	com	r24
 9e6:	70 95       	com	r23
 9e8:	61 95       	neg	r22
 9ea:	7f 4f       	sbci	r23, 0xFF	; 255
 9ec:	8f 4f       	sbci	r24, 0xFF	; 255
 9ee:	9f 4f       	sbci	r25, 0xFF	; 255
 9f0:	f0 68       	ori	r31, 0x80	; 128
 9f2:	3f 2e       	mov	r3, r31
 9f4:	2a e0       	ldi	r18, 0x0A	; 10
 9f6:	30 e0       	ldi	r19, 0x00	; 0
 9f8:	a3 01       	movw	r20, r6
 9fa:	0e 94 68 07 	call	0xed0	; 0xed0 <__ultoa_invert>
 9fe:	88 2e       	mov	r8, r24
 a00:	86 18       	sub	r8, r6
 a02:	45 c0       	rjmp	.+138    	; 0xa8e <vfprintf+0x2ac>
 a04:	85 37       	cpi	r24, 0x75	; 117
 a06:	31 f4       	brne	.+12     	; 0xa14 <vfprintf+0x232>
 a08:	23 2d       	mov	r18, r3
 a0a:	2f 7e       	andi	r18, 0xEF	; 239
 a0c:	b2 2e       	mov	r11, r18
 a0e:	2a e0       	ldi	r18, 0x0A	; 10
 a10:	30 e0       	ldi	r19, 0x00	; 0
 a12:	25 c0       	rjmp	.+74     	; 0xa5e <vfprintf+0x27c>
 a14:	93 2d       	mov	r25, r3
 a16:	99 7f       	andi	r25, 0xF9	; 249
 a18:	b9 2e       	mov	r11, r25
 a1a:	8f 36       	cpi	r24, 0x6F	; 111
 a1c:	c1 f0       	breq	.+48     	; 0xa4e <vfprintf+0x26c>
 a1e:	18 f4       	brcc	.+6      	; 0xa26 <vfprintf+0x244>
 a20:	88 35       	cpi	r24, 0x58	; 88
 a22:	79 f0       	breq	.+30     	; 0xa42 <vfprintf+0x260>
 a24:	b5 c0       	rjmp	.+362    	; 0xb90 <vfprintf+0x3ae>
 a26:	80 37       	cpi	r24, 0x70	; 112
 a28:	19 f0       	breq	.+6      	; 0xa30 <vfprintf+0x24e>
 a2a:	88 37       	cpi	r24, 0x78	; 120
 a2c:	21 f0       	breq	.+8      	; 0xa36 <vfprintf+0x254>
 a2e:	b0 c0       	rjmp	.+352    	; 0xb90 <vfprintf+0x3ae>
 a30:	e9 2f       	mov	r30, r25
 a32:	e0 61       	ori	r30, 0x10	; 16
 a34:	be 2e       	mov	r11, r30
 a36:	b4 fe       	sbrs	r11, 4
 a38:	0d c0       	rjmp	.+26     	; 0xa54 <vfprintf+0x272>
 a3a:	fb 2d       	mov	r31, r11
 a3c:	f4 60       	ori	r31, 0x04	; 4
 a3e:	bf 2e       	mov	r11, r31
 a40:	09 c0       	rjmp	.+18     	; 0xa54 <vfprintf+0x272>
 a42:	34 fe       	sbrs	r3, 4
 a44:	0a c0       	rjmp	.+20     	; 0xa5a <vfprintf+0x278>
 a46:	29 2f       	mov	r18, r25
 a48:	26 60       	ori	r18, 0x06	; 6
 a4a:	b2 2e       	mov	r11, r18
 a4c:	06 c0       	rjmp	.+12     	; 0xa5a <vfprintf+0x278>
 a4e:	28 e0       	ldi	r18, 0x08	; 8
 a50:	30 e0       	ldi	r19, 0x00	; 0
 a52:	05 c0       	rjmp	.+10     	; 0xa5e <vfprintf+0x27c>
 a54:	20 e1       	ldi	r18, 0x10	; 16
 a56:	30 e0       	ldi	r19, 0x00	; 0
 a58:	02 c0       	rjmp	.+4      	; 0xa5e <vfprintf+0x27c>
 a5a:	20 e1       	ldi	r18, 0x10	; 16
 a5c:	32 e0       	ldi	r19, 0x02	; 2
 a5e:	f8 01       	movw	r30, r16
 a60:	b7 fe       	sbrs	r11, 7
 a62:	07 c0       	rjmp	.+14     	; 0xa72 <vfprintf+0x290>
 a64:	60 81       	ld	r22, Z
 a66:	71 81       	ldd	r23, Z+1	; 0x01
 a68:	82 81       	ldd	r24, Z+2	; 0x02
 a6a:	93 81       	ldd	r25, Z+3	; 0x03
 a6c:	0c 5f       	subi	r16, 0xFC	; 252
 a6e:	1f 4f       	sbci	r17, 0xFF	; 255
 a70:	06 c0       	rjmp	.+12     	; 0xa7e <vfprintf+0x29c>
 a72:	60 81       	ld	r22, Z
 a74:	71 81       	ldd	r23, Z+1	; 0x01
 a76:	80 e0       	ldi	r24, 0x00	; 0
 a78:	90 e0       	ldi	r25, 0x00	; 0
 a7a:	0e 5f       	subi	r16, 0xFE	; 254
 a7c:	1f 4f       	sbci	r17, 0xFF	; 255
 a7e:	a3 01       	movw	r20, r6
 a80:	0e 94 68 07 	call	0xed0	; 0xed0 <__ultoa_invert>
 a84:	88 2e       	mov	r8, r24
 a86:	86 18       	sub	r8, r6
 a88:	fb 2d       	mov	r31, r11
 a8a:	ff 77       	andi	r31, 0x7F	; 127
 a8c:	3f 2e       	mov	r3, r31
 a8e:	36 fe       	sbrs	r3, 6
 a90:	0d c0       	rjmp	.+26     	; 0xaac <vfprintf+0x2ca>
 a92:	23 2d       	mov	r18, r3
 a94:	2e 7f       	andi	r18, 0xFE	; 254
 a96:	a2 2e       	mov	r10, r18
 a98:	89 14       	cp	r8, r9
 a9a:	58 f4       	brcc	.+22     	; 0xab2 <vfprintf+0x2d0>
 a9c:	34 fe       	sbrs	r3, 4
 a9e:	0b c0       	rjmp	.+22     	; 0xab6 <vfprintf+0x2d4>
 aa0:	32 fc       	sbrc	r3, 2
 aa2:	09 c0       	rjmp	.+18     	; 0xab6 <vfprintf+0x2d4>
 aa4:	83 2d       	mov	r24, r3
 aa6:	8e 7e       	andi	r24, 0xEE	; 238
 aa8:	a8 2e       	mov	r10, r24
 aaa:	05 c0       	rjmp	.+10     	; 0xab6 <vfprintf+0x2d4>
 aac:	b8 2c       	mov	r11, r8
 aae:	a3 2c       	mov	r10, r3
 ab0:	03 c0       	rjmp	.+6      	; 0xab8 <vfprintf+0x2d6>
 ab2:	b8 2c       	mov	r11, r8
 ab4:	01 c0       	rjmp	.+2      	; 0xab8 <vfprintf+0x2d6>
 ab6:	b9 2c       	mov	r11, r9
 ab8:	a4 fe       	sbrs	r10, 4
 aba:	0f c0       	rjmp	.+30     	; 0xada <vfprintf+0x2f8>
 abc:	fe 01       	movw	r30, r28
 abe:	e8 0d       	add	r30, r8
 ac0:	f1 1d       	adc	r31, r1
 ac2:	80 81       	ld	r24, Z
 ac4:	80 33       	cpi	r24, 0x30	; 48
 ac6:	21 f4       	brne	.+8      	; 0xad0 <vfprintf+0x2ee>
 ac8:	9a 2d       	mov	r25, r10
 aca:	99 7e       	andi	r25, 0xE9	; 233
 acc:	a9 2e       	mov	r10, r25
 ace:	09 c0       	rjmp	.+18     	; 0xae2 <vfprintf+0x300>
 ad0:	a2 fe       	sbrs	r10, 2
 ad2:	06 c0       	rjmp	.+12     	; 0xae0 <vfprintf+0x2fe>
 ad4:	b3 94       	inc	r11
 ad6:	b3 94       	inc	r11
 ad8:	04 c0       	rjmp	.+8      	; 0xae2 <vfprintf+0x300>
 ada:	8a 2d       	mov	r24, r10
 adc:	86 78       	andi	r24, 0x86	; 134
 ade:	09 f0       	breq	.+2      	; 0xae2 <vfprintf+0x300>
 ae0:	b3 94       	inc	r11
 ae2:	a3 fc       	sbrc	r10, 3
 ae4:	11 c0       	rjmp	.+34     	; 0xb08 <vfprintf+0x326>
 ae6:	a0 fe       	sbrs	r10, 0
 ae8:	06 c0       	rjmp	.+12     	; 0xaf6 <vfprintf+0x314>
 aea:	b2 14       	cp	r11, r2
 aec:	88 f4       	brcc	.+34     	; 0xb10 <vfprintf+0x32e>
 aee:	28 0c       	add	r2, r8
 af0:	92 2c       	mov	r9, r2
 af2:	9b 18       	sub	r9, r11
 af4:	0e c0       	rjmp	.+28     	; 0xb12 <vfprintf+0x330>
 af6:	b2 14       	cp	r11, r2
 af8:	60 f4       	brcc	.+24     	; 0xb12 <vfprintf+0x330>
 afa:	b6 01       	movw	r22, r12
 afc:	80 e2       	ldi	r24, 0x20	; 32
 afe:	90 e0       	ldi	r25, 0x00	; 0
 b00:	0e 94 2c 07 	call	0xe58	; 0xe58 <fputc>
 b04:	b3 94       	inc	r11
 b06:	f7 cf       	rjmp	.-18     	; 0xaf6 <vfprintf+0x314>
 b08:	b2 14       	cp	r11, r2
 b0a:	18 f4       	brcc	.+6      	; 0xb12 <vfprintf+0x330>
 b0c:	2b 18       	sub	r2, r11
 b0e:	02 c0       	rjmp	.+4      	; 0xb14 <vfprintf+0x332>
 b10:	98 2c       	mov	r9, r8
 b12:	21 2c       	mov	r2, r1
 b14:	a4 fe       	sbrs	r10, 4
 b16:	10 c0       	rjmp	.+32     	; 0xb38 <vfprintf+0x356>
 b18:	b6 01       	movw	r22, r12
 b1a:	80 e3       	ldi	r24, 0x30	; 48
 b1c:	90 e0       	ldi	r25, 0x00	; 0
 b1e:	0e 94 2c 07 	call	0xe58	; 0xe58 <fputc>
 b22:	a2 fe       	sbrs	r10, 2
 b24:	17 c0       	rjmp	.+46     	; 0xb54 <vfprintf+0x372>
 b26:	a1 fc       	sbrc	r10, 1
 b28:	03 c0       	rjmp	.+6      	; 0xb30 <vfprintf+0x34e>
 b2a:	88 e7       	ldi	r24, 0x78	; 120
 b2c:	90 e0       	ldi	r25, 0x00	; 0
 b2e:	02 c0       	rjmp	.+4      	; 0xb34 <vfprintf+0x352>
 b30:	88 e5       	ldi	r24, 0x58	; 88
 b32:	90 e0       	ldi	r25, 0x00	; 0
 b34:	b6 01       	movw	r22, r12
 b36:	0c c0       	rjmp	.+24     	; 0xb50 <vfprintf+0x36e>
 b38:	8a 2d       	mov	r24, r10
 b3a:	86 78       	andi	r24, 0x86	; 134
 b3c:	59 f0       	breq	.+22     	; 0xb54 <vfprintf+0x372>
 b3e:	a1 fe       	sbrs	r10, 1
 b40:	02 c0       	rjmp	.+4      	; 0xb46 <vfprintf+0x364>
 b42:	8b e2       	ldi	r24, 0x2B	; 43
 b44:	01 c0       	rjmp	.+2      	; 0xb48 <vfprintf+0x366>
 b46:	80 e2       	ldi	r24, 0x20	; 32
 b48:	a7 fc       	sbrc	r10, 7
 b4a:	8d e2       	ldi	r24, 0x2D	; 45
 b4c:	b6 01       	movw	r22, r12
 b4e:	90 e0       	ldi	r25, 0x00	; 0
 b50:	0e 94 2c 07 	call	0xe58	; 0xe58 <fputc>
 b54:	89 14       	cp	r8, r9
 b56:	38 f4       	brcc	.+14     	; 0xb66 <vfprintf+0x384>
 b58:	b6 01       	movw	r22, r12
 b5a:	80 e3       	ldi	r24, 0x30	; 48
 b5c:	90 e0       	ldi	r25, 0x00	; 0
 b5e:	0e 94 2c 07 	call	0xe58	; 0xe58 <fputc>
 b62:	9a 94       	dec	r9
 b64:	f7 cf       	rjmp	.-18     	; 0xb54 <vfprintf+0x372>
 b66:	8a 94       	dec	r8
 b68:	f3 01       	movw	r30, r6
 b6a:	e8 0d       	add	r30, r8
 b6c:	f1 1d       	adc	r31, r1
 b6e:	80 81       	ld	r24, Z
 b70:	b6 01       	movw	r22, r12
 b72:	90 e0       	ldi	r25, 0x00	; 0
 b74:	0e 94 2c 07 	call	0xe58	; 0xe58 <fputc>
 b78:	81 10       	cpse	r8, r1
 b7a:	f5 cf       	rjmp	.-22     	; 0xb66 <vfprintf+0x384>
 b7c:	22 20       	and	r2, r2
 b7e:	09 f4       	brne	.+2      	; 0xb82 <vfprintf+0x3a0>
 b80:	42 ce       	rjmp	.-892    	; 0x806 <vfprintf+0x24>
 b82:	b6 01       	movw	r22, r12
 b84:	80 e2       	ldi	r24, 0x20	; 32
 b86:	90 e0       	ldi	r25, 0x00	; 0
 b88:	0e 94 2c 07 	call	0xe58	; 0xe58 <fputc>
 b8c:	2a 94       	dec	r2
 b8e:	f6 cf       	rjmp	.-20     	; 0xb7c <vfprintf+0x39a>
 b90:	f6 01       	movw	r30, r12
 b92:	86 81       	ldd	r24, Z+6	; 0x06
 b94:	97 81       	ldd	r25, Z+7	; 0x07
 b96:	02 c0       	rjmp	.+4      	; 0xb9c <vfprintf+0x3ba>
 b98:	8f ef       	ldi	r24, 0xFF	; 255
 b9a:	9f ef       	ldi	r25, 0xFF	; 255
 b9c:	2b 96       	adiw	r28, 0x0b	; 11
 b9e:	e2 e1       	ldi	r30, 0x12	; 18
 ba0:	0c 94 e2 07 	jmp	0xfc4	; 0xfc4 <__epilogue_restores__>

00000ba4 <calloc>:
 ba4:	0f 93       	push	r16
 ba6:	1f 93       	push	r17
 ba8:	cf 93       	push	r28
 baa:	df 93       	push	r29
 bac:	86 9f       	mul	r24, r22
 bae:	80 01       	movw	r16, r0
 bb0:	87 9f       	mul	r24, r23
 bb2:	10 0d       	add	r17, r0
 bb4:	96 9f       	mul	r25, r22
 bb6:	10 0d       	add	r17, r0
 bb8:	11 24       	eor	r1, r1
 bba:	c8 01       	movw	r24, r16
 bbc:	0e 94 ee 05 	call	0xbdc	; 0xbdc <malloc>
 bc0:	ec 01       	movw	r28, r24
 bc2:	00 97       	sbiw	r24, 0x00	; 0
 bc4:	29 f0       	breq	.+10     	; 0xbd0 <calloc+0x2c>
 bc6:	a8 01       	movw	r20, r16
 bc8:	60 e0       	ldi	r22, 0x00	; 0
 bca:	70 e0       	ldi	r23, 0x00	; 0
 bcc:	0e 94 1a 07 	call	0xe34	; 0xe34 <memset>
 bd0:	ce 01       	movw	r24, r28
 bd2:	df 91       	pop	r29
 bd4:	cf 91       	pop	r28
 bd6:	1f 91       	pop	r17
 bd8:	0f 91       	pop	r16
 bda:	08 95       	ret

00000bdc <malloc>:
 bdc:	0f 93       	push	r16
 bde:	1f 93       	push	r17
 be0:	cf 93       	push	r28
 be2:	df 93       	push	r29
 be4:	82 30       	cpi	r24, 0x02	; 2
 be6:	91 05       	cpc	r25, r1
 be8:	10 f4       	brcc	.+4      	; 0xbee <malloc+0x12>
 bea:	82 e0       	ldi	r24, 0x02	; 2
 bec:	90 e0       	ldi	r25, 0x00	; 0
 bee:	e0 91 aa 01 	lds	r30, 0x01AA	; 0x8001aa <__flp>
 bf2:	f0 91 ab 01 	lds	r31, 0x01AB	; 0x8001ab <__flp+0x1>
 bf6:	20 e0       	ldi	r18, 0x00	; 0
 bf8:	30 e0       	ldi	r19, 0x00	; 0
 bfa:	a0 e0       	ldi	r26, 0x00	; 0
 bfc:	b0 e0       	ldi	r27, 0x00	; 0
 bfe:	30 97       	sbiw	r30, 0x00	; 0
 c00:	19 f1       	breq	.+70     	; 0xc48 <malloc+0x6c>
 c02:	40 81       	ld	r20, Z
 c04:	51 81       	ldd	r21, Z+1	; 0x01
 c06:	02 81       	ldd	r16, Z+2	; 0x02
 c08:	13 81       	ldd	r17, Z+3	; 0x03
 c0a:	48 17       	cp	r20, r24
 c0c:	59 07       	cpc	r21, r25
 c0e:	c8 f0       	brcs	.+50     	; 0xc42 <malloc+0x66>
 c10:	84 17       	cp	r24, r20
 c12:	95 07       	cpc	r25, r21
 c14:	69 f4       	brne	.+26     	; 0xc30 <malloc+0x54>
 c16:	10 97       	sbiw	r26, 0x00	; 0
 c18:	31 f0       	breq	.+12     	; 0xc26 <malloc+0x4a>
 c1a:	12 96       	adiw	r26, 0x02	; 2
 c1c:	0c 93       	st	X, r16
 c1e:	12 97       	sbiw	r26, 0x02	; 2
 c20:	13 96       	adiw	r26, 0x03	; 3
 c22:	1c 93       	st	X, r17
 c24:	27 c0       	rjmp	.+78     	; 0xc74 <malloc+0x98>
 c26:	00 93 aa 01 	sts	0x01AA, r16	; 0x8001aa <__flp>
 c2a:	10 93 ab 01 	sts	0x01AB, r17	; 0x8001ab <__flp+0x1>
 c2e:	22 c0       	rjmp	.+68     	; 0xc74 <malloc+0x98>
 c30:	21 15       	cp	r18, r1
 c32:	31 05       	cpc	r19, r1
 c34:	19 f0       	breq	.+6      	; 0xc3c <malloc+0x60>
 c36:	42 17       	cp	r20, r18
 c38:	53 07       	cpc	r21, r19
 c3a:	18 f4       	brcc	.+6      	; 0xc42 <malloc+0x66>
 c3c:	9a 01       	movw	r18, r20
 c3e:	bd 01       	movw	r22, r26
 c40:	ef 01       	movw	r28, r30
 c42:	df 01       	movw	r26, r30
 c44:	f8 01       	movw	r30, r16
 c46:	db cf       	rjmp	.-74     	; 0xbfe <malloc+0x22>
 c48:	21 15       	cp	r18, r1
 c4a:	31 05       	cpc	r19, r1
 c4c:	f9 f0       	breq	.+62     	; 0xc8c <malloc+0xb0>
 c4e:	28 1b       	sub	r18, r24
 c50:	39 0b       	sbc	r19, r25
 c52:	24 30       	cpi	r18, 0x04	; 4
 c54:	31 05       	cpc	r19, r1
 c56:	80 f4       	brcc	.+32     	; 0xc78 <malloc+0x9c>
 c58:	8a 81       	ldd	r24, Y+2	; 0x02
 c5a:	9b 81       	ldd	r25, Y+3	; 0x03
 c5c:	61 15       	cp	r22, r1
 c5e:	71 05       	cpc	r23, r1
 c60:	21 f0       	breq	.+8      	; 0xc6a <malloc+0x8e>
 c62:	fb 01       	movw	r30, r22
 c64:	93 83       	std	Z+3, r25	; 0x03
 c66:	82 83       	std	Z+2, r24	; 0x02
 c68:	04 c0       	rjmp	.+8      	; 0xc72 <malloc+0x96>
 c6a:	90 93 ab 01 	sts	0x01AB, r25	; 0x8001ab <__flp+0x1>
 c6e:	80 93 aa 01 	sts	0x01AA, r24	; 0x8001aa <__flp>
 c72:	fe 01       	movw	r30, r28
 c74:	32 96       	adiw	r30, 0x02	; 2
 c76:	44 c0       	rjmp	.+136    	; 0xd00 <malloc+0x124>
 c78:	fe 01       	movw	r30, r28
 c7a:	e2 0f       	add	r30, r18
 c7c:	f3 1f       	adc	r31, r19
 c7e:	81 93       	st	Z+, r24
 c80:	91 93       	st	Z+, r25
 c82:	22 50       	subi	r18, 0x02	; 2
 c84:	31 09       	sbc	r19, r1
 c86:	39 83       	std	Y+1, r19	; 0x01
 c88:	28 83       	st	Y, r18
 c8a:	3a c0       	rjmp	.+116    	; 0xd00 <malloc+0x124>
 c8c:	20 91 a8 01 	lds	r18, 0x01A8	; 0x8001a8 <__brkval>
 c90:	30 91 a9 01 	lds	r19, 0x01A9	; 0x8001a9 <__brkval+0x1>
 c94:	23 2b       	or	r18, r19
 c96:	41 f4       	brne	.+16     	; 0xca8 <malloc+0xcc>
 c98:	20 91 02 01 	lds	r18, 0x0102	; 0x800102 <__malloc_heap_start>
 c9c:	30 91 03 01 	lds	r19, 0x0103	; 0x800103 <__malloc_heap_start+0x1>
 ca0:	30 93 a9 01 	sts	0x01A9, r19	; 0x8001a9 <__brkval+0x1>
 ca4:	20 93 a8 01 	sts	0x01A8, r18	; 0x8001a8 <__brkval>
 ca8:	20 91 00 01 	lds	r18, 0x0100	; 0x800100 <__data_start>
 cac:	30 91 01 01 	lds	r19, 0x0101	; 0x800101 <__data_start+0x1>
 cb0:	21 15       	cp	r18, r1
 cb2:	31 05       	cpc	r19, r1
 cb4:	41 f4       	brne	.+16     	; 0xcc6 <malloc+0xea>
 cb6:	2d b7       	in	r18, 0x3d	; 61
 cb8:	3e b7       	in	r19, 0x3e	; 62
 cba:	40 91 04 01 	lds	r20, 0x0104	; 0x800104 <__malloc_margin>
 cbe:	50 91 05 01 	lds	r21, 0x0105	; 0x800105 <__malloc_margin+0x1>
 cc2:	24 1b       	sub	r18, r20
 cc4:	35 0b       	sbc	r19, r21
 cc6:	e0 91 a8 01 	lds	r30, 0x01A8	; 0x8001a8 <__brkval>
 cca:	f0 91 a9 01 	lds	r31, 0x01A9	; 0x8001a9 <__brkval+0x1>
 cce:	e2 17       	cp	r30, r18
 cd0:	f3 07       	cpc	r31, r19
 cd2:	a0 f4       	brcc	.+40     	; 0xcfc <malloc+0x120>
 cd4:	2e 1b       	sub	r18, r30
 cd6:	3f 0b       	sbc	r19, r31
 cd8:	28 17       	cp	r18, r24
 cda:	39 07       	cpc	r19, r25
 cdc:	78 f0       	brcs	.+30     	; 0xcfc <malloc+0x120>
 cde:	ac 01       	movw	r20, r24
 ce0:	4e 5f       	subi	r20, 0xFE	; 254
 ce2:	5f 4f       	sbci	r21, 0xFF	; 255
 ce4:	24 17       	cp	r18, r20
 ce6:	35 07       	cpc	r19, r21
 ce8:	48 f0       	brcs	.+18     	; 0xcfc <malloc+0x120>
 cea:	4e 0f       	add	r20, r30
 cec:	5f 1f       	adc	r21, r31
 cee:	50 93 a9 01 	sts	0x01A9, r21	; 0x8001a9 <__brkval+0x1>
 cf2:	40 93 a8 01 	sts	0x01A8, r20	; 0x8001a8 <__brkval>
 cf6:	81 93       	st	Z+, r24
 cf8:	91 93       	st	Z+, r25
 cfa:	02 c0       	rjmp	.+4      	; 0xd00 <malloc+0x124>
 cfc:	e0 e0       	ldi	r30, 0x00	; 0
 cfe:	f0 e0       	ldi	r31, 0x00	; 0
 d00:	cf 01       	movw	r24, r30
 d02:	df 91       	pop	r29
 d04:	cf 91       	pop	r28
 d06:	1f 91       	pop	r17
 d08:	0f 91       	pop	r16
 d0a:	08 95       	ret

00000d0c <free>:
 d0c:	cf 93       	push	r28
 d0e:	df 93       	push	r29
 d10:	00 97       	sbiw	r24, 0x00	; 0
 d12:	09 f4       	brne	.+2      	; 0xd16 <free+0xa>
 d14:	81 c0       	rjmp	.+258    	; 0xe18 <free+0x10c>
 d16:	fc 01       	movw	r30, r24
 d18:	32 97       	sbiw	r30, 0x02	; 2
 d1a:	13 82       	std	Z+3, r1	; 0x03
 d1c:	12 82       	std	Z+2, r1	; 0x02
 d1e:	a0 91 aa 01 	lds	r26, 0x01AA	; 0x8001aa <__flp>
 d22:	b0 91 ab 01 	lds	r27, 0x01AB	; 0x8001ab <__flp+0x1>
 d26:	10 97       	sbiw	r26, 0x00	; 0
 d28:	81 f4       	brne	.+32     	; 0xd4a <free+0x3e>
 d2a:	20 81       	ld	r18, Z
 d2c:	31 81       	ldd	r19, Z+1	; 0x01
 d2e:	82 0f       	add	r24, r18
 d30:	93 1f       	adc	r25, r19
 d32:	20 91 a8 01 	lds	r18, 0x01A8	; 0x8001a8 <__brkval>
 d36:	30 91 a9 01 	lds	r19, 0x01A9	; 0x8001a9 <__brkval+0x1>
 d3a:	28 17       	cp	r18, r24
 d3c:	39 07       	cpc	r19, r25
 d3e:	51 f5       	brne	.+84     	; 0xd94 <free+0x88>
 d40:	f0 93 a9 01 	sts	0x01A9, r31	; 0x8001a9 <__brkval+0x1>
 d44:	e0 93 a8 01 	sts	0x01A8, r30	; 0x8001a8 <__brkval>
 d48:	67 c0       	rjmp	.+206    	; 0xe18 <free+0x10c>
 d4a:	ed 01       	movw	r28, r26
 d4c:	20 e0       	ldi	r18, 0x00	; 0
 d4e:	30 e0       	ldi	r19, 0x00	; 0
 d50:	ce 17       	cp	r28, r30
 d52:	df 07       	cpc	r29, r31
 d54:	40 f4       	brcc	.+16     	; 0xd66 <free+0x5a>
 d56:	4a 81       	ldd	r20, Y+2	; 0x02
 d58:	5b 81       	ldd	r21, Y+3	; 0x03
 d5a:	9e 01       	movw	r18, r28
 d5c:	41 15       	cp	r20, r1
 d5e:	51 05       	cpc	r21, r1
 d60:	f1 f0       	breq	.+60     	; 0xd9e <free+0x92>
 d62:	ea 01       	movw	r28, r20
 d64:	f5 cf       	rjmp	.-22     	; 0xd50 <free+0x44>
 d66:	d3 83       	std	Z+3, r29	; 0x03
 d68:	c2 83       	std	Z+2, r28	; 0x02
 d6a:	40 81       	ld	r20, Z
 d6c:	51 81       	ldd	r21, Z+1	; 0x01
 d6e:	84 0f       	add	r24, r20
 d70:	95 1f       	adc	r25, r21
 d72:	c8 17       	cp	r28, r24
 d74:	d9 07       	cpc	r29, r25
 d76:	59 f4       	brne	.+22     	; 0xd8e <free+0x82>
 d78:	88 81       	ld	r24, Y
 d7a:	99 81       	ldd	r25, Y+1	; 0x01
 d7c:	84 0f       	add	r24, r20
 d7e:	95 1f       	adc	r25, r21
 d80:	02 96       	adiw	r24, 0x02	; 2
 d82:	91 83       	std	Z+1, r25	; 0x01
 d84:	80 83       	st	Z, r24
 d86:	8a 81       	ldd	r24, Y+2	; 0x02
 d88:	9b 81       	ldd	r25, Y+3	; 0x03
 d8a:	93 83       	std	Z+3, r25	; 0x03
 d8c:	82 83       	std	Z+2, r24	; 0x02
 d8e:	21 15       	cp	r18, r1
 d90:	31 05       	cpc	r19, r1
 d92:	29 f4       	brne	.+10     	; 0xd9e <free+0x92>
 d94:	f0 93 ab 01 	sts	0x01AB, r31	; 0x8001ab <__flp+0x1>
 d98:	e0 93 aa 01 	sts	0x01AA, r30	; 0x8001aa <__flp>
 d9c:	3d c0       	rjmp	.+122    	; 0xe18 <free+0x10c>
 d9e:	e9 01       	movw	r28, r18
 da0:	fb 83       	std	Y+3, r31	; 0x03
 da2:	ea 83       	std	Y+2, r30	; 0x02
 da4:	49 91       	ld	r20, Y+
 da6:	59 91       	ld	r21, Y+
 da8:	c4 0f       	add	r28, r20
 daa:	d5 1f       	adc	r29, r21
 dac:	ec 17       	cp	r30, r28
 dae:	fd 07       	cpc	r31, r29
 db0:	61 f4       	brne	.+24     	; 0xdca <free+0xbe>
 db2:	80 81       	ld	r24, Z
 db4:	91 81       	ldd	r25, Z+1	; 0x01
 db6:	84 0f       	add	r24, r20
 db8:	95 1f       	adc	r25, r21
 dba:	02 96       	adiw	r24, 0x02	; 2
 dbc:	e9 01       	movw	r28, r18
 dbe:	99 83       	std	Y+1, r25	; 0x01
 dc0:	88 83       	st	Y, r24
 dc2:	82 81       	ldd	r24, Z+2	; 0x02
 dc4:	93 81       	ldd	r25, Z+3	; 0x03
 dc6:	9b 83       	std	Y+3, r25	; 0x03
 dc8:	8a 83       	std	Y+2, r24	; 0x02
 dca:	e0 e0       	ldi	r30, 0x00	; 0
 dcc:	f0 e0       	ldi	r31, 0x00	; 0
 dce:	12 96       	adiw	r26, 0x02	; 2
 dd0:	8d 91       	ld	r24, X+
 dd2:	9c 91       	ld	r25, X
 dd4:	13 97       	sbiw	r26, 0x03	; 3
 dd6:	00 97       	sbiw	r24, 0x00	; 0
 dd8:	19 f0       	breq	.+6      	; 0xde0 <free+0xd4>
 dda:	fd 01       	movw	r30, r26
 ddc:	dc 01       	movw	r26, r24
 dde:	f7 cf       	rjmp	.-18     	; 0xdce <free+0xc2>
 de0:	8d 91       	ld	r24, X+
 de2:	9c 91       	ld	r25, X
 de4:	11 97       	sbiw	r26, 0x01	; 1
 de6:	9d 01       	movw	r18, r26
 de8:	2e 5f       	subi	r18, 0xFE	; 254
 dea:	3f 4f       	sbci	r19, 0xFF	; 255
 dec:	82 0f       	add	r24, r18
 dee:	93 1f       	adc	r25, r19
 df0:	20 91 a8 01 	lds	r18, 0x01A8	; 0x8001a8 <__brkval>
 df4:	30 91 a9 01 	lds	r19, 0x01A9	; 0x8001a9 <__brkval+0x1>
 df8:	28 17       	cp	r18, r24
 dfa:	39 07       	cpc	r19, r25
 dfc:	69 f4       	brne	.+26     	; 0xe18 <free+0x10c>
 dfe:	30 97       	sbiw	r30, 0x00	; 0
 e00:	29 f4       	brne	.+10     	; 0xe0c <free+0x100>
 e02:	10 92 ab 01 	sts	0x01AB, r1	; 0x8001ab <__flp+0x1>
 e06:	10 92 aa 01 	sts	0x01AA, r1	; 0x8001aa <__flp>
 e0a:	02 c0       	rjmp	.+4      	; 0xe10 <free+0x104>
 e0c:	13 82       	std	Z+3, r1	; 0x03
 e0e:	12 82       	std	Z+2, r1	; 0x02
 e10:	b0 93 a9 01 	sts	0x01A9, r27	; 0x8001a9 <__brkval+0x1>
 e14:	a0 93 a8 01 	sts	0x01A8, r26	; 0x8001a8 <__brkval>
 e18:	df 91       	pop	r29
 e1a:	cf 91       	pop	r28
 e1c:	08 95       	ret

00000e1e <strnlen_P>:
 e1e:	fc 01       	movw	r30, r24
 e20:	05 90       	lpm	r0, Z+
 e22:	61 50       	subi	r22, 0x01	; 1
 e24:	70 40       	sbci	r23, 0x00	; 0
 e26:	01 10       	cpse	r0, r1
 e28:	d8 f7       	brcc	.-10     	; 0xe20 <strnlen_P+0x2>
 e2a:	80 95       	com	r24
 e2c:	90 95       	com	r25
 e2e:	8e 0f       	add	r24, r30
 e30:	9f 1f       	adc	r25, r31
 e32:	08 95       	ret

00000e34 <memset>:
 e34:	dc 01       	movw	r26, r24
 e36:	01 c0       	rjmp	.+2      	; 0xe3a <memset+0x6>
 e38:	6d 93       	st	X+, r22
 e3a:	41 50       	subi	r20, 0x01	; 1
 e3c:	50 40       	sbci	r21, 0x00	; 0
 e3e:	e0 f7       	brcc	.-8      	; 0xe38 <memset+0x4>
 e40:	08 95       	ret

00000e42 <strnlen>:
 e42:	fc 01       	movw	r30, r24
 e44:	61 50       	subi	r22, 0x01	; 1
 e46:	70 40       	sbci	r23, 0x00	; 0
 e48:	01 90       	ld	r0, Z+
 e4a:	01 10       	cpse	r0, r1
 e4c:	d8 f7       	brcc	.-10     	; 0xe44 <strnlen+0x2>
 e4e:	80 95       	com	r24
 e50:	90 95       	com	r25
 e52:	8e 0f       	add	r24, r30
 e54:	9f 1f       	adc	r25, r31
 e56:	08 95       	ret

00000e58 <fputc>:
 e58:	0f 93       	push	r16
 e5a:	1f 93       	push	r17
 e5c:	cf 93       	push	r28
 e5e:	df 93       	push	r29
 e60:	fb 01       	movw	r30, r22
 e62:	23 81       	ldd	r18, Z+3	; 0x03
 e64:	21 fd       	sbrc	r18, 1
 e66:	03 c0       	rjmp	.+6      	; 0xe6e <fputc+0x16>
 e68:	8f ef       	ldi	r24, 0xFF	; 255
 e6a:	9f ef       	ldi	r25, 0xFF	; 255
 e6c:	2c c0       	rjmp	.+88     	; 0xec6 <fputc+0x6e>
 e6e:	22 ff       	sbrs	r18, 2
 e70:	16 c0       	rjmp	.+44     	; 0xe9e <fputc+0x46>
 e72:	46 81       	ldd	r20, Z+6	; 0x06
 e74:	57 81       	ldd	r21, Z+7	; 0x07
 e76:	24 81       	ldd	r18, Z+4	; 0x04
 e78:	35 81       	ldd	r19, Z+5	; 0x05
 e7a:	42 17       	cp	r20, r18
 e7c:	53 07       	cpc	r21, r19
 e7e:	44 f4       	brge	.+16     	; 0xe90 <fputc+0x38>
 e80:	a0 81       	ld	r26, Z
 e82:	b1 81       	ldd	r27, Z+1	; 0x01
 e84:	9d 01       	movw	r18, r26
 e86:	2f 5f       	subi	r18, 0xFF	; 255
 e88:	3f 4f       	sbci	r19, 0xFF	; 255
 e8a:	31 83       	std	Z+1, r19	; 0x01
 e8c:	20 83       	st	Z, r18
 e8e:	8c 93       	st	X, r24
 e90:	26 81       	ldd	r18, Z+6	; 0x06
 e92:	37 81       	ldd	r19, Z+7	; 0x07
 e94:	2f 5f       	subi	r18, 0xFF	; 255
 e96:	3f 4f       	sbci	r19, 0xFF	; 255
 e98:	37 83       	std	Z+7, r19	; 0x07
 e9a:	26 83       	std	Z+6, r18	; 0x06
 e9c:	14 c0       	rjmp	.+40     	; 0xec6 <fputc+0x6e>
 e9e:	8b 01       	movw	r16, r22
 ea0:	ec 01       	movw	r28, r24
 ea2:	fb 01       	movw	r30, r22
 ea4:	00 84       	ldd	r0, Z+8	; 0x08
 ea6:	f1 85       	ldd	r31, Z+9	; 0x09
 ea8:	e0 2d       	mov	r30, r0
 eaa:	09 95       	icall
 eac:	89 2b       	or	r24, r25
 eae:	e1 f6       	brne	.-72     	; 0xe68 <fputc+0x10>
 eb0:	d8 01       	movw	r26, r16
 eb2:	16 96       	adiw	r26, 0x06	; 6
 eb4:	8d 91       	ld	r24, X+
 eb6:	9c 91       	ld	r25, X
 eb8:	17 97       	sbiw	r26, 0x07	; 7
 eba:	01 96       	adiw	r24, 0x01	; 1
 ebc:	17 96       	adiw	r26, 0x07	; 7
 ebe:	9c 93       	st	X, r25
 ec0:	8e 93       	st	-X, r24
 ec2:	16 97       	sbiw	r26, 0x06	; 6
 ec4:	ce 01       	movw	r24, r28
 ec6:	df 91       	pop	r29
 ec8:	cf 91       	pop	r28
 eca:	1f 91       	pop	r17
 ecc:	0f 91       	pop	r16
 ece:	08 95       	ret

00000ed0 <__ultoa_invert>:
 ed0:	fa 01       	movw	r30, r20
 ed2:	aa 27       	eor	r26, r26
 ed4:	28 30       	cpi	r18, 0x08	; 8
 ed6:	51 f1       	breq	.+84     	; 0xf2c <__ultoa_invert+0x5c>
 ed8:	20 31       	cpi	r18, 0x10	; 16
 eda:	81 f1       	breq	.+96     	; 0xf3c <__ultoa_invert+0x6c>
 edc:	e8 94       	clt
 ede:	6f 93       	push	r22
 ee0:	6e 7f       	andi	r22, 0xFE	; 254
 ee2:	6e 5f       	subi	r22, 0xFE	; 254
 ee4:	7f 4f       	sbci	r23, 0xFF	; 255
 ee6:	8f 4f       	sbci	r24, 0xFF	; 255
 ee8:	9f 4f       	sbci	r25, 0xFF	; 255
 eea:	af 4f       	sbci	r26, 0xFF	; 255
 eec:	b1 e0       	ldi	r27, 0x01	; 1
 eee:	3e d0       	rcall	.+124    	; 0xf6c <__ultoa_invert+0x9c>
 ef0:	b4 e0       	ldi	r27, 0x04	; 4
 ef2:	3c d0       	rcall	.+120    	; 0xf6c <__ultoa_invert+0x9c>
 ef4:	67 0f       	add	r22, r23
 ef6:	78 1f       	adc	r23, r24
 ef8:	89 1f       	adc	r24, r25
 efa:	9a 1f       	adc	r25, r26
 efc:	a1 1d       	adc	r26, r1
 efe:	68 0f       	add	r22, r24
 f00:	79 1f       	adc	r23, r25
 f02:	8a 1f       	adc	r24, r26
 f04:	91 1d       	adc	r25, r1
 f06:	a1 1d       	adc	r26, r1
 f08:	6a 0f       	add	r22, r26
 f0a:	71 1d       	adc	r23, r1
 f0c:	81 1d       	adc	r24, r1
 f0e:	91 1d       	adc	r25, r1
 f10:	a1 1d       	adc	r26, r1
 f12:	20 d0       	rcall	.+64     	; 0xf54 <__ultoa_invert+0x84>
 f14:	09 f4       	brne	.+2      	; 0xf18 <__ultoa_invert+0x48>
 f16:	68 94       	set
 f18:	3f 91       	pop	r19
 f1a:	2a e0       	ldi	r18, 0x0A	; 10
 f1c:	26 9f       	mul	r18, r22
 f1e:	11 24       	eor	r1, r1
 f20:	30 19       	sub	r19, r0
 f22:	30 5d       	subi	r19, 0xD0	; 208
 f24:	31 93       	st	Z+, r19
 f26:	de f6       	brtc	.-74     	; 0xede <__ultoa_invert+0xe>
 f28:	cf 01       	movw	r24, r30
 f2a:	08 95       	ret
 f2c:	46 2f       	mov	r20, r22
 f2e:	47 70       	andi	r20, 0x07	; 7
 f30:	40 5d       	subi	r20, 0xD0	; 208
 f32:	41 93       	st	Z+, r20
 f34:	b3 e0       	ldi	r27, 0x03	; 3
 f36:	0f d0       	rcall	.+30     	; 0xf56 <__ultoa_invert+0x86>
 f38:	c9 f7       	brne	.-14     	; 0xf2c <__ultoa_invert+0x5c>
 f3a:	f6 cf       	rjmp	.-20     	; 0xf28 <__ultoa_invert+0x58>
 f3c:	46 2f       	mov	r20, r22
 f3e:	4f 70       	andi	r20, 0x0F	; 15
 f40:	40 5d       	subi	r20, 0xD0	; 208
 f42:	4a 33       	cpi	r20, 0x3A	; 58
 f44:	18 f0       	brcs	.+6      	; 0xf4c <__ultoa_invert+0x7c>
 f46:	49 5d       	subi	r20, 0xD9	; 217
 f48:	31 fd       	sbrc	r19, 1
 f4a:	40 52       	subi	r20, 0x20	; 32
 f4c:	41 93       	st	Z+, r20
 f4e:	02 d0       	rcall	.+4      	; 0xf54 <__ultoa_invert+0x84>
 f50:	a9 f7       	brne	.-22     	; 0xf3c <__ultoa_invert+0x6c>
 f52:	ea cf       	rjmp	.-44     	; 0xf28 <__ultoa_invert+0x58>
 f54:	b4 e0       	ldi	r27, 0x04	; 4
 f56:	a6 95       	lsr	r26
 f58:	97 95       	ror	r25
 f5a:	87 95       	ror	r24
 f5c:	77 95       	ror	r23
 f5e:	67 95       	ror	r22
 f60:	ba 95       	dec	r27
 f62:	c9 f7       	brne	.-14     	; 0xf56 <__ultoa_invert+0x86>
 f64:	00 97       	sbiw	r24, 0x00	; 0
 f66:	61 05       	cpc	r22, r1
 f68:	71 05       	cpc	r23, r1
 f6a:	08 95       	ret
 f6c:	9b 01       	movw	r18, r22
 f6e:	ac 01       	movw	r20, r24
 f70:	0a 2e       	mov	r0, r26
 f72:	06 94       	lsr	r0
 f74:	57 95       	ror	r21
 f76:	47 95       	ror	r20
 f78:	37 95       	ror	r19
 f7a:	27 95       	ror	r18
 f7c:	ba 95       	dec	r27
 f7e:	c9 f7       	brne	.-14     	; 0xf72 <__ultoa_invert+0xa2>
 f80:	62 0f       	add	r22, r18
 f82:	73 1f       	adc	r23, r19
 f84:	84 1f       	adc	r24, r20
 f86:	95 1f       	adc	r25, r21
 f88:	a0 1d       	adc	r26, r0
 f8a:	08 95       	ret

00000f8c <__prologue_saves__>:
 f8c:	2f 92       	push	r2
 f8e:	3f 92       	push	r3
 f90:	4f 92       	push	r4
 f92:	5f 92       	push	r5
 f94:	6f 92       	push	r6
 f96:	7f 92       	push	r7
 f98:	8f 92       	push	r8
 f9a:	9f 92       	push	r9
 f9c:	af 92       	push	r10
 f9e:	bf 92       	push	r11
 fa0:	cf 92       	push	r12
 fa2:	df 92       	push	r13
 fa4:	ef 92       	push	r14
 fa6:	ff 92       	push	r15
 fa8:	0f 93       	push	r16
 faa:	1f 93       	push	r17
 fac:	cf 93       	push	r28
 fae:	df 93       	push	r29
 fb0:	cd b7       	in	r28, 0x3d	; 61
 fb2:	de b7       	in	r29, 0x3e	; 62
 fb4:	ca 1b       	sub	r28, r26
 fb6:	db 0b       	sbc	r29, r27
 fb8:	0f b6       	in	r0, 0x3f	; 63
 fba:	f8 94       	cli
 fbc:	de bf       	out	0x3e, r29	; 62
 fbe:	0f be       	out	0x3f, r0	; 63
 fc0:	cd bf       	out	0x3d, r28	; 61
 fc2:	09 94       	ijmp

00000fc4 <__epilogue_restores__>:
 fc4:	2a 88       	ldd	r2, Y+18	; 0x12
 fc6:	39 88       	ldd	r3, Y+17	; 0x11
 fc8:	48 88       	ldd	r4, Y+16	; 0x10
 fca:	5f 84       	ldd	r5, Y+15	; 0x0f
 fcc:	6e 84       	ldd	r6, Y+14	; 0x0e
 fce:	7d 84       	ldd	r7, Y+13	; 0x0d
 fd0:	8c 84       	ldd	r8, Y+12	; 0x0c
 fd2:	9b 84       	ldd	r9, Y+11	; 0x0b
 fd4:	aa 84       	ldd	r10, Y+10	; 0x0a
 fd6:	b9 84       	ldd	r11, Y+9	; 0x09
 fd8:	c8 84       	ldd	r12, Y+8	; 0x08
 fda:	df 80       	ldd	r13, Y+7	; 0x07
 fdc:	ee 80       	ldd	r14, Y+6	; 0x06
 fde:	fd 80       	ldd	r15, Y+5	; 0x05
 fe0:	0c 81       	ldd	r16, Y+4	; 0x04
 fe2:	1b 81       	ldd	r17, Y+3	; 0x03
 fe4:	aa 81       	ldd	r26, Y+2	; 0x02
 fe6:	b9 81       	ldd	r27, Y+1	; 0x01
 fe8:	ce 0f       	add	r28, r30
 fea:	d1 1d       	adc	r29, r1
 fec:	0f b6       	in	r0, 0x3f	; 63
 fee:	f8 94       	cli
 ff0:	de bf       	out	0x3e, r29	; 62
 ff2:	0f be       	out	0x3f, r0	; 63
 ff4:	cd bf       	out	0x3d, r28	; 61
 ff6:	ed 01       	movw	r28, r26
 ff8:	08 95       	ret

00000ffa <_exit>:
 ffa:	f8 94       	cli

00000ffc <__stop_program>:
 ffc:	ff cf       	rjmp	.-2      	; 0xffc <__stop_program>
